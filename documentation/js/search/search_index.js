var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddOwnerDto.html",[0,0.073,1,1.805]],["body/classes/AddOwnerDto.html",[0,0.094,1,2.331,2,1.837,3,0.252,4,0.252,5,0.218,6,4.471,7,2.273,8,0.437,9,1.688,10,0.823,11,4.153,12,3.247,13,1.672,14,3.247,15,3.247,16,4.153,17,3.634,18,0.925,19,0.028,20,3.455,21,2.735,22,3.09,23,1.191,24,3.09,25,3.09,26,3.09,27,2.964,28,4.94,29,3.09,30,3.09,31,3.09,32,3.09,33,3.09,34,3.09,35,3.09,36,0.35,37,3.612,38,2.938,39,3.689,40,1.676,41,3.455,42,2.938,43,1.31,44,0.35,45,0.972,46,2.273,47,2.273,48,2.273,49,0.018,50,0.018]],["title/interfaces/Adress.html",[20,1.978,45,1.046]],["body/interfaces/Adress.html",[0,0.104,1,1.945,3,0.292,4,0.292,5,0.253,6,2.637,7,2.637,8,0.508,9,1.868,10,0.804,11,3.013,12,2.356,13,1.213,14,2.356,15,2.356,16,3.013,17,2.637,18,0.881,19,0.028,20,3.741,27,3.062,36,0.387,37,3.996,38,3.171,39,3.884,40,1.945,41,3.611,42,3.171,43,1.52,44,0.387,45,1.127,46,4.178,47,4.178,48,4.178,49,0.02,50,0.02,51,2.132]],["title/controllers/AppController.html",[52,1.213,53,2.186]],["body/controllers/AppController.html",[0,0.095,3,0.354,4,0.354,5,0.307,8,0.616,19,0.029,21,1.996,23,0.869,27,2.469,36,0.438,44,0.354,49,0.023,50,0.023,52,1.961,53,3.536,54,1.586,55,3.656,56,1.356,57,5.131,58,4.349,59,1.181,60,0.559,61,3.17,62,3.656,63,1.472,64,4.349,65,1.586,66,4.349]],["title/modules/AppModule.html",[67,1.126,68,2.186]],["body/modules/AppModule.html",[0,0.069,3,0.257,4,0.257,5,0.223,19,0.029,36,0.511,44,0.257,49,0.019,50,0.019,53,3.285,54,1.59,60,0.406,61,3.174,62,2.655,67,1.477,68,4.338,69,1.339,70,1.714,71,2.655,72,2.655,73,2.655,74,3.479,75,3.479,76,3.479,77,3.479,78,3.479,79,1.588,80,2.172,81,1.572,82,1.572,83,3.158,84,2.367,85,4.362,86,3.158,87,3.158,88,3.158,89,3.158,90,3.158,91,2.655,92,3.158,93,2.655,94,3.158,95,3.158,96,3.158,97,1.878,98,3.158,99,3.158]],["title/injectables/AppService.html",[61,1.805,100,0.516]],["body/injectables/AppService.html",[0,0.099,3,0.37,4,0.37,5,0.321,8,0.643,19,0.028,23,0.907,27,2.535,36,0.37,44,0.37,49,0.023,50,0.023,56,1.392,57,5.208,59,1.232,60,0.584,61,2.997,65,1.655,100,0.857,101,1.784,102,3.816,103,4.54,104,4.54,105,4.54]],["title/controllers/CartsController.html",[52,1.213,106,2.186]],["body/controllers/CartsController.html",[0,0.073,3,0.271,4,0.271,5,0.236,8,0.472,10,0.641,13,1.532,18,0.702,19,0.029,21,2.077,23,0.905,27,2.359,36,0.484,43,1.414,44,0.271,49,0.019,50,0.019,52,1.215,54,1.215,56,1.14,59,1.229,60,0.429,63,1.128,65,1.65,79,0.905,106,2.975,107,2.802,108,2.191,109,2.191,110,4.527,111,1.74,112,3.33,113,3.333,114,1.913,115,4.527,116,3.333,117,1.323,118,1.323,119,3.333,120,3.429,121,3.805,122,3.333,123,3.782,124,1.982,125,2.802,126,1.982,127,2.452,128,1.529,129,1.808,130,2.452,131,2.802,132,1.424,133,2.191,134,2.254,135,3.333,136,3.333,137,3.333,138,2.452,139,3.333,140,1.128,141,2.802,142,2.802,143,2.452,144,3.333]],["title/modules/CartsModule.html",[67,1.126,74,1.978]],["body/modules/CartsModule.html",[0,0.078,3,0.293,4,0.293,5,0.254,10,0.509,18,0.558,19,0.029,23,0.718,36,0.482,44,0.293,49,0.02,50,0.02,54,1.736,56,0.906,59,0.976,60,0.462,67,1.612,69,1.525,70,1.872,74,3.744,79,1.65,80,2.371,81,1.79,82,1.79,84,2.584,106,3.51,109,2.363,117,1.051,118,1.051,128,1.65,132,1.912,133,2.363,145,3.023,146,3.023,147,3.596,148,3.023,149,4.004,150,4.78,151,3.596,152,4.004,153,3.023,154,3.596,155,3.023,156,1.951,157,3.596,158,3.596,159,3.596,160,3.023,161,3.023,162,3.023,163,3.596]],["title/injectables/CartsService.html",[100,0.516,132,1.046]],["body/injectables/CartsService.html",[0,0.053,3,0.198,4,0.198,5,0.172,8,0.344,10,0.677,13,1.73,18,0.67,19,0.029,23,1.021,27,2.457,36,0.352,44,0.198,49,0.015,50,0.015,56,0.911,59,1.298,60,0.313,63,0.823,65,1.743,79,1.298,97,3.039,100,0.561,101,0.955,111,2.061,112,2.66,114,1.504,117,1.397,118,1.397,124,2.843,128,1.116,132,1.137,140,1.73,164,2.044,165,3.616,166,4.781,167,3.616,168,3.616,169,1.211,170,1.598,171,2.431,172,1.659,173,3.616,174,2.431,175,2.431,176,3.616,177,2.431,178,3.616,179,2.431,180,1.211,181,2.431,182,0.765,183,1.789,184,2.342,185,3.142,186,2.15,187,0.823,188,1.598,189,2.377,190,1.598,191,1.319,192,2.431,193,4.662,194,2.66,195,2.431,196,2.431,197,2.431,198,2.377,199,1.211,200,2.431,201,2.431,202,2.431,203,2.431,204,1.116,205,1.462,206,1.211,207,1.116,208,1.598,209,2.431,210,2.66,211,3.629,212,2.431,213,1.116,214,2.044,215,2.044,216,1.598,217,1.211,218,1.8,219,1.789]],["title/injectables/CheckingProductOnCartMiddleware.html",[100,0.516,220,1.978]],["body/injectables/CheckingProductOnCartMiddleware.html",[0,0.066,3,0.246,4,0.246,5,0.213,8,0.427,10,0.598,13,1.021,18,0.656,19,0.029,23,0.844,36,0.453,44,0.246,45,0.949,49,0.018,50,0.018,56,1.064,59,0.819,60,0.388,63,1.021,100,0.656,101,1.185,111,1.651,114,0.949,117,1.235,118,1.235,120,1.794,132,0.949,140,1.021,169,1.502,180,1.502,182,0.949,187,1.43,204,1.384,205,1.021,206,1.502,207,1.384,213,1.384,217,1.502,218,1.502,219,2.219,220,2.512,221,3.588,222,2.219,223,3.108,224,2.535,225,2.266,226,3.016,227,2.292,228,2.028,229,2.428,230,2.631,231,2.867,232,2.867,233,3.016,234,2.292,235,3.108,236,1.939,237,1.794,238,1.636,239,1.636,240,1.502,241,1.636,242,1.794,243,1.502,244,1.939,245,2.535,246,2.777,247,2.777,248,3.142,249,3.108,250,2.535,251,2.535,252,2.535,253,2.535,254,1.636]],["title/injectables/ExistingCartMiddleware.html",[100,0.516,156,1.805]],["body/injectables/ExistingCartMiddleware.html",[0,0.06,3,0.224,4,0.224,5,0.195,8,0.39,10,0.561,13,1.895,18,0.615,19,0.029,23,0.791,36,0.438,44,0.224,45,0.866,49,0.017,50,0.017,56,0.998,59,0.748,60,0.354,63,0.932,79,1.377,97,3.017,100,0.615,101,1.082,111,1.57,114,1.76,117,1.158,118,1.158,120,1.638,128,1.264,132,0.866,133,1.81,134,1.371,140,0.932,156,2.149,169,1.371,170,1.81,172,1.818,180,1.371,182,0.866,183,2.026,184,2.149,185,2.603,186,1.638,187,1.341,188,2.603,189,1.81,190,1.81,191,1.494,199,1.371,204,1.264,205,0.932,206,1.371,207,1.264,213,1.264,217,1.371,218,1.371,223,2.914,227,2.149,228,1.959,229,2.31,230,2.526,231,2.752,232,2.752,234,2.149,236,1.818,239,1.494,240,1.371,241,1.494,243,1.371,244,1.264,247,1.81,254,1.494,255,2.026,256,2.754,257,2.754,258,3.33,259,3.33,260,3.33,261,2.315,262,2.026]],["title/injectables/ExistingProductMiddleware.html",[100,0.516,263,1.978]],["body/injectables/ExistingProductMiddleware.html",[0,0.067,3,0.252,4,0.252,5,0.218,8,0.437,10,0.608,18,0.667,19,0.029,23,0.859,36,0.435,44,0.252,45,0.972,49,0.018,50,0.018,56,1.082,59,0.839,60,0.397,63,1.046,100,0.667,101,1.214,111,1.672,117,1.256,118,1.256,120,1.837,129,1.676,140,1.046,169,1.538,180,1.538,182,0.972,187,1.967,199,1.538,204,1.418,205,1.046,206,1.538,207,1.418,213,1.418,217,1.538,218,1.538,223,3.161,224,2.597,225,2.283,227,2.331,228,2.046,229,2.46,230,2.659,231,2.897,232,2.897,234,2.331,236,1.972,238,1.676,239,1.676,240,1.538,241,1.676,243,1.538,244,2.45,246,2.031,254,1.676,263,2.555,264,3.634,265,2.273,266,3.09,267,3.09,268,3.612,269,3.612,270,2.597,271,2.597,272,2.597]],["title/controllers/PaymentsController.html",[52,1.213,273,2.186]],["body/controllers/PaymentsController.html",[0,0.092,3,0.345,4,0.345,5,0.299,19,0.029,36,0.431,44,0.345,49,0.022,50,0.022,52,1.544,54,1.544,60,0.545,63,1.434,65,1.544,108,2.784,109,2.784,114,1.333,121,3.561,126,2.519,273,3.479,274,3.561,275,4.236,276,3.894,277,2.872,278,3.561,279,4.236,280,4.236,281,4.236,282,3.561,283,4.236,284,5.773,285,3.117,286,4.236,287,4.236,288,4.236]],["title/modules/PaymentsModule.html",[67,1.126,75,1.978]],["body/modules/PaymentsModule.html",[0,0.093,3,0.348,4,0.348,5,0.302,19,0.028,36,0.472,44,0.348,49,0.023,50,0.023,54,1.939,60,0.549,67,1.8,69,1.81,70,2.09,75,3.782,80,2.648,81,2.125,82,2.125,84,2.885,273,3.807,277,3.451,278,3.588,289,3.588,290,3.588,291,4.268,292,4.268]],["title/injectables/PaymentsService.html",[100,0.516,277,1.805]],["body/injectables/PaymentsService.html",[0,0.107,3,0.4,4,0.4,5,0.347,19,0.028,36,0.4,44,0.4,49,0.025,50,0.025,60,0.632,100,0.898,101,1.93,277,3.141,293,4.128]],["title/modules/PrismaModule.html",[67,1.126,76,1.978]],["body/modules/PrismaModule.html",[0,0.079,3,0.294,4,0.294,5,0.255,10,0.511,18,0.56,19,0.029,23,0.721,36,0.464,44,0.294,49,0.02,50,0.02,56,0.909,59,0.979,60,0.464,65,1.315,67,1.811,69,1.53,70,1.875,76,3.746,79,1.731,80,2.376,81,1.796,82,1.796,84,2.902,117,1.054,118,1.054,182,1.135,240,2.376,294,3.607,295,3.607,296,3.607,297,4.773,298,3.607,299,4.773,300,4.476,301,3.607,302,5.693,303,3.607,304,3.607,305,3.607,306,3.607,307,3.607,308,3.607,309,3.607]],["title/injectables/PrismaService.html",[79,0.903,100,0.516]],["body/injectables/PrismaService.html",[0,0.084,3,0.314,4,0.314,5,0.272,8,0.545,10,0.545,18,0.597,19,0.029,23,0.995,36,0.406,44,0.314,49,0.021,50,0.021,56,1.255,59,1.352,60,0.495,79,1.352,100,0.773,101,1.513,111,2.134,117,1.125,118,1.125,140,1.869,182,1.211,243,1.917,300,4.062,310,3.237,311,4.981,312,4.981,313,6.194,314,4.981,315,5.838,316,3.85,317,3.237,318,3.85,319,3.85,320,3.85,321,3.85,322,3.85]],["title/controllers/ProductsController.html",[52,1.213,323,1.978]],["body/controllers/ProductsController.html",[0,0.034,3,0.126,4,0.126,5,0.109,8,0.219,10,0.626,13,1.709,18,0.757,19,0.029,21,1.888,23,0.822,27,2.746,36,0.451,43,0.655,44,0.126,49,0.011,50,0.011,52,1.174,54,0.563,56,0.638,59,1.117,60,0.198,65,1.174,108,1.014,111,1.709,114,1.931,117,1.089,118,1.203,120,2.447,123,3.027,124,0.918,125,1.297,126,0.918,127,1.135,129,2.022,131,1.297,132,0.797,134,1.604,138,1.135,140,1.09,141,1.297,142,1.297,143,1.863,169,0.768,182,0.485,184,2.022,186,0.918,187,2.078,204,0.708,205,0.523,207,0.708,225,0.995,229,1.604,230,2.755,236,0.708,237,0.918,238,0.837,242,1.506,244,1.888,248,2.629,276,1.135,323,1.506,324,1.297,325,2.707,326,2.707,327,3.727,328,2.533,329,2.707,330,1.543,331,3.79,332,2.906,333,2.129,334,2.117,335,2.202,336,2.129,337,2.216,338,1.665,339,3.133,340,4.422,341,4.115,342,3.133,343,1.543,344,2.533,345,1.543,346,1.543,347,3.221,348,1.543,349,2.533,350,1.543,351,1.543,352,1.543,353,2.533,354,1.543,355,1.543,356,2.449,357,2.742,358,1.543,359,1.543,360,2.533,361,1.297,362,1.543,363,1.297,364,2.707,365,2.533,366,1.014,367,2.533,368,1.665,369,1.543,370,1.543,371,1.543,372,1.543,373,1.543,374,1.543,375,1.543,376,1.543,377,2.129,378,1.543,379,1.543,380,1.543,381,1.543,382,2.533,383,1.863,384,2.129,385,1.543,386,3.221,387,2.533,388,1.543,389,1.543,390,1.297,391,1.297,392,1.297,393,1.543,394,1.543,395,1.543,396,1.543,397,1.543,398,2.129,399,1.297,400,4.115,401,1.543,402,1.543,403,1.543,404,1.543,405,2.533,406,3.221,407,1.543,408,1.543,409,2.533,410,1.543,411,1.543,412,1.543,413,1.543]],["title/modules/ProductsModule.html",[67,1.126,77,1.978]],["body/modules/ProductsModule.html",[0,0.066,3,0.245,4,0.245,5,0.213,10,0.426,18,0.467,19,0.029,23,0.601,36,0.5,44,0.245,49,0.018,50,0.018,54,1.537,56,0.758,59,0.816,60,0.387,67,1.428,69,1.276,70,1.657,77,3.697,79,1.564,80,2.1,81,1.498,82,1.498,84,2.288,114,0.946,117,0.879,118,0.879,128,1.38,132,1.812,134,1.498,148,2.529,149,3.545,150,4.437,152,2.529,153,2.529,155,2.529,156,1.632,160,4.843,161,4.843,162,3.545,220,1.789,225,2.264,237,1.789,238,1.632,263,1.789,323,2.896,366,1.977,414,2.529,415,2.529,416,3.008,417,3.008,418,2.529,419,3.008,420,3.008,421,3.008,422,3.008,423,3.008,424,3.008,425,4.87,426,4.87,427,3.008,428,3.008,429,4.217,430,3.008,431,3.008]],["title/injectables/ProductsService.html",[100,0.516,225,1.307]],["body/injectables/ProductsService.html",[0,0.028,3,0.105,4,0.105,5,0.091,8,0.182,10,0.608,13,1.125,18,0.337,19,0.029,23,0.903,27,1.296,36,0.271,44,0.105,49,0.009,50,0.009,56,0.548,59,1.166,60,0.165,65,1.774,79,0.902,91,1.08,97,3.392,100,0.337,101,0.505,111,1.967,112,1.599,114,1.351,117,1.256,118,1.256,124,2.555,132,1.045,138,2.078,140,1.775,143,2.733,169,1.082,170,0.844,172,0.997,184,3.062,185,3.092,186,2.978,187,1.864,188,3.092,189,2.969,190,2.184,191,2.016,193,3.612,198,2.651,199,1.85,205,0.956,208,1.857,210,2.444,211,2.374,214,2.793,215,1.827,216,1.428,225,0.854,237,0.764,244,1.525,248,1.292,249,2.078,262,2.444,285,2.078,323,0.764,325,1.827,326,1.827,329,1.827,357,1.599,361,1.08,377,1.827,390,1.827,391,1.827,392,1.08,398,1.827,399,1.827,418,1.08,432,1.08,433,3.323,434,2.173,435,3.323,436,2.173,437,1.285,438,2.173,439,1.285,440,1.285,441,2.173,442,1.285,443,2.173,444,1.285,445,2.173,446,1.285,447,2.173,448,1.285,449,2.173,450,1.285,451,1.285,452,2.374,453,1.285,454,1.285,455,1.285,456,1.285,457,1.285,458,4.034,459,3.391,460,1.285,461,1.285,462,1.285,463,1.533,464,2.825,465,2.173,466,1.285,467,1.285,468,1.285,469,1.285,470,1.285,471,1.285,472,3.323,473,1.285,474,1.285,475,1.285,476,1.08,477,1.08,478,2.793,479,1.285,480,1.285,481,1.285,482,2.173,483,2.173,484,1.285,485,2.825,486,1.285,487,1.285,488,2.173,489,1.285,490,1.285,491,1.285,492,1.285,493,1.285,494,1.285,495,2.173,496,1.285,497,1.285,498,1.285]],["title/interfaces/Request.html",[45,1.046,228,1.213]],["body/interfaces/Request.html",[0,0.064,3,0.241,4,0.241,5,0.209,8,0.418,9,1.636,10,0.59,13,1.939,18,0.458,19,0.029,36,0.449,44,0.241,45,0.929,49,0.018,50,0.018,51,1.756,60,0.38,63,1,79,1.13,97,3.113,100,0.646,111,1,114,1.89,128,1.355,132,0.929,133,1.941,134,2.607,140,1,156,1.602,172,1.355,180,1.471,182,0.929,183,2.173,184,2.259,185,2.736,186,1.756,187,1.409,188,2.736,189,1.941,190,1.941,191,1.602,199,1.471,204,1.355,205,1,206,1.471,207,1.355,213,1.355,217,1.471,218,1.471,227,1.602,228,1.909,229,1.471,230,2.073,231,2.259,232,2.259,234,2.259,236,1.91,239,1.602,240,1.471,241,1.602,243,1.471,244,1.355,247,1.941,254,1.602,255,2.173,258,3.5,259,3.5,260,3.5,261,2.483,262,2.173]],["title/interfaces/Request-1.html",[45,0.877,228,1.016,463,1.512]],["body/interfaces/Request-1.html",[0,0.071,3,0.267,4,0.267,5,0.231,8,0.464,9,1.758,10,0.633,13,1.109,18,0.508,19,0.029,36,0.467,44,0.267,45,1.03,49,0.019,50,0.019,51,1.948,60,0.421,63,1.109,100,0.694,111,1.109,114,1.03,132,1.03,140,1.109,180,1.631,182,1.03,187,1.514,204,1.503,205,1.109,206,1.631,207,1.503,213,1.503,217,1.631,218,1.631,219,2.41,220,1.948,221,2.41,222,2.41,225,2.002,227,1.777,228,1.996,229,1.631,230,2.227,231,2.427,232,2.427,234,2.427,235,4.027,236,2.053,237,1.948,238,1.777,239,1.777,240,1.631,241,1.777,242,3.255,243,1.631,244,2.053,245,2.754,246,2.94,247,2.94,248,3.255,249,3.291,250,2.754,251,2.754,252,2.754,253,2.754,254,1.777]],["title/interfaces/Request-2.html",[45,0.877,208,1.832,228,1.016]],["body/interfaces/Request-2.html",[0,0.073,3,0.274,4,0.274,5,0.238,8,0.476,9,1.789,10,0.645,18,0.522,19,0.029,36,0.451,44,0.274,45,1.058,49,0.019,50,0.019,51,2,60,0.432,63,1.138,100,0.707,111,1.138,129,3.002,140,1.138,180,1.674,182,1.058,187,2.099,199,1.674,204,1.543,205,1.138,206,1.674,207,1.543,213,1.543,217,1.674,218,1.674,225,2.029,227,1.824,228,2.017,229,1.674,230,2.267,231,2.471,232,2.471,234,2.471,236,2.09,238,1.824,239,1.824,240,1.674,241,1.824,243,1.674,244,2.539,246,2.21,254,1.824,263,2,264,2.474,265,2.474,268,3.828,269,3.828,270,2.827,271,2.827,272,2.827]],["title/controllers/UsersController.html",[52,1.213,499,2.186]],["body/controllers/UsersController.html",[0,0.071,1,3.207,3,0.266,4,0.266,5,0.231,8,0.463,10,0.463,12,2.147,13,1.106,14,2.147,15,2.147,18,0.693,19,0.029,20,1.942,21,1.499,23,0.653,36,0.445,43,1.385,44,0.266,46,2.403,47,2.403,48,2.403,49,0.019,50,0.019,52,1.191,54,1.191,56,1.125,59,0.887,60,0.42,63,1.106,65,1.191,108,2.147,117,0.955,118,0.955,126,1.942,127,2.403,191,2.422,210,3.285,276,2.403,333,2.746,335,2.223,342,3.753,364,3.753,383,2.403,499,2.935,500,2.746,501,2.746,502,3.753,503,2.746,504,3.753,505,4.465,506,4.465,507,4.465,508,4.465,509,4.465,510,3.266,511,3.266,512,3.753,513,2.746,514,2.746,515,2.422,516,2.746,517,3.266,518,3.266,519,3.266,520,3.266,521,3.266,522,3.266,523,3.266,524,3.266,525,3.266,526,3.266,527,3.266,528,3.266,529,3.266,530,3.266,531,3.266,532,3.266,533,3.266,534,3.266,535,3.266,536,3.266,537,3.266,538,3.266,539,3.266,540,3.266]],["title/modules/UsersModule.html",[67,1.126,78,1.978]],["body/modules/UsersModule.html",[0,0.089,3,0.331,4,0.331,5,0.288,19,0.028,36,0.485,44,0.331,49,0.022,50,0.022,54,1.882,60,0.523,67,1.747,69,1.726,70,2.028,78,3.842,79,1.706,80,2.57,81,2.027,82,2.027,84,2.8,128,1.868,499,3.725,515,3.41,516,3.422,541,3.422,542,3.422,543,4.07,544,4.07]],["title/injectables/UsersService.html",[100,0.516,515,1.805]],["body/injectables/UsersService.html",[0,0.078,1,1.933,3,0.29,4,0.29,5,0.252,8,0.504,10,0.67,12,3.494,13,1.602,14,3.494,15,3.494,17,3.911,18,0.553,19,0.029,23,0.946,36,0.433,44,0.29,49,0.02,50,0.02,56,1.192,59,0.967,60,0.458,63,1.206,65,1.299,79,1.538,100,0.734,101,1.4,109,2.341,111,1.8,117,1.383,118,1.383,124,2.118,128,1.634,140,1.206,169,1.774,170,2.341,172,2.172,184,1.933,198,2.341,476,2.994,477,2.994,502,3.979,503,3.979,512,3.979,513,2.994,514,2.994,515,2.568,545,2.994,546,3.562,547,3.562,548,4.733,549,3.562]],["title/classes/addProductBodyDTO.html",[0,0.073,334,2.186]],["body/classes/addProductBodyDTO.html",[0,0.116,2,2.519,3,0.345,4,0.345,5,0.299,8,0.6,9,2.08,10,0.75,18,0.657,19,0.028,21,1.944,23,0.847,36,0.431,38,3.148,40,2.298,41,2.519,42,3.148,43,1.797,44,0.345,49,0.022,50,0.022,331,4.091,332,3.479,334,3.479,335,2.109,337,3.148,338,3.479,463,2.298,550,3.561,551,3.117,552,4.236,553,4.236,554,3.894]],["title/classes/addProductDTO.html",[0,0.073,368,2.186]],["body/classes/addProductDTO.html",[0,0.104,2,2.152,3,0.295,4,0.295,5,0.256,8,0.512,9,1.879,10,0.677,18,0.831,19,0.029,21,2.458,23,1.071,36,0.436,38,2.152,39,2.378,40,1.963,41,3.186,42,3.186,43,1.535,44,0.295,49,0.02,50,0.02,114,1.983,182,1.138,187,2.181,331,3.144,332,2.378,335,2.381,337,2.844,338,3.144,368,3.144,459,4.021,463,2.595,551,3.519,554,2.662,555,3.042,556,4.021,557,3.619,558,3.619,559,4.021,560,3.619,561,3.042,562,3.619]],["title/coverage.html",[563,3.8]],["body/coverage.html",[0,0.106,1,1.36,5,0.177,6,2.72,7,2.72,18,0.389,19,0.029,20,1.49,45,1.526,49,0.016,50,0.016,52,1.886,53,1.647,55,2.107,61,1.36,79,0.68,100,0.911,102,2.107,106,1.647,107,2.107,129,1.36,130,2.72,132,0.788,134,1.248,156,1.36,164,2.107,172,1.15,194,4.939,205,0.848,216,1.647,220,1.49,221,2.72,222,2.72,225,0.985,228,1.602,242,1.49,255,2.72,263,1.49,264,2.72,265,2.72,273,1.647,274,2.107,277,1.36,293,2.107,310,2.107,323,1.49,324,2.107,334,1.647,356,1.647,366,1.647,368,1.647,432,2.107,499,1.647,500,2.107,515,1.36,545,2.107,550,2.107,555,2.107,563,2.107,564,2.107,565,2.506,566,2.506,567,3.807,568,3.807,569,5.175,570,2.107,571,6.334,572,2.107,573,5.869,574,2.107,575,2.107,576,2.72,577,2.107,578,5.601,579,5.415,580,3.698,581,2.107,582,2.107,583,2.107,584,2.107,585,2.107,586,2.506,587,2.107,588,3.698,589,2.506,590,2.506,591,3.233,592,2.107,593,2.107,594,1.844,595,2.506,596,2.107]],["title/dependencies.html",[70,1.57,597,2.343]],["body/dependencies.html",[0,0.096,19,0.029,40,2.396,43,1.873,49,0.023,50,0.023,60,0.568,70,1.736,93,3.713,123,3.249,182,1.389,236,2.492,598,4.417,599,4.417,600,4.417,601,5.882,602,4.417,603,4.417,604,4.417,605,4.417,606,4.417,607,4.417,608,4.417,609,4.417,610,4.417,611,4.417,612,4.417,613,4.417,614,4.417,615,4.417]],["title/miscellaneous/functions.html",[616,1.832,617,3.358]],["body/miscellaneous/functions.html",[8,0.625,10,0.769,19,0.026,49,0.023,50,0.023,117,1.587,118,1.587,567,3.249,568,4.327,570,4.566,572,4.945,576,3.249,577,4.945,582,3.713,583,4.945,591,3.249,592,4.566,616,2.903,617,3.713,618,4.417,619,4.566,620,3.713,621,3.713,622,4.417,623,4.417,624,4.417,625,4.566,626,4.417]],["title/index.html",[8,0.395,627,2.787,628,2.787]],["body/index.html",[10,0.357,19,0.027,49,0.016,50,0.016,56,0.636,70,1.46,114,1.388,126,2.21,172,1.705,187,1.258,205,0.854,208,1.658,213,1.158,282,2.121,317,2.121,335,1.85,336,4.092,339,2.121,357,2.734,363,2.121,384,2.121,463,1.369,501,2.121,504,2.121,564,2.121,594,2.734,596,2.121,629,3.716,630,3.716,631,2.523,632,2.523,633,2.121,634,2.523,635,3.716,636,4.867,637,3.716,638,3.716,639,4.867,640,3.716,641,4.867,642,4.867,643,4.412,644,4.412,645,4.412,646,3.716,647,4.867,648,4.867,649,5.189,650,3.716,651,3.716,652,2.523,653,2.523,654,3.716,655,4.412,656,2.523,657,2.523,658,3.716,659,2.523,660,2.523,661,4.412,662,2.523,663,3.716,664,2.523,665,2.523,666,2.523,667,4.412,668,3.716,669,3.716,670,2.523,671,2.523,672,2.523,673,2.523,674,2.523,675,2.523,676,2.523,677,2.523,678,2.523,679,2.523,680,4.867,681,4.412,682,2.523,683,3.716,684,2.523,685,2.523,686,3.716,687,2.523,688,2.523,689,5.189,690,2.523,691,4.412,692,2.523,693,2.523,694,2.523,695,2.523,696,2.523,697,2.523,698,3.716,699,2.523,700,2.523,701,2.523,702,2.523,703,2.523,704,2.523,705,2.523,706,2.523,707,2.523,708,2.523,709,2.523,710,2.523,711,2.523,712,2.523,713,3.716,714,2.523,715,2.523,716,2.523,717,2.523,718,2.523,719,3.124,720,3.716,721,2.523,722,2.523,723,2.523,724,2.523,725,2.523,726,2.523,727,4.412,728,2.523,729,2.523,730,2.523,731,2.523,732,2.523,733,3.716,734,2.523,735,2.523,736,2.523,737,2.523,738,2.121,739,2.523,740,2.523,741,2.523,742,2.121,743,2.523,744,2.523]],["title/modules.html",[69,1.917]],["body/modules.html",[19,0.024,49,0.024,50,0.024,68,3.032,69,1.957,74,2.743,75,2.743,76,2.743,77,2.743,78,2.743,719,5.448,745,6.481,746,6.481,747,6.481]],["title/overview.html",[748,3.8]],["body/overview.html",[2,2.042,19,0.028,49,0.02,50,0.02,51,2.042,54,1.252,61,2.831,68,4.349,69,1.456,70,1.815,71,2.886,72,2.886,73,2.886,74,3.645,75,3.464,76,3.464,77,3.754,78,3.645,79,1.664,80,2.299,81,1.71,82,1.71,101,1.349,132,1.756,145,2.886,146,2.886,225,2.051,277,2.831,289,2.886,290,2.886,414,2.886,415,2.886,515,2.831,541,2.886,542,2.886,738,3.882,748,2.886,749,3.433,750,3.433,751,3.433]],["title/properties.html",[9,1.57,597,2.343]],["body/properties.html",[9,1.972,19,0.028,49,0.025,50,0.025,335,2.499,633,4.219,742,4.219,752,5.019,753,5.019,754,5.019]],["title/classes/removeProductDTO.html",[0,0.073,356,2.186]],["body/classes/removeProductDTO.html",[0,0.102,2,2.067,3,0.283,4,0.283,5,0.246,8,0.492,9,1.83,10,0.659,18,0.87,19,0.029,21,2.574,23,1.121,36,0.428,38,2.067,39,2.284,40,1.885,41,3.478,42,3.122,43,1.474,44,0.283,49,0.02,50,0.02,114,1.965,182,1.093,187,2.165,235,3.425,248,2.769,331,3.06,332,2.284,335,2.318,337,2.769,338,3.06,356,3.06,463,2.526,478,3.914,551,3.425,554,2.557,556,3.914,559,3.914,561,2.921,587,2.921,755,3.475,756,3.475,757,3.475,758,3.475,759,3.475,760,3.475]],["title/miscellaneous/variables.html",[616,1.832,761,3.358]],["body/miscellaneous/variables.html",[8,0.666,19,0.029,49,0.017,50,0.017,65,2.057,129,2.187,130,2.966,134,2.007,172,1.85,191,1.531,194,3.774,198,3.091,199,2.554,205,1.592,216,3.372,228,1.714,242,2.397,285,2.076,300,2.076,337,3.595,366,1.855,383,4.447,452,2.372,567,2.076,568,3.774,574,3.389,575,3.389,576,2.076,581,3.389,584,3.389,585,3.389,591,2.076,593,3.389,594,3.46,616,1.855,619,3.953,620,3.389,621,2.372,625,2.372,761,2.372,762,2.822,763,4.031,764,2.822,765,2.822,766,2.822,767,2.822,768,2.822,769,4.031,770,2.822,771,2.822,772,2.822,773,2.822,774,4.031,775,2.822,776,2.822,777,2.822,778,2.822,779,4.031,780,2.822,781,2.822,782,2.822,783,4.703,784,4.703,785,4.703,786,4.703,787,4.703,788,2.822,789,2.822,790,2.822]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/removeProductDTO.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":194,"title":{},"body":{"injectables/CartsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":753,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["0606060606",{"_index":530,"title":{},"body":{"controllers/UsersController.html":{}}}],["08c00329",{"_index":522,"title":{},"body":{"controllers/UsersController.html":{}}}],["1",{"_index":463,"title":{"interfaces/Request-1.html":{}},"body":{"injectables/ProductsService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"index.html":{},"classes/removeProductDTO.html":{}}}],["1'})@isoptional()@isnumber",{"_index":552,"title":{},"body":{"classes/addProductBodyDTO.html":{}}}],["1.17.3",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":208,"title":{"interfaces/Request-2.html":{}},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["2.2.0",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":531,"title":{},"body":{"controllers/UsersController.html":{}}}],["2:quantity",{"_index":480,"title":{},"body":{"injectables/ProductsService.html":{}}}],["3",{"_index":384,"title":{},"body":{"controllers/ProductsController.html":{},"index.html":{}}}],["3.0.2",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":738,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4.4.0",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["460b",{"_index":524,"title":{},"body":{"controllers/UsersController.html":{}}}],["5",{"_index":750,"title":{},"body":{"overview.html":{}}}],["59000",{"_index":535,"title":{},"body":{"controllers/UsersController.html":{}}}],["6",{"_index":749,"title":{},"body":{"overview.html":{}}}],["6.1.2",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["85c2",{"_index":525,"title":{},"body":{"controllers/UsersController.html":{}}}],["9",{"_index":751,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["a7a7",{"_index":523,"title":{},"body":{"controllers/UsersController.html":{}}}],["add",{"_index":336,"title":{},"body":{"controllers/ProductsController.html":{},"index.html":{}}}],["added",{"_index":468,"title":{},"body":{"injectables/ProductsService.html":{}}}],["addowner",{"_index":502,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["addowner(@body",{"_index":539,"title":{},"body":{"controllers/UsersController.html":{}}}],["addowner(createuserdata",{"_index":503,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["addownerdto",{"_index":1,"title":{"classes/AddOwnerDto.html":{}},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["addproductbodydto",{"_index":334,"title":{"classes/addProductBodyDTO.html":{}},"body":{"controllers/ProductsController.html":{},"classes/addProductBodyDTO.html":{},"coverage.html":{}}}],["addproductdata",{"_index":390,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["addproductdata.quantitywanted",{"_index":391,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["addproductdto",{"_index":368,"title":{"classes/addProductDTO.html":{}},"body":{"controllers/ProductsController.html":{},"classes/addProductDTO.html":{},"coverage.html":{}}}],["addproducttocart",{"_index":325,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["addproducttocart(addproductdata",{"_index":438,"title":{},"body":{"injectables/ProductsService.html":{}}}],["addproducttocart(productid",{"_index":330,"title":{},"body":{"controllers/ProductsController.html":{}}}],["adress",{"_index":20,"title":{"interfaces/Adress.html":{}},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["adress_bill",{"_index":11,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{}}}],["adress_delivery",{"_index":12,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["allproducts",{"_index":433,"title":{},"body":{"injectables/ProductsService.html":{}}}],["already",{"_index":473,"title":{},"body":{"injectables/ProductsService.html":{}}}],["api",{"_index":649,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":364,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apibody({type",{"_index":333,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":41,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["apiproperty()@isemail",{"_index":30,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["apiproperty()@isoptional",{"_index":25,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["apiproperty()@isstring",{"_index":28,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["apipropertyoptional",{"_index":42,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["apipropertyoptional()@isoptional",{"_index":22,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["apipropertyoptional()@isstring",{"_index":33,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["apipropertyoptional({description",{"_index":551,"title":{},"body":{"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["apiquery",{"_index":365,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apitags",{"_index":127,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apitags('carts",{"_index":136,"title":{},"body":{"controllers/CartsController.html":{}}}],["apitags('products",{"_index":375,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apitags('users",{"_index":517,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":317,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":322,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":53,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":663,"title":{},"body":{"index.html":{}}}],["apply(existingcartmiddleware",{"_index":158,"title":{},"body":{"modules/CartsModule.html":{}}}],["appmodule",{"_index":68,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":61,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arr",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":111,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"injectables/UsersService.html":{}}}],["author",{"_index":742,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":140,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"injectables/UsersService.html":{}}}],["back",{"_index":657,"title":{},"body":{"index.html":{}}}],["backend",{"_index":631,"title":{},"body":{"index.html":{}}}],["bash",{"_index":700,"title":{},"body":{"index.html":{}}}],["before",{"_index":645,"title":{},"body":{"index.html":{}}}],["bis",{"_index":735,"title":{},"body":{"index.html":{}}}],["body",{"_index":276,"title":{},"body":{"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["body('quantity",{"_index":387,"title":{},"body":{"controllers/ProductsController.html":{}}}],["bodychargedto",{"_index":283,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["bootstrap",{"_index":583,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":747,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":719,"title":{},"body":{"index.html":{},"modules.html":{}}}],["built",{"_index":635,"title":{},"body":{"index.html":{}}}],["c81012daa98c38113692f10fc2646dddc74aa563",{"_index":741,"title":{},"body":{"index.html":{}}}],["calculate",{"_index":467,"title":{},"body":{"injectables/ProductsService.html":{}}}],["calculatetotalcart",{"_index":165,"title":{},"body":{"injectables/CartsService.html":{}}}],["calculatetotalcart(cartid",{"_index":173,"title":{},"body":{"injectables/CartsService.html":{}}}],["calcultatetotal",{"_index":434,"title":{},"body":{"injectables/ProductsService.html":{}}}],["calcultatetotal(datas",{"_index":441,"title":{},"body":{"injectables/ProductsService.html":{}}}],["cart",{"_index":114,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/addProductDTO.html":{},"index.html":{},"classes/removeProductDTO.html":{}}}],["cart.id",{"_index":143,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["cart.products.map((products",{"_index":201,"title":{},"body":{"injectables/CartsService.html":{}}}],["cart.total",{"_index":469,"title":{},"body":{"injectables/ProductsService.html":{}}}],["cart.ts",{"_index":581,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cartid",{"_index":13,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["carts",{"_index":109,"title":{},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{},"controllers/PaymentsController.html":{},"injectables/UsersService.html":{}}}],["carts.controller",{"_index":154,"title":{},"body":{"modules/CartsModule.html":{}}}],["carts.service",{"_index":133,"title":{},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/ExistingCartMiddleware.html":{},"interfaces/Request.html":{}}}],["carts/carts.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["cartscontroller",{"_index":106,"title":{"controllers/CartsController.html":{}},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{},"coverage.html":{}}}],["cartservice",{"_index":138,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["cartsmodule",{"_index":74,"title":{"modules/CartsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules.html":{},"overview.html":{}}}],["cartsservice",{"_index":132,"title":{"injectables/CartsService.html":{}},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"coverage.html":{},"overview.html":{}}}],["cartwithoutdeletedproduct",{"_index":483,"title":{},"body":{"injectables/ProductsService.html":{}}}],["cartwithoutdeletedproduct.id",{"_index":490,"title":{},"body":{"injectables/ProductsService.html":{}}}],["cartwithoutdeletedproduct.total",{"_index":491,"title":{},"body":{"injectables/ProductsService.html":{}}}],["case",{"_index":472,"title":{},"body":{"injectables/ProductsService.html":{}}}],["catch",{"_index":217,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["channel",{"_index":732,"title":{},"body":{"index.html":{}}}],["check",{"_index":681,"title":{},"body":{"index.html":{}}}],["checkingproductoncartmiddleware",{"_index":220,"title":{"injectables/CheckingProductOnCartMiddleware.html":{}},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"modules/ProductsModule.html":{},"interfaces/Request-1.html":{},"coverage.html":{}}}],["city",{"_index":47,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/UsersController.html":{}}}],["class",{"_index":0,"title":{"classes/AddOwnerDto.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"coverage.html":{},"dependencies.html":{},"classes/removeProductDTO.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddOwnerDto.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"overview.html":{},"classes/removeProductDTO.html":{}}}],["client",{"_index":306,"title":{},"body":{"modules/PrismaModule.html":{}}}],["clone",{"_index":642,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_cartsmodule",{"_index":145,"title":{},"body":{"modules/CartsModule.html":{},"overview.html":{}}}],["cluster_cartsmodule_providers",{"_index":146,"title":{},"body":{"modules/CartsModule.html":{},"overview.html":{}}}],["cluster_paymentsmodule",{"_index":289,"title":{},"body":{"modules/PaymentsModule.html":{},"overview.html":{}}}],["cluster_paymentsmodule_providers",{"_index":290,"title":{},"body":{"modules/PaymentsModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":294,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_prismamodule_providers",{"_index":295,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_productsmodule",{"_index":414,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_providers",{"_index":415,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":541,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":542,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":643,"title":{},"body":{"index.html":{}}}],["command",{"_index":701,"title":{},"body":{"index.html":{}}}],["commerce",{"_index":630,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":715,"title":{},"body":{"index.html":{}}}],["compodocs",{"_index":647,"title":{},"body":{"index.html":{}}}],["computer",{"_index":684,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":148,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["configure(consumer",{"_index":149,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["connect",{"_index":477,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["console.log('deleteproduct",{"_index":402,"title":{},"body":{"controllers/ProductsController.html":{}}}],["console.log('error",{"_index":219,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{}}}],["console.log('hello",{"_index":403,"title":{},"body":{"controllers/ProductsController.html":{}}}],["console.log('mes",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('middleware",{"_index":245,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{}}}],["console.log('product",{"_index":392,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["console.log('productoncart",{"_index":397,"title":{},"body":{"controllers/ProductsController.html":{}}}],["console.log('rjet",{"_index":271,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{},"interfaces/Request-2.html":{}}}],["const",{"_index":199,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-2.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":169,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["constructor(prisma",{"_index":170,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(productsservice",{"_index":224,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{}}}],["consumer",{"_index":152,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["consumer.apply(checkingproductoncartmiddleware).forroutes",{"_index":431,"title":{},"body":{"modules/ProductsModule.html":{}}}],["consumer.apply(existingcartmiddleware).forroutes",{"_index":430,"title":{},"body":{"modules/ProductsModule.html":{}}}],["consumer.apply(existingproductmiddleware).forroutes",{"_index":424,"title":{},"body":{"modules/ProductsModule.html":{}}}],["contents",{"_index":634,"title":{},"body":{"index.html":{}}}],["context",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controller",{"_index":52,"title":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('carts",{"_index":137,"title":{},"body":{"controllers/CartsController.html":{}}}],["controller('payments",{"_index":279,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["controller('products",{"_index":376,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('users",{"_index":518,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["corbel",{"_index":744,"title":{},"body":{"index.html":{}}}],["count",{"_index":452,"title":{},"body":{"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["country",{"_index":48,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/UsersController.html":{}}}],["coverage",{"_index":563,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":476,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["createcart",{"_index":166,"title":{},"body":{"injectables/CartsService.html":{}}}],["created",{"_index":669,"title":{},"body":{"index.html":{}}}],["createparamdecorator",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpayment",{"_index":281,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["creates",{"_index":656,"title":{},"body":{"index.html":{}}}],["createuserdata",{"_index":512,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["crud",{"_index":672,"title":{},"body":{"index.html":{}}}],["currentcart",{"_index":284,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["d",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d.setmonth(d.getmonth",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d35edb885203",{"_index":526,"title":{},"body":{"controllers/UsersController.html":{}}}],["data",{"_index":198,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["dataarr",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":641,"title":{},"body":{"index.html":{}}}],["datas",{"_index":285,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":216,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dateinnmonths",{"_index":593,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["declare",{"_index":239,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["decorator/current",{"_index":367,"title":{},"body":{"controllers/ProductsController.html":{}}}],["decorators",{"_index":21,"title":{},"body":{"classes/AddOwnerDto.html":{},"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["decorators/existing",{"_index":135,"title":{},"body":{"controllers/CartsController.html":{}}}],["decrement",{"_index":494,"title":{},"body":{"injectables/ProductsService.html":{}}}],["default",{"_index":337,"title":{},"body":{"controllers/ProductsController.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AddOwnerDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["delete",{"_index":361,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["delete('/:productid",{"_index":349,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deletedfromcart",{"_index":400,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteproduct",{"_index":326,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(id",{"_index":348,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteproduct(product",{"_index":443,"title":{},"body":{"injectables/ProductsService.html":{}}}],["dependencies",{"_index":70,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PaymentsModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":335,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"index.html":{},"properties.html":{},"classes/removeProductDTO.html":{}}}],["development",{"_index":726,"title":{},"body":{"index.html":{}}}],["disconnect",{"_index":484,"title":{},"body":{"injectables/ProductsService.html":{}}}],["documentation",{"_index":564,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documented",{"_index":676,"title":{},"body":{"index.html":{}}}],["don't",{"_index":691,"title":{},"body":{"index.html":{}}}],["dtos/addproduct.dto",{"_index":369,"title":{},"body":{"controllers/ProductsController.html":{}}}],["dtos/addproduct_body.dto",{"_index":370,"title":{},"body":{"controllers/ProductsController.html":{}}}],["dtos/create",{"_index":513,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/removeproduct.dto",{"_index":372,"title":{},"body":{"controllers/ProductsController.html":{}}}],["du",{"_index":533,"title":{},"body":{"controllers/UsersController.html":{}}}],["dynamicmodule",{"_index":302,"title":{},"body":{"modules/PrismaModule.html":{}}}],["e",{"_index":629,"title":{},"body":{"index.html":{}}}],["email",{"_index":14,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["empty",{"_index":559,"title":{},"body":{"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["enableshutdownhooks",{"_index":312,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":314,"title":{},"body":{"injectables/PrismaService.html":{}}}],["end",{"_index":658,"title":{},"body":{"index.html":{}}}],["env",{"_index":695,"title":{},"body":{"index.html":{}}}],["env.${process.env.node_env",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["equal",{"_index":481,"title":{},"body":{"injectables/ProductsService.html":{}}}],["error",{"_index":218,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["examples",{"_index":342,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["except",{"_index":508,"title":{},"body":{"controllers/UsersController.html":{}}}],["exclude",{"_index":159,"title":{},"body":{"modules/CartsModule.html":{}}}],["executioncontext",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existing",{"_index":305,"title":{},"body":{"modules/PrismaModule.html":{}}}],["existingcart",{"_index":134,"title":{},"body":{"controllers/CartsController.html":{},"injectables/ExistingCartMiddleware.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["existingcartmiddleware",{"_index":156,"title":{"injectables/ExistingCartMiddleware.html":{}},"body":{"modules/CartsModule.html":{},"injectables/ExistingCartMiddleware.html":{},"modules/ProductsModule.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["existingproduct",{"_index":129,"title":{},"body":{"controllers/CartsController.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"interfaces/Request-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["existingproductmiddleware",{"_index":263,"title":{"injectables/ExistingProductMiddleware.html":{}},"body":{"injectables/ExistingProductMiddleware.html":{},"modules/ProductsModule.html":{},"interfaces/Request-2.html":{},"coverage.html":{}}}],["existingproductoncart",{"_index":242,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"controllers/ProductsController.html":{},"interfaces/Request-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":44,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["exports",{"_index":309,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":236,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"dependencies.html":{}}}],["express.js",{"_index":665,"title":{},"body":{"index.html":{}}}],["extends",{"_index":311,"title":{},"body":{"injectables/PrismaService.html":{}}}],["factory.ts",{"_index":568,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["faker",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":341,"title":{},"body":{"controllers/ProductsController.html":{}}}],["false})@post('add/cart/:productid",{"_index":345,"title":{},"body":{"controllers/ProductsController.html":{}}}],["fanny",{"_index":527,"title":{},"body":{"controllers/UsersController.html":{}}}],["favorite",{"_index":705,"title":{},"body":{"index.html":{}}}],["field",{"_index":505,"title":{},"body":{"controllers/UsersController.html":{}}}],["fields",{"_index":506,"title":{},"body":{"controllers/UsersController.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"coverage.html":{},"classes/removeProductDTO.html":{}}}],["first",{"_index":696,"title":{},"body":{"index.html":{}}}],["following",{"_index":686,"title":{},"body":{"index.html":{}}}],["forget",{"_index":694,"title":{},"body":{"index.html":{}}}],["forroutes(cartscontroller",{"_index":163,"title":{},"body":{"modules/CartsModule.html":{}}}],["fortest",{"_index":298,"title":{},"body":{"modules/PrismaModule.html":{}}}],["fortest(prismaclient",{"_index":299,"title":{},"body":{"modules/PrismaModule.html":{}}}],["found",{"_index":207,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["framework",{"_index":662,"title":{},"body":{"index.html":{}}}],["france",{"_index":537,"title":{},"body":{"controllers/UsersController.html":{}}}],["front",{"_index":673,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":15,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["function",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":617,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:cartid",{"_index":115,"title":{},"body":{"controllers/CartsController.html":{}}}],["get('/:productid",{"_index":353,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getallproduct",{"_index":327,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getcart",{"_index":110,"title":{},"body":{"controllers/CartsController.html":{}}}],["getcart(@param('cartid",{"_index":144,"title":{},"body":{"controllers/CartsController.html":{}}}],["getcart(cartid",{"_index":113,"title":{},"body":{"controllers/CartsController.html":{}}}],["gethello",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getproductbyid",{"_index":328,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproductbyid(@param('productid",{"_index":380,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproductbyid(id",{"_index":352,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getrandomdate",{"_index":570,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrandomdate(maxdate",{"_index":622,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrandomintinclusive",{"_index":592,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrandomintinclusive(0",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrandomintinclusive(1",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrandomintinclusive(min",{"_index":624,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":627,"title":{"index.html":{}},"body":{}}],["gh",{"_index":707,"title":{},"body":{"index.html":{}}}],["git",{"_index":699,"title":{},"body":{"index.html":{}}}],["global",{"_index":240,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["globally",{"_index":682,"title":{},"body":{"index.html":{}}}],["hello",{"_index":104,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":304,"title":{},"body":{"modules/PrismaModule.html":{}}}],["hemkass/paymenttunnel_nestjs",{"_index":709,"title":{},"body":{"index.html":{}}}],["here",{"_index":674,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/api",{"_index":724,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/payments/createstay",{"_index":740,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/products/add/cart/:productid/:cartidcartid",{"_index":734,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/products/remove/:productid/:cartidstep",{"_index":736,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/users/signupstep",{"_index":737,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":721,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com/recipes/documentation",{"_index":723,"title":{},"body":{"index.html":{}}}],["https://github.com/hemkass/payment_tunnel_front",{"_index":675,"title":{},"body":{"index.html":{}}}],["https://nodejs.org/en",{"_index":688,"title":{},"body":{"index.html":{}}}],["https://www.postgresql.org",{"_index":693,"title":{},"body":{"index.html":{}}}],["id",{"_index":184,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":243,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"injectables/PrismaService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["import",{"_index":36,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["imports",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["include",{"_index":185,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{}}}],["increment",{"_index":475,"title":{},"body":{"injectables/ProductsService.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"miscellaneous/functions.html":{},"classes/removeProductDTO.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":315,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["infrastructure",{"_index":711,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":100,"title":{"injectables/AppService.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":101,"title":{},"body":{"injectables/AppService.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["install",{"_index":644,"title":{},"body":{"index.html":{}}}],["installation",{"_index":636,"title":{},"body":{"index.html":{}}}],["installed",{"_index":683,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":637,"title":{},"body":{"index.html":{}}}],["interact",{"_index":666,"title":{},"body":{"index.html":{}}}],["interface",{"_index":45,"title":{"interfaces/Adress.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"coverage.html":{}}}],["interfaces",{"_index":51,"title":{},"body":{"interfaces/Adress.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"overview.html":{}}}],["iscart",{"_index":167,"title":{},"body":{"injectables/CartsService.html":{}}}],["iscart(cartid",{"_index":176,"title":{},"body":{"injectables/CartsService.html":{}}}],["isemail",{"_index":37,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{}}}],["isenum",{"_index":561,"title":{},"body":{"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["isglobal",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["isnumber",{"_index":554,"title":{},"body":{"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["isoptional",{"_index":38,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["isproduct",{"_index":435,"title":{},"body":{"injectables/ProductsService.html":{}}}],["isproduct(id",{"_index":445,"title":{},"body":{"injectables/ProductsService.html":{}}}],["isproductalreadyoncart",{"_index":465,"title":{},"body":{"injectables/ProductsService.html":{}}}],["isproductalreadyoncart.id",{"_index":474,"title":{},"body":{"injectables/ProductsService.html":{}}}],["isproductoncart",{"_index":436,"title":{},"body":{"injectables/ProductsService.html":{}}}],["isproductoncart(quantityincartdata",{"_index":447,"title":{},"body":{"injectables/ProductsService.html":{}}}],["isstring",{"_index":39,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["javascript",{"_index":677,"title":{},"body":{"index.html":{}}}],["js/faker",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["license",{"_index":633,"title":{},"body":{"index.html":{},"properties.html":{}}}],["lille",{"_index":536,"title":{},"body":{"controllers/UsersController.html":{}}}],["line",{"_index":702,"title":{},"body":{"index.html":{}}}],["link",{"_index":687,"title":{},"body":{"index.html":{}}}],["main",{"_index":577,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["marine",{"_index":743,"title":{},"body":{"index.html":{}}}],["martin",{"_index":528,"title":{},"body":{"controllers/UsersController.html":{}}}],["matching",{"_index":50,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/removeProductDTO.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":625,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["maxdate",{"_index":623,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maxindex",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":406,"title":{},"body":{"controllers/ProductsController.html":{}}}],["metadata",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":161,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["methods",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["middleware",{"_index":272,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{},"interfaces/Request-2.html":{}}}],["middleware/checking",{"_index":422,"title":{},"body":{"modules/ProductsModule.html":{}}}],["middleware/existing",{"_index":419,"title":{},"body":{"modules/ProductsModule.html":{}}}],["middleware/existing_cart.middleware",{"_index":157,"title":{},"body":{"modules/CartsModule.html":{}}}],["middlewareconsumer",{"_index":150,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["min",{"_index":626,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":616,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":632,"title":{},"body":{"index.html":{}}}],["mode",{"_index":594,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":67,"title":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PaymentsModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PaymentsModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":69,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PaymentsModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["n",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":118,"title":{},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":241,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["navigate",{"_index":720,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":661,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":43,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/CartsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"dependencies.html":{},"classes/removeProductDTO.html":{}}}],["nestmiddleware",{"_index":234,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["nestor@test.fr",{"_index":521,"title":{},"body":{"controllers/UsersController.html":{}}}],["never",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":205,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newcart",{"_index":112,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/ProductsService.html":{}}}],["newcart(@session",{"_index":139,"title":{},"body":{"controllers/CartsController.html":{}}}],["newcart(session",{"_index":119,"title":{},"body":{"controllers/CartsController.html":{}}}],["newcart.total",{"_index":497,"title":{},"body":{"injectables/ProductsService.html":{}}}],["newtotal",{"_index":211,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{}}}],["next",{"_index":231,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["nextfunction",{"_index":232,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["node.js",{"_index":639,"title":{},"body":{"index.html":{}}}],["notfounderror",{"_index":373,"title":{},"body":{"controllers/ProductsController.html":{}}}],["notfounderror('no",{"_index":408,"title":{},"body":{"controllers/ProductsController.html":{}}}],["notfoundexception",{"_index":180,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["notfoundexception('no",{"_index":206,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["now",{"_index":509,"title":{},"body":{"controllers/UsersController.html":{}}}],["npm",{"_index":727,"title":{},"body":{"index.html":{}}}],["npx",{"_index":714,"title":{},"body":{"index.html":{}}}],["number",{"_index":332,"title":{},"body":{"controllers/ProductsController.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["number(price",{"_index":461,"title":{},"body":{"injectables/ProductsService.html":{}}}],["number(products.quantityincart",{"_index":203,"title":{},"body":{"injectables/CartsService.html":{}}}],["number(products?.product?.price",{"_index":202,"title":{},"body":{"injectables/CartsService.html":{}}}],["number(quantitywanted",{"_index":462,"title":{},"body":{"injectables/ProductsService.html":{}}}],["number(total",{"_index":460,"title":{},"body":{"injectables/ProductsService.html":{}}}],["object",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(dataarr).map(function",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["one",{"_index":339,"title":{},"body":{"controllers/ProductsController.html":{},"index.html":{}}}],["onmoduleinit",{"_index":313,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":698,"title":{},"body":{"index.html":{}}}],["optional",{"_index":10,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/removeProductDTO.html":{}}}],["out",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PaymentsModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":748,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":716,"title":{},"body":{"index.html":{}}}],["package",{"_index":597,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paiement",{"_index":739,"title":{},"body":{"index.html":{}}}],["param",{"_index":125,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{}}}],["param('cartid",{"_index":396,"title":{},"body":{"controllers/ProductsController.html":{}}}],["param('productid",{"_index":386,"title":{},"body":{"controllers/ProductsController.html":{}}}],["parameter",{"_index":344,"title":{},"body":{"controllers/ProductsController.html":{}}}],["parameters",{"_index":117,"title":{},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":493,"title":{},"body":{"injectables/ProductsService.html":{}}}],["password",{"_index":16,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{}}}],["patch",{"_index":363,"title":{},"body":{"controllers/ProductsController.html":{},"index.html":{}}}],["patch('remove/:productid/:cartid",{"_index":395,"title":{},"body":{"controllers/ProductsController.html":{}}}],["path",{"_index":160,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["payment",{"_index":282,"title":{},"body":{"controllers/PaymentsController.html":{},"index.html":{}}}],["payment.paymentmethodid",{"_index":287,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["paymentmethodid",{"_index":286,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["payments",{"_index":275,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["payments.controller",{"_index":292,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["payments.service",{"_index":278,"title":{},"body":{"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{}}}],["payments/payments.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["paymentscontroller",{"_index":273,"title":{"controllers/PaymentsController.html":{}},"body":{"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"coverage.html":{}}}],["paymentservice",{"_index":280,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["paymentsmodule",{"_index":75,"title":{"modules/PaymentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentsModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentsservice",{"_index":277,"title":{"injectables/PaymentsService.html":{}},"body":{"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"coverage.html":{},"overview.html":{}}}],["phone",{"_index":17,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"injectables/UsersService.html":{}}}],["pictureobject",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pictures",{"_index":191,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":706,"title":{},"body":{"index.html":{}}}],["please",{"_index":680,"title":{},"body":{"index.html":{}}}],["port",{"_index":534,"title":{},"body":{"controllers/UsersController.html":{}}}],["possibler",{"_index":712,"title":{},"body":{"index.html":{}}}],["post",{"_index":126,"title":{},"body":{"controllers/CartsController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["post('/addowner",{"_index":538,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/create",{"_index":121,"title":{},"body":{"controllers/CartsController.html":{},"controllers/PaymentsController.html":{}}}],["post('add/cart/:productid",{"_index":385,"title":{},"body":{"controllers/ProductsController.html":{}}}],["postcode",{"_index":46,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/UsersController.html":{}}}],["postgresql",{"_index":667,"title":{},"body":{"index.html":{}}}],["postico",{"_index":679,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":108,"title":{},"body":{"controllers/CartsController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["price",{"_index":189,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{}}}],["prisma",{"_index":172,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":303,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/.../product",{"_index":619,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma/.../seed.ts",{"_index":621,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":182,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"classes/addProductDTO.html":{},"dependencies.html":{},"classes/removeProductDTO.html":{}}}],["prisma/client/runtime",{"_index":374,"title":{},"body":{"controllers/ProductsController.html":{}}}],["prisma/factories/product",{"_index":567,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma/prisma.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProductsService.html":{}}}],["prisma/seed.ts",{"_index":576,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prismaclient",{"_index":300,"title":{},"body":{"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":76,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":79,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":377,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["product",{"_index":187,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"classes/addProductDTO.html":{},"index.html":{},"classes/removeProductDTO.html":{}}}],["product(s",{"_index":651,"title":{},"body":{"index.html":{}}}],["product.decorator",{"_index":131,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{}}}],["product.decorator.ts",{"_index":584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["product.id",{"_index":464,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.middleware",{"_index":420,"title":{},"body":{"modules/ProductsModule.html":{}}}],["product.middleware.ts",{"_index":265,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{},"interfaces/Request-2.html":{},"coverage.html":{}}}],["product.middleware.ts:15",{"_index":266,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{}}}],["product.middleware.ts:18",{"_index":267,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{}}}],["product.price",{"_index":470,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productdeleted",{"_index":409,"title":{},"body":{"controllers/ProductsController.html":{}}}],["productdeleted.id",{"_index":411,"title":{},"body":{"controllers/ProductsController.html":{}}}],["productfactory",{"_index":572,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["productid",{"_index":244,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["production",{"_index":730,"title":{},"body":{"index.html":{}}}],["productoncart",{"_index":248,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request-1.html":{},"classes/removeProductDTO.html":{}}}],["productoncart.decorator",{"_index":371,"title":{},"body":{"controllers/ProductsController.html":{}}}],["productoncart.decorator.ts",{"_index":585,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["productoncart.id",{"_index":485,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productoncart.middleware",{"_index":423,"title":{},"body":{"modules/ProductsModule.html":{}}}],["productoncart.middleware.ts",{"_index":222,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{},"coverage.html":{}}}],["productoncart.middleware.ts:16",{"_index":226,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{}}}],["productoncart.middleware.ts:19",{"_index":233,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{}}}],["productoncart.quantityincart",{"_index":479,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productoncart:productsoncart",{"_index":760,"title":{},"body":{"classes/removeProductDTO.html":{}}}],["productoncartdeleted",{"_index":486,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productpictures",{"_index":192,"title":{},"body":{"injectables/CartsService.html":{}}}],["products",{"_index":186,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{}}}],["products.controller",{"_index":418,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["products.service",{"_index":238,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["products/:productid",{"_index":427,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products/add/cart/:productid",{"_index":429,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products/products.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["products/remove/:productid/:cartid",{"_index":425,"title":{},"body":{"modules/ProductsModule.html":{}}}],["productscontroller",{"_index":323,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["productservice",{"_index":378,"title":{},"body":{"controllers/ProductsController.html":{}}}],["productsmodule",{"_index":77,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsoncart",{"_index":235,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{},"classes/removeProductDTO.html":{}}}],["productsservice",{"_index":225,"title":{"injectables/ProductsService.html":{}},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":655,"title":{},"body":{"index.html":{}}}],["promise",{"_index":360,"title":{},"body":{"controllers/ProductsController.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"properties.html":{},"classes/removeProductDTO.html":{}}}],["provide",{"_index":307,"title":{},"body":{"modules/PrismaModule.html":{}}}],["providers",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PaymentsModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["put",{"_index":556,"title":{},"body":{"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["quantity",{"_index":331,"title":{},"body":{"controllers/ProductsController.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["quantity's",{"_index":482,"title":{},"body":{"injectables/ProductsService.html":{}}}],["quantityincart",{"_index":458,"title":{},"body":{"injectables/ProductsService.html":{}}}],["quantityincartdata",{"_index":249,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request-1.html":{}}}],["quantityremoved",{"_index":478,"title":{},"body":{"injectables/ProductsService.html":{},"classes/removeProductDTO.html":{}}}],["quantityremoved?:number",{"_index":759,"title":{},"body":{"classes/removeProductDTO.html":{}}}],["quantitytoadd",{"_index":382,"title":{},"body":{"controllers/ProductsController.html":{}}}],["quantitywanted",{"_index":459,"title":{},"body":{"injectables/ProductsService.html":{},"classes/addProductDTO.html":{}}}],["quantitywanted?:number",{"_index":562,"title":{},"body":{"classes/addProductDTO.html":{}}}],["query",{"_index":362,"title":{},"body":{"controllers/ProductsController.html":{}}}],["query('cartid",{"_index":388,"title":{},"body":{"controllers/ProductsController.html":{}}}],["randomnumber",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randompictures",{"_index":574,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["randomwordinprismaenum",{"_index":575,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":64,"title":{},"body":{"controllers/AppController.html":{}}}],["recalculate",{"_index":209,"title":{},"body":{"injectables/CartsService.html":{}}}],["reflect",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["reinstalling",{"_index":685,"title":{},"body":{"index.html":{}}}],["remove",{"_index":357,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["removefromcart",{"_index":329,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["removefromcart(productid",{"_index":355,"title":{},"body":{"controllers/ProductsController.html":{}}}],["removefromcart(removeproductdata",{"_index":449,"title":{},"body":{"injectables/ProductsService.html":{}}}],["removeproductdata",{"_index":398,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["removeproductdata.quantityremoved",{"_index":399,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["removeproductdto",{"_index":356,"title":{"classes/removeProductDTO.html":{}},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"classes/removeProductDTO.html":{}}}],["repo",{"_index":708,"title":{},"body":{"index.html":{}}}],["reps",{"_index":404,"title":{},"body":{"controllers/ProductsController.html":{}}}],["req",{"_index":120,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{}}}],["req.body.cartid",{"_index":259,"title":{},"body":{"injectables/ExistingCartMiddleware.html":{},"interfaces/Request.html":{}}}],["req.body.productid",{"_index":269,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{},"interfaces/Request-2.html":{}}}],["req.existingcart",{"_index":247,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{}}}],["req.existingcart.id",{"_index":251,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{}}}],["req.existingproduct",{"_index":246,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["req.existingproduct.id",{"_index":250,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{}}}],["req.existingproductoncart",{"_index":253,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{}}}],["req.params.cartid",{"_index":258,"title":{},"body":{"injectables/ExistingCartMiddleware.html":{},"interfaces/Request.html":{}}}],["req.params.productid",{"_index":268,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{},"interfaces/Request-2.html":{}}}],["req.params[0].split('/').pop",{"_index":261,"title":{},"body":{"injectables/ExistingCartMiddleware.html":{},"interfaces/Request.html":{}}}],["req.query.cartid",{"_index":260,"title":{},"body":{"injectables/ExistingCartMiddleware.html":{},"interfaces/Request.html":{}}}],["req.session.cartid",{"_index":389,"title":{},"body":{"controllers/ProductsController.html":{}}}],["request",{"_index":228,"title":{"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request.existingcart",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.existingproduct",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.existingproductoncart",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestmethod",{"_index":155,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["requestmethod.get",{"_index":428,"title":{},"body":{"modules/ProductsModule.html":{}}}],["requestmethod.patch",{"_index":426,"title":{},"body":{"modules/ProductsModule.html":{}}}],["requestmethod.post",{"_index":162,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["require",{"_index":690,"title":{},"body":{"index.html":{}}}],["required",{"_index":340,"title":{},"body":{"controllers/ProductsController.html":{}}}],["requirement",{"_index":638,"title":{},"body":{"index.html":{}}}],["res",{"_index":229,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["res.json(error",{"_index":254,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["reset",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PaymentsModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":230,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["response.status(200).send",{"_index":405,"title":{},"body":{"controllers/ProductsController.html":{}}}],["response.status(404).send",{"_index":407,"title":{},"body":{"controllers/ProductsController.html":{}}}],["restful",{"_index":671,"title":{},"body":{"index.html":{}}}],["results",{"_index":49,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/removeProductDTO.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/PaymentsController.html":{},"modules/PrismaModule.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rolearray",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rolearray.length",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rolearray[randomnumber",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":668,"title":{},"body":{"index.html":{}}}],["rue",{"_index":532,"title":{},"body":{"controllers/UsersController.html":{}}}],["run",{"_index":689,"title":{},"body":{"index.html":{}}}],["running",{"_index":725,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["select",{"_index":188,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{}}}],["send",{"_index":504,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["service",{"_index":456,"title":{},"body":{"injectables/ProductsService.html":{}}}],["session",{"_index":123,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{},"dependencies.html":{}}}],["session.cartid",{"_index":142,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{}}}],["simply",{"_index":703,"title":{},"body":{"index.html":{}}}],["site",{"_index":659,"title":{},"body":{"index.html":{}}}],["sopen",{"_index":718,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["sql",{"_index":640,"title":{},"body":{"index.html":{}}}],["src",{"_index":262,"title":{},"body":{"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{}}}],["src/.../current",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../existing",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":618,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":102,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":103,"title":{},"body":{"injectables/AppService.html":{}}}],["src/carts/carts.controller.ts",{"_index":107,"title":{},"body":{"controllers/CartsController.html":{},"coverage.html":{}}}],["src/carts/carts.controller.ts:14",{"_index":122,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/carts/carts.controller.ts:21",{"_index":116,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/carts/carts.module.ts",{"_index":147,"title":{},"body":{"modules/CartsModule.html":{}}}],["src/carts/carts.module.ts:12",{"_index":151,"title":{},"body":{"modules/CartsModule.html":{}}}],["src/carts/carts.service",{"_index":237,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request-1.html":{}}}],["src/carts/carts.service.ts",{"_index":164,"title":{},"body":{"injectables/CartsService.html":{},"coverage.html":{}}}],["src/carts/carts.service.ts:29",{"_index":175,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:40",{"_index":174,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:57",{"_index":179,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:6",{"_index":171,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:9",{"_index":177,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/decorators/existing",{"_index":366,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/carts/middleware/existing_cart.middleware",{"_index":421,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/carts/middleware/existing_cart.middleware.ts",{"_index":255,"title":{},"body":{"injectables/ExistingCartMiddleware.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["src/carts/middleware/existing_cart.middleware.ts:17",{"_index":256,"title":{},"body":{"injectables/ExistingCartMiddleware.html":{}}}],["src/carts/middleware/existing_cart.middleware.ts:20",{"_index":257,"title":{},"body":{"injectables/ExistingCartMiddleware.html":{}}}],["src/main.ts",{"_index":582,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/payments/payments.controller.ts",{"_index":274,"title":{},"body":{"controllers/PaymentsController.html":{},"coverage.html":{}}}],["src/payments/payments.module.ts",{"_index":291,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["src/payments/payments.service.ts",{"_index":293,"title":{},"body":{"injectables/PaymentsService.html":{},"coverage.html":{}}}],["src/prisma/prisma.module.ts",{"_index":296,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.module.ts:11",{"_index":301,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":128,"title":{},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"modules/ProductsModule.html":{},"interfaces/Request.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":310,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":316,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":318,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/products/decorator/current",{"_index":130,"title":{},"body":{"controllers/CartsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/dtos/addproduct.dto.ts",{"_index":555,"title":{},"body":{"classes/addProductDTO.html":{},"coverage.html":{}}}],["src/products/dtos/addproduct.dto.ts:10",{"_index":557,"title":{},"body":{"classes/addProductDTO.html":{}}}],["src/products/dtos/addproduct.dto.ts:13",{"_index":558,"title":{},"body":{"classes/addProductDTO.html":{}}}],["src/products/dtos/addproduct.dto.ts:8",{"_index":560,"title":{},"body":{"classes/addProductDTO.html":{}}}],["src/products/dtos/addproduct_body.dto.ts",{"_index":550,"title":{},"body":{"classes/addProductBodyDTO.html":{},"coverage.html":{}}}],["src/products/dtos/addproduct_body.dto.ts:8",{"_index":553,"title":{},"body":{"classes/addProductBodyDTO.html":{}}}],["src/products/dtos/removeproduct.dto.ts",{"_index":587,"title":{},"body":{"coverage.html":{},"classes/removeProductDTO.html":{}}}],["src/products/dtos/removeproduct.dto.ts:10",{"_index":755,"title":{},"body":{"classes/removeProductDTO.html":{}}}],["src/products/dtos/removeproduct.dto.ts:13",{"_index":757,"title":{},"body":{"classes/removeProductDTO.html":{}}}],["src/products/dtos/removeproduct.dto.ts:16",{"_index":756,"title":{},"body":{"classes/removeProductDTO.html":{}}}],["src/products/dtos/removeproduct.dto.ts:8",{"_index":758,"title":{},"body":{"classes/removeProductDTO.html":{}}}],["src/products/middleware/checking",{"_index":221,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{},"coverage.html":{}}}],["src/products/middleware/existing",{"_index":264,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{},"interfaces/Request-2.html":{},"coverage.html":{}}}],["src/products/products.controller.ts",{"_index":324,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:106",{"_index":359,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:146",{"_index":350,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:37",{"_index":351,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:42",{"_index":354,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:65",{"_index":346,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module.ts",{"_index":416,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.module.ts:16",{"_index":417,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service.ts",{"_index":432,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/products.service.ts:13",{"_index":440,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:132",{"_index":450,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:213",{"_index":444,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:24",{"_index":446,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:32",{"_index":448,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:45",{"_index":442,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:50",{"_index":439,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:7",{"_index":437,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/users/dtos/create",{"_index":6,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":500,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:33",{"_index":511,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":543,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":545,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:6",{"_index":546,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":547,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":728,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":729,"title":{},"body":{"index.html":{}}}],["start:prodhow",{"_index":731,"title":{},"body":{"index.html":{}}}],["started",{"_index":628,"title":{"index.html":{}},"body":{}}],["starting",{"_index":646,"title":{},"body":{"index.html":{}}}],["statements",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":297,"title":{},"body":{"modules/PrismaModule.html":{}}}],["status",{"_index":195,"title":{},"body":{"injectables/CartsService.html":{}}}],["statuscart",{"_index":181,"title":{},"body":{"injectables/CartsService.html":{}}}],["statuscart.pending",{"_index":196,"title":{},"body":{"injectables/CartsService.html":{}}}],["stay",{"_index":653,"title":{},"body":{"index.html":{}}}],["step",{"_index":733,"title":{},"body":{"index.html":{}}}],["string",{"_index":27,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["succesfully",{"_index":412,"title":{},"body":{"controllers/ProductsController.html":{}}}],["support",{"_index":745,"title":{},"body":{"modules.html":{}}}],["suppressed",{"_index":413,"title":{},"body":{"controllers/ProductsController.html":{}}}],["svg",{"_index":746,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":648,"title":{},"body":{"index.html":{}}}],["table",{"_index":596,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["telephone",{"_index":529,"title":{},"body":{"controllers/UsersController.html":{}}}],["thing",{"_index":697,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":319,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":321,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":320,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["this.calculatetotalcart(cartid",{"_index":212,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.calcultatetotal(datas",{"_index":471,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.cartservice.createcart",{"_index":141,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{}}}],["this.cartservice.updatetotalcart",{"_index":489,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.cartservice.updatetotalcart(newcart.id",{"_index":496,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.iscart(cartid",{"_index":200,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.isproductoncart(quantityincartdata",{"_index":466,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.paymentservice.createpayment(datas",{"_index":288,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.prisma.$transaction(async",{"_index":451,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.cart.create",{"_index":197,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.prisma.cart.findunique",{"_index":183,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"interfaces/Request.html":{}}}],["this.prisma.cart.update",{"_index":214,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{}}}],["this.prisma.product.count",{"_index":453,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.product.delete",{"_index":498,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.product.findmany",{"_index":454,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.product.findunique",{"_index":455,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.productsoncart.delete",{"_index":487,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.productsoncart.findfirst",{"_index":457,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.user.create",{"_index":549,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.productservice.addproducttocart",{"_index":393,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productservice.addproducttocart(addproductdata",{"_index":394,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productservice.allproducts",{"_index":379,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productservice.deleteproduct(product",{"_index":410,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productservice.isproduct(id",{"_index":381,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productservice.removefromcart",{"_index":401,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.isproduct(productid",{"_index":270,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{},"interfaces/Request-2.html":{}}}],["this.productsservice.isproductoncart",{"_index":252,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{}}}],["this.userservice.addowner(createuserdata",{"_index":540,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":204,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["title",{"_index":190,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{}}}],["total",{"_index":193,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{}}}],["touch",{"_index":654,"title":{},"body":{"index.html":{}}}],["trouble",{"_index":722,"title":{},"body":{"index.html":{}}}],["true",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{}}}],["try",{"_index":213,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"index.html":{}}}],["tsconfig.json",{"_index":717,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"coverage.html":{},"classes/removeProductDTO.html":{}}}],["typescript",{"_index":678,"title":{},"body":{"index.html":{}}}],["undefined})@apiquery({name",{"_index":343,"title":{},"body":{"controllers/ProductsController.html":{}}}],["undefined})@patch('remove/:productid/:cartid",{"_index":358,"title":{},"body":{"controllers/ProductsController.html":{}}}],["undefined})@post('/addowner",{"_index":510,"title":{},"body":{"controllers/UsersController.html":{}}}],["under",{"_index":704,"title":{},"body":{"index.html":{}}}],["understand",{"_index":710,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":124,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":754,"title":{},"body":{"properties.html":{}}}],["update",{"_index":210,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{}}}],["update_at",{"_index":215,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{}}}],["updated",{"_index":507,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatedprice",{"_index":488,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updatedtotal",{"_index":495,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updatetotalcart",{"_index":168,"title":{},"body":{"injectables/CartsService.html":{}}}],["updatetotalcart(cartid",{"_index":178,"title":{},"body":{"injectables/CartsService.html":{}}}],["use",{"_index":223,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{}}}],["use(req",{"_index":227,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["usefactory",{"_index":308,"title":{},"body":{"modules/PrismaModule.html":{}}}],["user",{"_index":520,"title":{},"body":{"controllers/UsersController.html":{}}}],["user(s",{"_index":652,"title":{},"body":{"index.html":{}}}],["user.dto",{"_index":514,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":7,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":35,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["user.dto.ts:16",{"_index":29,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["user.dto.ts:20",{"_index":34,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["user.dto.ts:24",{"_index":32,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["user.dto.ts:29",{"_index":26,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["user.dto.ts:33",{"_index":24,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["user.dto.ts:7",{"_index":31,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["userdata",{"_index":548,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":501,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["users.controller",{"_index":544,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":516,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":499,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":519,"title":{},"body":{"controllers/UsersController.html":{}}}],["usersmodule",{"_index":78,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":515,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":664,"title":{},"body":{"index.html":{}}}],["using",{"_index":670,"title":{},"body":{"index.html":{}}}],["utils/.../utils.ts",{"_index":620,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["utils/utils.ts",{"_index":591,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":40,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"dependencies.html":{},"classes/removeProductDTO.html":{}}}],["value",{"_index":383,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":761,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":752,"title":{},"body":{"properties.html":{}}}],["via",{"_index":660,"title":{},"body":{"index.html":{}}}],["void",{"_index":153,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["want",{"_index":492,"title":{},"body":{"injectables/ProductsService.html":{}}}],["wanted",{"_index":338,"title":{},"body":{"controllers/ProductsController.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["watch",{"_index":713,"title":{},"body":{"index.html":{}}}],["website",{"_index":692,"title":{},"body":{"index.html":{}}}],["work",{"_index":650,"title":{},"body":{"index.html":{}}}],["world",{"_index":105,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":347,"title":{},"body":{"controllers/ProductsController.html":{}}}],["zoom",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PaymentsModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddOwnerDto.html":{"url":"classes/AddOwnerDto.html","title":"class - AddOwnerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddOwnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                adress_Bill\n                            \n                            \n                                adress_Delivery\n                            \n                            \n                                    Optional\n                                cartId\n                            \n                            \n                                email\n                            \n                            \n                                fullname\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        adress_Bill\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Adress\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        adress_Delivery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Adress\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsOptional, IsString } from 'class-validator';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nexport class AddOwnerDto {\n  @ApiProperty()\n  @IsEmail()\n  email: string;\n\n\n  @ApiProperty()\n  @IsString()\n  phone: string;\n\n  @ApiProperty()\n  @IsString()\n  cartId?: string;\n\n  @ApiPropertyOptional()\n  @IsString()\n  password?: string;\n\n  @ApiProperty()\n  @IsString()\n  fullname: string;\n\n\n  @ApiProperty()\n  @IsOptional()\n  adress_Delivery: Adress;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  adress_Bill?: Adress;\n\n}\n\nexport interface Adress {\n\n  adress?: string;\n  postcode: string;\n  city: string;\n  country?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Adress.html":{"url":"interfaces/Adress.html","title":"interface - Adress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Adress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            adress\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            country\n                                        \n                                \n                                \n                                        \n                                            postcode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postcode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IsEmail, IsOptional, IsString } from 'class-validator';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nexport class AddOwnerDto {\n  @ApiProperty()\n  @IsEmail()\n  email: string;\n\n\n  @ApiProperty()\n  @IsString()\n  phone: string;\n\n  @ApiProperty()\n  @IsString()\n  cartId?: string;\n\n  @ApiPropertyOptional()\n  @IsString()\n  password?: string;\n\n  @ApiProperty()\n  @IsString()\n  fullname: string;\n\n\n  @ApiProperty()\n  @IsOptional()\n  adress_Delivery: Adress;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  adress_Bill?: Adress;\n\n}\n\nexport interface Adress {\n\n  adress?: string;\n  postcode: string;\n  city: string;\n  country?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCartsModule\n\nCartsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCartsModule->AppModule\n\n\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nAppModule -->\n\nPaymentsModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CartsModule\n                        \n                        \n                            PaymentsModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ProductsModule } from './products/products.module';\nimport { CartsModule } from './carts/carts.module';\nimport { PaymentsModule } from './payments/payments.module';\nimport { PrismaService } from './prisma/prisma.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n    PrismaModule,\n    ProductsModule,\n    CartsModule,\n    PaymentsModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: `.env.${process.env.NODE_ENV}`,\n    }),\n    UsersModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, PrismaService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CartsController.html":{"url":"controllers/CartsController.html","title":"controller - CartsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CartsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/carts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                carts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCart\n                            \n                            \n                                    Async\n                                newCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCart\n                        \n                    \n                \n            \n            \n                \ngetCart(cartId: string, cart)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:cartId')\n                \n            \n\n            \n                \n                    Defined in src/carts/carts.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cart\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        newCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    newCart(session: any, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')\n                \n            \n\n            \n                \n                    Defined in src/carts/carts.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Post, Req, Session } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ExistingProduct } from 'src/products/decorator/current-product.decorator';\nimport { CartsService } from './carts.service';\nimport { ExistingCart } from './decorators/existing-cart';\n\n@ApiTags('carts')\n@Controller('carts')\nexport class CartsController {\n  constructor(private cartService: CartsService) {}\n\n  @Post('/create')\n  async newCart(@Session() session: any, @Req() req) {\n    let cart = await this.cartService.createCart();\n    session.cartId = cart.id;\n    return cart;\n  }\n\n  @Get('/:cartId')\n  getCart(@Param('cartId') cartId: string, @ExistingCart() cart) {\n    return cart;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartsModule.html":{"url":"modules/CartsModule.html","title":"module - CartsModule","body":"\n                   \n\n\n\n\n    Modules\n    CartsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CartsModule\n\n\n\ncluster_CartsModule_providers\n\n\n\n\nCartsService\n\nCartsService\n\n\n\nCartsModule\n\nCartsModule\n\nCartsModule -->\n\nCartsService->CartsModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nCartsModule -->\n\nPrismaService->CartsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/carts/carts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartsService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CartsController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.module.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { PrismaService } from 'src/prisma/prisma.service';\nimport { CartsController } from './carts.controller';\nimport { CartsService } from './carts.service';\nimport { MiddlewareConsumer, Module, RequestMethod } from '@nestjs/common';\nimport { ExistingCartMiddleware } from './middleware/existing_cart.middleware';\n\n@Module({\n  controllers: [CartsController],\n  providers: [CartsService, PrismaService],\n})\nexport class CartsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(ExistingCartMiddleware)\n      .exclude({ path: 'carts', method: RequestMethod.POST })\n      .forRoutes(CartsController);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartsService.html":{"url":"injectables/CartsService.html","title":"injectable - CartsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/carts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateTotalCart\n                            \n                            \n                                    Async\n                                createCart\n                            \n                            \n                                    Async\n                                isCart\n                            \n                            \n                                    Async\n                                updateTotalCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/carts/carts.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        calculateTotalCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateTotalCart(cartId)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCart()\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    isCart(cartId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTotalCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTotalCart(cartId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { StatusCart } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class CartsService {\n  constructor(private prisma: PrismaService) {}\n\n  async isCart(cartId: string) {\n    return await this.prisma.cart.findUnique({\n      where: { id: cartId },\n      include: {\n        products: {\n          include: {\n            product: {\n              select: {\n                id: true,\n                price: true,\n                title: true,\n                pictures: { include: { productPictures: true } },\n              },\n            },\n          },\n        },\n      },\n    });\n  }\n\n  async createCart() {\n    let newCart = {\n      total: 0,\n      status: StatusCart.PENDING,\n    };\n\n    return await this.prisma.cart.create({\n      data: newCart,\n    });\n  }\n\n  async calculateTotalCart(cartId) {\n    const cart = await this.isCart(cartId);\n\n    let total = 0;\n    if (cart) {\n      cart.products.map((products) => {\n        total =\n          total +\n          Number(products?.product?.price) * Number(products.quantityInCart);\n      });\n    } else {\n      throw new NotFoundException('no cart found');\n    }\n\n    return total;\n  }\n\n  async updateTotalCart(cartId: string) {\n    // 2) Recalculate the new price and update it\n    let newTotal = await this.calculateTotalCart(cartId);\n\n    try {\n      await this.prisma.cart.update({\n        include: { products: true },\n        data: {\n          update_at: new Date(),\n\n          total: newTotal,\n        },\n        where: { id: cartId },\n      });\n\n      return newTotal;\n    } catch (error) {\n      console.log('error update Total cart ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CheckingProductOnCartMiddleware.html":{"url":"injectables/CheckingProductOnCartMiddleware.html","title":"injectable - CheckingProductOnCartMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CheckingProductOnCartMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/middleware/checking-productOnCart.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/products/middleware/checking-productOnCart.middleware.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/products/middleware/checking-productOnCart.middleware.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware, NotFoundException } from '@nestjs/common';\nimport { Product, ProductsOnCart } from '@prisma/client';\nimport { NextFunction, Request, Response } from 'express';\nimport { CartsService } from 'src/carts/carts.service';\nimport { ProductsService } from '../products.service';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      existingProductOncart?: ProductsOnCart;\n    }\n  }\n}\n\n@Injectable()\nexport class CheckingProductOnCartMiddleware implements NestMiddleware {\n  constructor(private productsService: ProductsService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    let productId;\n    try {\n      console.log('middleware', req.existingProduct, req.existingCart);\n      let productOnCart;\n      if (req.existingProduct && req.existingCart) {\n        let quantityIncartDATA = {\n          productId: req.existingProduct.id,\n          cartId: req.existingCart.id,\n        };\n\n        productOnCart = await this.productsService.isProductOnCart(\n          quantityIncartDATA,\n        );\n\n        if (productOnCart) {\n          req.existingProductOncart = productOnCart;\n        } else {\n          console.log('error');\n          throw new NotFoundException('no product on cart found');\n        }\n      }\n      next();\n    } catch (error) {\n      res.json(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExistingCartMiddleware.html":{"url":"injectables/ExistingCartMiddleware.html","title":"injectable - ExistingCartMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExistingCartMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/middleware/existing_cart.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/carts/middleware/existing_cart.middleware.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/middleware/existing_cart.middleware.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware, NotFoundException } from '@nestjs/common';\nimport { Cart, Product } from '@prisma/client';\nimport { NextFunction, Request, Response } from 'express';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\nimport { CartsService } from '../carts.service';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      existingCart?: Cart;\n    }\n  }\n}\n\n@Injectable()\nexport class ExistingCartMiddleware implements NestMiddleware {\n  constructor(private prisma: PrismaService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    try {\n      let cartId;\n      if (req.params.cartId) {\n        cartId = req.params.cartId;\n      }\n      if (req.body.cartId) {\n        cartId = req.body.cartId;\n      }\n      if (req.query.cartId) {\n        cartId = req.query.cartId;\n      }\n      // let productId = req.params[0].split('/').pop();\n\n      if (cartId) {\n        const cart = await this.prisma.cart.findUnique({\n          where: { id: cartId },\n          include: {\n            products: {\n              include: {\n                product: {\n                  select: {\n                    id: true,\n                    price: true,\n                    title: true,\n                    pictures: { select: { src: true } },\n                  },\n                },\n              },\n            },\n          },\n        });\n\n        if (cart) {\n          req.existingCart = cart;\n        } else {\n          throw new NotFoundException('no cart found');\n        }\n      }\n\n      next();\n    } catch (error) {\n      res.json(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExistingProductMiddleware.html":{"url":"injectables/ExistingProductMiddleware.html","title":"injectable - ExistingProductMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExistingProductMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/middleware/existing-product.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/products/middleware/existing-product.middleware.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/products/middleware/existing-product.middleware.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware, NotFoundException } from '@nestjs/common';\nimport { Product } from '@prisma/client';\nimport { NextFunction, Request, Response } from 'express';\nimport { ProductsService } from '../products.service';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      existingProduct?: Product;\n    }\n  }\n}\n\n@Injectable()\nexport class ExistingProductMiddleware implements NestMiddleware {\n  constructor(private productsService: ProductsService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    let productId;\n    try {\n      if (req.params.productId) {\n        productId = req.params.productId;\n      }\n      if (req.body.productId) {\n        productId = req.body.productId;\n      }\n\n      if (productId) {\n        const product = await this.productsService.isProduct(productId);\n\n        if (product) {\n          req.existingProduct = product;\n        } else {\n          console.log('rjet middleware');\n          throw new NotFoundException('no product found');\n        }\n      }\n      next();\n    } catch (error) {\n      res.json(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentsController.html":{"url":"controllers/PaymentsController.html","title":"controller - PaymentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/payments.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payments\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { PaymentsService } from './payments.service';\n\n@Controller('payments')\nexport class PaymentsController {\n  constructor(private paymentService: PaymentsService) {}\n\n  /*   @Post('/create')\n  createPayment(\n    @Body() payment: BodyChargeDto,\n\n    @CurrentCart() currentCart: Carts,\n  ) {\n    let datas = { paymentMethodId: payment.paymentMethodId, cart: currentCart };\n    return this.paymentService.createPayment(datas);\n  } */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentsModule.html":{"url":"modules/PaymentsModule.html","title":"module - PaymentsModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PaymentsModule\n\n\n\ncluster_PaymentsModule_providers\n\n\n\n\nPaymentsService\n\nPaymentsService\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nPaymentsModule -->\n\nPaymentsService->PaymentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/payments/payments.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentsController } from './payments.controller';\nimport { PaymentsService } from './payments.service';\n\n@Module({\n  controllers: [PaymentsController],\n  providers: [PaymentsService]\n})\nexport class PaymentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentsService.html":{"url":"injectables/PaymentsService.html","title":"injectable - PaymentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/payments.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PaymentsService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    forTest(prismaClient: PrismaClient)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.module.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prismaClient\n                                    \n                                            PrismaClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\nimport { PrismaClient } from '@prisma/client';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n})\nexport class PrismaModule {\n  // with the help of `DynamicModule` we can import `PrismaModule` with existing client.\n  static forTest(prismaClient: PrismaClient): DynamicModule {\n    return {\n      module: PrismaModule,\n      providers: [\n        {\n          provide: PrismaService,\n          useFactory: () => prismaClient as PrismaService,\n        },\n      ],\n      exports: [PrismaService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await this.$disconnect();\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddProductToCart\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                getAllProduct\n                            \n                            \n                                getProductById\n                            \n                            \n                                    Async\n                                removeFromCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        AddProductToCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    AddProductToCart(productId: string, product, cart, session: any, req, quantity?: number, cartId?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: addProductBodyDTO, description: 'add product on cart, by default quantity wanted is one', required: false, examples: undefined})@ApiQuery({name: 'cartId', type: String, description: 'A parameter. Optional', required: false})@Post('add/cart/:productId')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    product\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cart\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quantity\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: string, product, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:productId')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    product\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProduct\n                        \n                    \n                \n            \n            \n                \ngetAllProduct()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductById\n                        \n                    \n                \n            \n            \n                \ngetProductById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:productId')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeFromCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFromCart(productId: string, cartId: string, productOncart, product: Product, cart: Cart, response: Response, quantity?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: removeProductDTO, description: 'Remove product on cart, by default quantity to remove is one', required: false, examples: undefined})@Patch('remove/:productId/:cartId')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productOncart\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    product\n                                    \n                                            Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cart\n                                    \n                                            Cart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quantity\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Session,\n  Delete,\n  Get,\n  Query,\n  Param,\n  Patch,\n  Post,\n  Res,\n  Req,\n} from '@nestjs/common';\nimport { Response } from 'express';\nimport { ApiBody, ApiQuery, ApiTags } from '@nestjs/swagger';\nimport { CartsService } from 'src/carts/carts.service';\nimport { ExistingCart } from 'src/carts/decorators/existing-cart';\n\nimport { ExistingProduct } from './decorator/current-product.decorator';\nimport { addProductDTO } from './dtos/addProduct.dto';\nimport { addProductBodyDTO } from './dtos/addProduct_body.dto';\nimport { ProductsService } from './products.service';\nimport { ExistingProductOnCart } from './decorator/current-productOnCart.decorator';\nimport { Cart, Product } from '@prisma/client';\nimport { removeProductDTO } from './dtos/removeProduct.dto';\nimport { NotFoundError } from '@prisma/client/runtime';\n\n@ApiTags('products')\n@Controller('products')\nexport class ProductsController {\n  constructor(\n    private productService: ProductsService,\n    private cartService: CartsService,\n  ) {}\n\n  @Get()\n  getAllProduct() {\n    return this.productService.allProducts();\n  }\n\n  @Get('/:productId')\n  getProductById(@Param('productId') id: string) {\n    return this.productService.isProduct(id);\n  }\n\n  @ApiBody({\n    type: addProductBodyDTO,\n    description: 'add product on cart, by default quantity wanted is one',\n    required: false,\n    examples: {\n      quantityToAdd: {\n        value: {\n          quantity: 3,\n        },\n      },\n    },\n  })\n  @ApiQuery({\n    name: 'cartId',\n    type: String,\n    description: 'A parameter. Optional',\n    required: false,\n  })\n  @Post('add/cart/:productId')\n  async AddProductToCart(\n    @Param('productId') productId: string,\n\n    @ExistingProduct() product,\n    @ExistingCart() cart,\n    @Session() session: any,\n    @Req() req,\n    @Body('quantity') quantity?: number,\n    @Query('cartId') cartId?: string,\n  ) {\n    if (!cart) {\n      cart = await this.cartService.createCart();\n    }\n\n    if (cart) {\n      req.session.cartId = cart.id;\n      session.cartId = cart.id;\n\n      let addProductData: addProductDTO = { product: product, cart: cart };\n\n      if (quantity) {\n        addProductData.quantityWanted = quantity;\n      }\n      console.log('product controller', this.productService.addProductToCart);\n      return this.productService.addProductToCart(addProductData);\n    }\n  }\n\n  @ApiBody({\n    type: removeProductDTO,\n    description: 'Remove product on cart, by default quantity to remove is one',\n    required: false,\n    examples: {\n      quantityToAdd: {\n        value: {\n          quantity: 3,\n        },\n      },\n    },\n  })\n  @Patch('remove/:productId/:cartId')\n  async removeFromCart(\n    @Param('productId') productId: string,\n    @Param('cartId') cartId: string,\n    @ExistingProductOnCart() productOncart,\n    @ExistingProduct() product: Product,\n    @ExistingCart() cart: Cart,\n    @Res() response: Response,\n    @Body('quantity') quantity?: number,\n  ): Promise {\n    console.log('productOnCart', productOncart);\n    if (productOncart) {\n      let removeProductData: removeProductDTO = {\n        product: product,\n        cart: cart,\n        productOncart,\n      };\n\n      if (quantity) {\n        removeProductData.quantityRemoved = quantity;\n      }\n      let deletedFromCart = await this.productService.removeFromCart(\n        removeProductData,\n      );\n      console.log('deleteproduct on Controller', deletedFromCart);\n      if (deletedFromCart) {\n        console.log('hello reps,', deletedFromCart);\n        response.status(200).send({\n          message: deletedFromCart,\n        });\n      } else {\n        response.status(404).send({\n          message: `product ${productId} not found on the cart ${cartId} `,\n        });\n      }\n    } else {\n      throw new NotFoundError('No product on Cart');\n    }\n  }\n\n  @Delete('/:productId')\n  async deleteProduct(\n    @Param('productId') id: string,\n    @ExistingProduct() product,\n    @Res() response: Response,\n  ) {\n    let productDeleted = await this.productService.deleteProduct(product);\n    if (productDeleted) {\n      response.status(200).send({\n        message: `Your product ${productDeleted.id} been succesfully suppressed`,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nCartsService\n\nCartsService\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nCartsService->ProductsModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nProductsModule -->\n\nPrismaService->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartsService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, RequestMethod } from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { ProductsController } from './products.controller';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ExistingProductMiddleware } from './middleware/existing-product.middleware';\nimport { CartsService } from 'src/carts/carts.service';\nimport { ExistingCart } from 'src/carts/decorators/existing-cart';\nimport { ExistingCartMiddleware } from 'src/carts/middleware/existing_cart.middleware';\nimport { CheckingProductOnCartMiddleware } from './middleware/checking-productOnCart.middleware';\n\n@Module({\n  providers: [ProductsService, PrismaService, CartsService],\n  controllers: [ProductsController],\n})\nexport class ProductsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(ExistingProductMiddleware).forRoutes(\n      {\n        path: 'products/remove/:productId/:cartId',\n        method: RequestMethod.PATCH,\n      },\n      {\n        path: 'products/:productId',\n        method: RequestMethod.GET,\n      },\n      {\n        path: 'products/add/cart/:productId',\n        method: RequestMethod.POST,\n      },\n    );\n    consumer.apply(ExistingCartMiddleware).forRoutes(\n      {\n        path: 'products/remove/:productId/:cartId',\n        method: RequestMethod.PATCH,\n      },\n      {\n        path: 'products/add/cart/:productId',\n        method: RequestMethod.POST,\n      },\n    );\n    consumer.apply(CheckingProductOnCartMiddleware).forRoutes({\n      path: 'products/remove/:productId/:cartId',\n      method: RequestMethod.PATCH,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addProductToCart\n                            \n                            \n                                    Async\n                                allProducts\n                            \n                            \n                                    Async\n                                calcultateTotal\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                isProduct\n                            \n                            \n                                    Async\n                                isProductOnCart\n                            \n                            \n                                    Async\n                                removeFromCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, cartService: CartsService)\n                    \n                \n                        \n                            \n                                Defined in src/products/products.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProductToCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProductToCart(addProductData)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    addProductData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        allProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    allProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        calcultateTotal\n                        \n                    \n                \n            \n            \n                \n                    \n                    calcultateTotal(datas)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datas\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(product)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    isProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isProductOnCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    isProductOnCart(quantityIncartDATA)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quantityIncartDATA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeFromCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFromCart(removeProductData)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removeProductData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CartsService } from 'src/carts/carts.service';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ProductsController } from './products.controller';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    private prisma: PrismaService,\n    private cartService: CartsService,\n  ) {}\n\n  async allProducts() {\n    return await this.prisma.$transaction(async () => {\n      const count = await this.prisma.product.count();\n\n      const products = await this.prisma.product.findMany({\n        include: { pictures: true },\n      });\n      return { count: count, products: products };\n    });\n  }\n\n  async isProduct(id: string) {\n    const product = await this.prisma.product.findUnique({\n      where: { id: id },\n    });\n    console.log('product service', product);\n    return product;\n  }\n\n  async isProductOnCart(quantityIncartDATA) {\n    let { productId, cartId } = quantityIncartDATA;\n\n    const isProduct = await this.prisma.productsOnCart.findFirst({\n      select: { id: true, quantityInCart: true },\n      where: {\n        AND: [{ cartId: cartId }, { productId: productId }],\n      },\n    });\n\n    return isProduct;\n  }\n\n  async calcultateTotal(datas) {\n    let { total, price, quantityWanted } = datas;\n\n    return Number(total) + Number(price) * Number(quantityWanted);\n  }\n  async addProductToCart(addProductData) {\n    let { product, cart } = addProductData;\n\n    let quantityWanted = 1;\n\n    if (addProductData.quantityWanted) {\n      quantityWanted = addProductData.quantityWanted;\n    }\n\n    let quantityIncartDATA = { productId: product.id, cartId: cart.id };\n\n    let isProductAlreadyOnCart = await this.isProductOnCart(quantityIncartDATA);\n\n    // calculate new total cart with the product added\n    let datas = { total: cart.total, price: product.price, quantityWanted };\n    let newtotal = await this.calcultateTotal(datas);\n\n    // Case 1 : Product is already on cart\n\n    if (isProductAlreadyOnCart) {\n      return this.prisma.cart.update({\n        include: {\n          products: {\n            include: {\n              product: {\n                select: {\n                  id: true,\n                  price: true,\n                  title: true,\n                  pictures: { select: { src: true } },\n                },\n              },\n            },\n          },\n        },\n        where: { id: cart.id },\n        data: {\n          products: {\n            update: {\n              where: { id: isProductAlreadyOnCart.id },\n              data: { quantityInCart: { increment: quantityWanted } },\n            },\n          },\n          total: newtotal,\n        },\n      });\n    }\n\n    // Case 2 : Product is not on cart\n    else {\n      return await this.prisma.cart.update({\n        where: { id: cart.id },\n        include: {\n          products: {\n            include: {\n              product: {\n                select: {\n                  id: true,\n                  price: true,\n                  title: true,\n                  pictures: { select: { src: true } },\n                },\n              },\n            },\n          },\n        },\n        data: {\n          products: {\n            create: [\n              {\n                product: { connect: { id: product.id } },\n\n                quantityInCart: quantityWanted,\n              },\n            ],\n          },\n          total: newtotal,\n        },\n      });\n    }\n  }\n\n  async removeFromCart(removeProductData) {\n    let quantityRemoved = 1;\n    const { cart, productOncart, product } = removeProductData;\n    if (removeProductData.quantityRemoved) {\n      quantityRemoved = removeProductData.quantityRemoved;\n    }\n    let quantityInCart = productOncart.quantityInCart;\n    // Case 2:quantity to remove is equal to the quantity's product in my cart'\n    if (quantityRemoved >= quantityInCart) {\n      let cartWithoutDeletedProduct = await this.prisma.cart.update({\n        where: { id: cart.id },\n        include: {\n          products: {\n            include: {\n              product: {\n                select: {\n                  id: true,\n                  price: true,\n                  title: true,\n                  pictures: { select: { src: true } },\n                },\n              },\n            },\n          },\n        },\n        data: {\n          update_at: new Date(),\n          products: {\n            disconnect: [{ id: productOncart.id }],\n          },\n        },\n      });\n      // 2) delete ProductOnCart\n      let ProductOnCartDeleted = await this.prisma.productsOnCart.delete({\n        where: { id: productOncart.id },\n      });\n      // update Total price\n      let updatedprice = await this.cartService.updateTotalCart(\n        cartWithoutDeletedProduct.id,\n      );\n      cartWithoutDeletedProduct.total = updatedprice;\n      return cartWithoutDeletedProduct;\n    } else {\n      // Case 2 : i only want to remove a part of the quantity's product from my cart but not all\n      let newCart = await this.prisma.cart.update({\n        where: { id: cart.id },\n        include: {\n          products: {\n            include: {\n              product: {\n                select: {\n                  id: true,\n                  price: true,\n                  title: true,\n                  pictures: { select: { src: true } },\n                },\n              },\n            },\n          },\n        },\n        data: {\n          update_at: new Date(),\n          products: {\n            update: {\n              where: { id: productOncart.id },\n              data: {\n                quantityInCart: { decrement: quantityRemoved },\n              },\n            },\n          },\n        },\n      });\n      // update Total price\n\n      let updatedTotal = await this.cartService.updateTotalCart(newCart.id);\n\n      newCart.total = updatedTotal;\n      return newCart;\n    }\n  }\n\n  async deleteProduct(product) {\n    return this.prisma.product.delete({ where: { id: product.id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/middleware/existing_cart.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            existingCart\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        existingCart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        existingCart:     Cart\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Cart\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NestMiddleware, NotFoundException } from '@nestjs/common';\nimport { Cart, Product } from '@prisma/client';\nimport { NextFunction, Request, Response } from 'express';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\nimport { CartsService } from '../carts.service';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      existingCart?: Cart;\n    }\n  }\n}\n\n@Injectable()\nexport class ExistingCartMiddleware implements NestMiddleware {\n  constructor(private prisma: PrismaService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    try {\n      let cartId;\n      if (req.params.cartId) {\n        cartId = req.params.cartId;\n      }\n      if (req.body.cartId) {\n        cartId = req.body.cartId;\n      }\n      if (req.query.cartId) {\n        cartId = req.query.cartId;\n      }\n      // let productId = req.params[0].split('/').pop();\n\n      if (cartId) {\n        const cart = await this.prisma.cart.findUnique({\n          where: { id: cartId },\n          include: {\n            products: {\n              include: {\n                product: {\n                  select: {\n                    id: true,\n                    price: true,\n                    title: true,\n                    pictures: { select: { src: true } },\n                  },\n                },\n              },\n            },\n          },\n        });\n\n        if (cart) {\n          req.existingCart = cart;\n        } else {\n          throw new NotFoundException('no cart found');\n        }\n      }\n\n      next();\n    } catch (error) {\n      res.json(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request-1.html":{"url":"interfaces/Request-1.html","title":"interface - Request-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/middleware/checking-productOnCart.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            existingProductOncart\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        existingProductOncart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        existingProductOncart:     ProductsOnCart\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProductsOnCart\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NestMiddleware, NotFoundException } from '@nestjs/common';\nimport { Product, ProductsOnCart } from '@prisma/client';\nimport { NextFunction, Request, Response } from 'express';\nimport { CartsService } from 'src/carts/carts.service';\nimport { ProductsService } from '../products.service';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      existingProductOncart?: ProductsOnCart;\n    }\n  }\n}\n\n@Injectable()\nexport class CheckingProductOnCartMiddleware implements NestMiddleware {\n  constructor(private productsService: ProductsService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    let productId;\n    try {\n      console.log('middleware', req.existingProduct, req.existingCart);\n      let productOnCart;\n      if (req.existingProduct && req.existingCart) {\n        let quantityIncartDATA = {\n          productId: req.existingProduct.id,\n          cartId: req.existingCart.id,\n        };\n\n        productOnCart = await this.productsService.isProductOnCart(\n          quantityIncartDATA,\n        );\n\n        if (productOnCart) {\n          req.existingProductOncart = productOnCart;\n        } else {\n          console.log('error');\n          throw new NotFoundException('no product on cart found');\n        }\n      }\n      next();\n    } catch (error) {\n      res.json(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request-2.html":{"url":"interfaces/Request-2.html","title":"interface - Request-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/middleware/existing-product.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            existingProduct\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        existingProduct\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        existingProduct:     Product\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Product\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NestMiddleware, NotFoundException } from '@nestjs/common';\nimport { Product } from '@prisma/client';\nimport { NextFunction, Request, Response } from 'express';\nimport { ProductsService } from '../products.service';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      existingProduct?: Product;\n    }\n  }\n}\n\n@Injectable()\nexport class ExistingProductMiddleware implements NestMiddleware {\n  constructor(private productsService: ProductsService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    let productId;\n    try {\n      if (req.params.productId) {\n        productId = req.params.productId;\n      }\n      if (req.body.productId) {\n        productId = req.body.productId;\n      }\n\n      if (productId) {\n        const product = await this.productsService.isProduct(productId);\n\n        if (product) {\n          req.existingProduct = product;\n        } else {\n          console.log('rjet middleware');\n          throw new NotFoundException('no product found');\n        }\n      }\n      next();\n    } catch (error) {\n      res.json(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addOwner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addOwner\n                        \n                    \n                \n            \n            \n                \naddOwner(createUserData: AddOwnerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: AddOwnerDto, description: 'only send field to update, all fields can be updated except pictures for now', examples: undefined})@Post('/addOwner')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserData\n                                    \n                                                AddOwnerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\nimport { AddOwnerDto } from './dtos/create-user.dto';\nimport { UsersService } from './users.service';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private userService: UsersService) {}\n\n  @ApiBody({\n    type: AddOwnerDto,\n    description:\n      'only send field to update, all fields can be updated except pictures for now',\n    examples: {\n      user: {\n        value: {\n          email: 'nestor@test.fr',\n          cartId: '08c00329-a7a7-460b-85c2-d35edb885203',\n          fullname: 'fanny Martin',\n          telephone: '0606060606',\n          adress_Delivery: {\n            adress: '24 rue du port',\n            postcode: 59000,\n            city: 'Lille',\n            country: 'France',\n          },\n        },\n      },\n    },\n  })\n  @Post('/addOwner')\n  addOwner(@Body() createUserData: AddOwnerDto) {\n    return this.userService.addOwner(createUserData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService, PrismaService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addOwner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    addOwner(createUserData)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { AddOwnerDto } from './dtos/create-user.dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(private prisma: PrismaService) {}\n\n  async addOwner(createUserData) {\n    let { email, phone, fullname, adress_Delivery, cartId } = createUserData;\n    let userData = {\n      email: email,\n      phone: phone,\n      fullname: fullname,\n\n      carts: { connect: { id: cartId } },\n      adress_Delivery: { create: adress_Delivery },\n    };\n\n    return await this.prisma.user.create({ data: userData });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/addProductBodyDTO.html":{"url":"classes/addProductBodyDTO.html","title":"class - addProductBodyDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  addProductBodyDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/addProduct_body.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'quantity wanted, by default 1'})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/addProduct_body.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNumber, IsOptional,} from 'class-validator';\n\nexport class addProductBodyDTO { \n  @ApiPropertyOptional({ description: 'quantity wanted, by default 1' })\n  @IsOptional()\n  @IsNumber()\n  quantity?: number;\n\n \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/addProductDTO.html":{"url":"classes/addProductDTO.html","title":"class - addProductDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  addProductDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/addProduct.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cart\n                            \n                            \n                                product\n                            \n                            \n                                    Optional\n                                quantityWanted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Cart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'product to put in cart'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/addProduct.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/addProduct.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        quantityWanted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'product quantity wanted, if empty, by default, it will be 1 '})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/addProduct.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsEnum, IsNumber, IsOptional, IsString } from 'class-validator';\nimport { Cart, Product } from '@prisma/client';\nexport class addProductDTO {\n  @ApiPropertyOptional({\n    description: 'product quantity wanted, if empty, by default, it will be 1 ',\n  })\n  quantityWanted?:number;\n  @ApiPropertyOptional({ description: 'product to put in cart' })\n  cart: Cart;\n\n  @ApiProperty()\n  product: Product;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                prisma/factories/product-factory.ts\n            \n            function\n            getRandomDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/factories/product-factory.ts\n            \n            function\n            ProductFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/factories/product-factory.ts\n            \n            variable\n            date\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/factories/product-factory.ts\n            \n            variable\n            randomPictures\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/factories/product-factory.ts\n            \n            variable\n            randomWordInPrismaEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/seed.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/carts/carts.controller.ts\n            \n            controller\n            CartsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/carts/carts.service.ts\n            \n            injectable\n            CartsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/carts/decorators/existing-cart.ts\n            \n            variable\n            ExistingCart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/carts/middleware/existing_cart.middleware.ts\n            \n            injectable\n            ExistingCartMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/carts/middleware/existing_cart.middleware.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payments/payments.controller.ts\n            \n            controller\n            PaymentsController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payments/payments.service.ts\n            \n            injectable\n            PaymentsService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/decorator/current-product.decorator.ts\n            \n            variable\n            ExistingProduct\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/decorator/current-productOnCart.decorator.ts\n            \n            variable\n            ExistingProductOnCart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/dtos/addProduct.dto.ts\n            \n            class\n            addProductDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/products/dtos/addProduct_body.dto.ts\n            \n            class\n            addProductBodyDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/products/dtos/removeProduct.dto.ts\n            \n            class\n            removeProductDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/products/middleware/checking-productOnCart.middleware.ts\n            \n            injectable\n            CheckingProductOnCartMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/middleware/checking-productOnCart.middleware.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/products/middleware/existing-product.middleware.ts\n            \n            injectable\n            ExistingProductMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/middleware/existing-product.middleware.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            AddOwnerDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            interface\n            Adress\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                utils/utils.ts\n            \n            function\n            getRandomIntInclusive\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                utils/utils.ts\n            \n            variable\n            dateInNmonths\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                utils/utils.ts\n            \n            variable\n            mode\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @faker-js/faker : ^7.5.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.2\n        \n            @prisma/client : ^4.4.0\n        \n            class-validator : ^0.13.2\n        \n            express-session : ^1.17.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getRandomDate   (prisma/.../product-factory.ts)\n                        \n                        \n                            getRandomIntInclusive   (utils/.../utils.ts)\n                        \n                        \n                            main   (prisma/.../seed.ts)\n                        \n                        \n                            ProductFactory   (prisma/.../product-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    prisma/factories/product-factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomDate\n                        \n                    \n                \n            \n            \n                \ngetRandomDate(maxDate)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    maxDate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductFactory\n                        \n                    \n                \n            \n            \n                \nProductFactory()\n                \n            \n\n\n\n\n        \n    \n    utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomIntInclusive\n                        \n                    \n                \n            \n            \n                \ngetRandomIntInclusive(min, max)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\nE-Commerce Backend\nMIT License\n\nTable of contents\n\nDescription\n\nBuilt With\n\nInstallation Instructions and Requirement\n\nNode.js Installation\nSQL database\nClone the Code and install dependencies\n\n\nBefore starting\n\nCompodocs\n\nSwagger\n\nHow does this API work ? \n\nAdd product(s)\nRemove product(s)\nUser(s)\nPayment\n\n\n\n\nStay In touch\n\n\n\nDescription\n\nThis project creates the back-end code for an e-commerce site via NestJs Framework. This application uses Express.js API and Prisma  to interact with a PostgreSQL database. The API Routes are created using RESTful CRUD methods.\n\nFront-end here :https://github.com/hemkass/payment_tunnel_Front\nThis Application is documented by SWAGGER and COMPODOCS\n\n\n\nBuilt With\n\nNestJs\nJavaScript\nTypescript\nPostgreSQL\nPostico\nPrisma\nSwagger\nCompoDocs\n\n\n\n\nInstallation Instructions and Requirement\n\n\n\nNode.js Installation\n\nPlease check that you have Node.js globally installed on your computer. \n If not, try reinstalling Node.js by following this link: https://nodejs.org/en/\n\n\n\n\n\nSQL database\n\n\n\nTo run, this project require to install PostgreSQL. If you don't have installed it yet, please check on their website : https://www.postgresql.org/\nDon't forget to add your DataBase in your .env\n\n\n\n\n\nClone the Code and install dependencies\n\n The first thing to do is to open git bash command line, and then simply you can clone the project under any of your favorite places as the following:\n\n\ngh repo clone hemkass/PaymentTunnel_NestJs \n\n\n\n\n\n\nBefore Starting\n\nPlease to understand infrastructure, routes possibler, watch before :\n\n\n\nCOMPODOCS\n\n\nTo run it :\n\n$ npx @compodoc/compodoc -p tsconfig.json -sOpen your browser and navigate to http://localhost:8080\nif you have any trouble, please check nestJs documentation :\nhttps://docs.nestjs.com/recipes/documentation\n\n\n \n\nSWAGGER\n\nOpen your browser and navigate to http://localhost:3000/api\n\n# Running the app\n\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n\n# production mode\n$ npm run start:prodHow does this API work - API CHANNEL ?\n\nSTEP 1 : Add product from your cart\n\n\nPOST\nhttp://localhost:3000/products/add/cart/:productId/:cartIdcartId is optional, if you don't send one, a new cart will be created.\nPATCH\nSTEP 2 bis : Remove product from your cart also \n\n\nhttp://localhost:3000/products/remove/:productId/:cartIdSTEP 3: USERS \n\n\nPOST\nhttp://localhost:3000/users/signupSTEP 4: Add paiement\n\n\nhttp://localhost:3000/payments/createStay in touch\n\n\n\n\n\n\n\n\nc81012daa98c38113692f10fc2646dddc74aa563\n\n\n\n\n\n\n\n\nAuthor - Marine Corbel\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CartsModule\n\n\n\ncluster_CartsModule_providers\n\n\n\ncluster_PaymentsModule\n\n\n\ncluster_PaymentsModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCartsModule\n\nCartsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCartsModule->AppModule\n\n\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nAppModule -->\n\nPaymentsModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nCartsModule -->\n\nPrismaService->CartsModule\n\n\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nProductsModule -->\n\nPrismaService->ProductsModule\n\n\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nCartsService\n\nCartsService\n\nCartsModule -->\n\nCartsService->CartsModule\n\n\n\nProductsModule -->\n\nCartsService->ProductsModule\n\n\n\n\n\nPaymentsService\n\nPaymentsService\n\nPaymentsModule -->\n\nPaymentsService->PaymentsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/removeProductDTO.html":{"url":"classes/removeProductDTO.html","title":"class - removeProductDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  removeProductDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/removeProduct.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cart\n                            \n                            \n                                product\n                            \n                            \n                                productOncart\n                            \n                            \n                                    Optional\n                                quantityRemoved\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Cart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'product to put in cart'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/removeProduct.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/removeProduct.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productOncart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductsOnCart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/removeProduct.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        quantityRemoved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'product quantity wanted, if empty, by default, it will be 1 '})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/removeProduct.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsEnum, IsNumber, IsOptional, IsString } from 'class-validator';\nimport { Cart, Product, ProductsOnCart } from '@prisma/client';\nexport class removeProductDTO {\n  @ApiPropertyOptional({\n    description: 'product quantity wanted, if empty, by default, it will be 1 ',\n  })\n  quantityRemoved?:number;\n  @ApiPropertyOptional({ description: 'product to put in cart' })\n  cart: Cart;\n\n  @ApiProperty()\nproductOncart:ProductsOnCart;\n\n  @ApiProperty()\n  product: Product;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            date   (prisma/.../product-factory.ts)\n                        \n                        \n                            dateInNmonths   (utils/.../utils.ts)\n                        \n                        \n                            ExistingCart   (src/.../existing-cart.ts)\n                        \n                        \n                            ExistingProduct   (src/.../current-product.decorator.ts)\n                        \n                        \n                            ExistingProductOnCart   (src/.../current-productOnCart.decorator.ts)\n                        \n                        \n                            mode   (utils/.../utils.ts)\n                        \n                        \n                            prisma   (prisma/.../seed.ts)\n                        \n                        \n                            randomPictures   (prisma/.../product-factory.ts)\n                        \n                        \n                            randomWordInPrismaEnum   (prisma/.../product-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    prisma/factories/product-factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomPictures\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  let maxIndex = getRandomIntInclusive(1, 10);\n  let pictures: Object[] = [];\n  let pictureObject;\n  for (let index = 0; index \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomWordInPrismaEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (dataArr): any => {\n  //   console.log('mes datas', dataArr);\n  var RoleArray = Object.keys(dataArr).map(function (Role) {\n    return Role;\n  });\n  let randomNumber = getRandomIntInclusive(0, RoleArray.length);\n  return RoleArray[randomNumber];\n}\n                    \n                \n\n\n        \n    \n\n    utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dateInNmonths\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (n) => {\n  let d = new Date();\n  return d.setMonth(d.getMonth() + n);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (arr) => {\n  const mode = {};\n  let max = 0,\n    count = 0;\n\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n    src/carts/decorators/existing-cart.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExistingCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: never, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.existingCart;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/products/decorator/current-product.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExistingProduct\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: never, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.existingProduct;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/products/decorator/current-productOnCart.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExistingProductOnCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: never, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.existingProductOncart;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
