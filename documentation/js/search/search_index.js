var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddOwnerDto.html",[0,0.073,1,1.805]],["body/classes/AddOwnerDto.html",[0,0.095,1,2.355,2,1.865,3,0.255,4,0.255,5,0.222,6,4.487,7,2.307,8,0.444,9,1.706,10,0.827,11,4.186,12,3.273,13,1.686,14,3.273,15,3.273,16,4.186,17,3.663,18,0.929,19,0.028,20,3.471,21,2.746,22,3.136,23,1.196,24,3.136,25,3.136,26,3.136,27,2.971,28,4.979,29,3.136,30,3.136,31,3.136,32,3.136,33,3.136,34,3.136,35,3.136,36,0.354,37,3.65,38,2.961,39,3.709,40,1.701,41,3.471,42,2.961,43,1.33,44,0.354,45,0.986,46,2.307,47,2.307,48,2.307,49,0.018,50,0.018]],["title/interfaces/Adress.html",[20,1.978,45,1.046]],["body/interfaces/Adress.html",[0,0.105,1,1.968,3,0.295,4,0.295,5,0.256,6,2.668,7,2.668,8,0.514,9,1.882,10,0.808,11,3.049,12,2.384,13,1.228,14,2.384,15,2.384,16,3.049,17,2.668,18,0.885,19,0.028,20,3.751,27,3.066,36,0.39,37,4.027,38,3.189,39,3.899,40,1.968,41,3.623,42,3.189,43,1.538,44,0.39,45,1.141,46,4.197,47,4.197,48,4.197,49,0.02,50,0.02,51,2.157]],["title/controllers/AppController.html",[52,1.213,53,2.186]],["body/controllers/AppController.html",[0,0.096,3,0.357,4,0.357,5,0.309,8,0.62,19,0.029,21,2.01,23,0.875,27,2.479,36,0.44,44,0.357,49,0.023,50,0.023,52,1.97,53,3.551,54,1.597,55,3.681,56,1.361,57,5.143,58,4.379,59,1.189,60,0.563,61,3.179,62,3.681,63,1.483,64,4.379,65,1.597,66,4.379]],["title/modules/AppModule.html",[67,1.126,68,2.186]],["body/modules/AppModule.html",[0,0.07,3,0.261,4,0.261,5,0.226,19,0.029,36,0.513,44,0.261,49,0.019,50,0.019,53,3.31,54,1.606,60,0.412,61,3.188,62,2.693,67,1.492,68,4.345,69,1.359,70,1.731,71,2.693,72,2.693,73,2.693,74,3.494,75,3.494,76,3.494,77,3.494,78,3.494,79,1.595,80,2.194,81,1.595,82,1.595,83,3.204,84,2.391,85,4.406,86,3.204,87,3.204,88,3.204,89,3.204,90,3.204,91,2.693,92,3.204,93,2.693,94,3.204,95,3.204,96,3.204,97,1.905,98,3.204,99,3.204]],["title/injectables/AppService.html",[61,1.805,100,0.516]],["body/injectables/AppService.html",[0,0.1,3,0.372,4,0.372,5,0.323,8,0.647,19,0.028,23,0.912,27,2.543,36,0.372,44,0.372,49,0.024,50,0.024,56,1.396,57,5.218,59,1.239,60,0.587,61,3.007,65,1.664,100,0.86,101,1.794,102,3.838,103,4.565,104,4.565,105,4.565]],["title/controllers/CartsController.html",[52,1.213,106,2.186]],["body/controllers/CartsController.html",[0,0.074,3,0.275,4,0.275,5,0.239,8,0.478,10,0.647,13,1.546,18,0.709,19,0.029,21,2.096,23,0.913,27,2.375,36,0.486,43,1.433,44,0.275,49,0.019,50,0.019,52,1.231,54,1.231,56,1.151,59,1.24,60,0.434,63,1.144,65,1.665,79,0.917,106,3.002,107,2.84,108,2.22,109,2.22,110,4.568,111,1.752,112,3.36,113,3.378,114,1.92,115,4.568,116,3.378,117,1.335,118,1.335,119,3.378,120,3.444,121,3.84,122,3.378,123,3.808,124,2.009,125,2.84,126,2.009,127,2.485,128,1.55,129,1.833,130,2.485,131,2.84,132,1.437,133,2.22,134,2.274,135,3.378,136,3.378,137,3.378,138,2.485,139,3.378,140,1.144,141,2.84,142,2.84,143,2.485,144,3.378]],["title/modules/CartsModule.html",[67,1.126,74,1.978]],["body/modules/CartsModule.html",[0,0.079,3,0.296,4,0.296,5,0.257,10,0.515,18,0.565,19,0.029,23,0.727,36,0.483,44,0.296,49,0.02,50,0.02,54,1.75,56,0.917,59,0.987,60,0.468,67,1.625,69,1.543,70,1.886,74,3.753,79,1.655,80,2.39,81,1.811,82,1.811,84,2.604,106,3.531,109,2.391,117,1.063,118,1.063,128,1.669,132,1.918,133,2.391,145,3.058,146,3.058,147,3.638,148,3.058,149,4.035,150,4.802,151,3.638,152,4.035,153,3.058,154,3.638,155,3.058,156,1.974,157,3.638,158,3.638,159,3.638,160,3.058,161,3.058,162,3.058,163,3.638]],["title/injectables/CartsService.html",[100,0.516,132,1.046]],["body/injectables/CartsService.html",[0,0.054,3,0.202,4,0.202,5,0.175,8,0.351,10,0.683,13,1.744,18,0.678,19,0.029,23,1.029,27,2.475,36,0.356,44,0.202,49,0.016,50,0.016,56,0.924,59,1.31,60,0.319,63,0.839,65,1.759,79,1.31,97,3.063,100,0.569,101,0.974,111,2.069,112,2.698,114,1.518,117,1.41,118,1.41,124,2.87,128,1.137,132,1.154,140,1.744,164,2.083,165,3.668,166,4.826,167,3.668,168,3.668,169,1.234,170,1.629,171,2.478,172,1.683,173,3.668,174,2.478,175,2.478,176,3.668,177,2.478,178,3.668,179,2.478,180,1.234,181,2.478,182,0.78,183,1.823,184,2.369,185,3.172,186,2.181,187,0.839,188,1.629,189,2.411,190,1.629,191,1.345,192,2.478,193,4.691,194,2.698,195,2.478,196,2.478,197,2.478,198,2.411,199,1.234,200,2.478,201,2.478,202,2.478,203,2.478,204,1.137,205,1.478,206,1.234,207,1.137,208,1.629,209,2.478,210,2.698,211,3.67,212,2.478,213,1.137,214,2.083,215,2.083,216,1.629,217,1.234,218,1.826,219,1.823]],["title/injectables/CheckingProductOnCartMiddleware.html",[100,0.516,220,1.978]],["body/injectables/CheckingProductOnCartMiddleware.html",[0,0.067,3,0.249,4,0.249,5,0.216,8,0.434,10,0.605,13,1.037,18,0.663,19,0.029,23,0.853,36,0.456,44,0.249,45,0.963,49,0.018,50,0.018,56,1.076,59,0.831,60,0.394,63,1.037,100,0.663,101,1.204,111,1.665,114,0.963,117,1.248,118,1.248,120,1.821,132,0.963,140,1.037,169,1.525,180,1.525,182,0.963,187,1.446,204,1.405,205,1.037,206,1.525,207,1.405,213,1.405,217,1.525,218,1.525,219,2.253,220,2.54,221,3.617,222,2.253,223,3.142,224,2.575,225,2.277,226,3.063,227,2.317,228,2.04,229,2.448,230,2.649,231,2.886,232,2.886,233,3.063,234,2.317,235,3.142,236,1.96,237,1.821,238,1.662,239,1.662,240,1.525,241,1.662,242,1.821,243,1.525,244,1.96,245,2.575,246,2.807,247,2.807,248,3.164,249,3.142,250,2.575,251,2.575,252,2.575,253,2.575,254,1.662]],["title/injectables/ExistingCartMiddleware.html",[100,0.516,156,1.805]],["body/injectables/ExistingCartMiddleware.html",[0,0.061,3,0.228,4,0.228,5,0.198,8,0.397,10,0.568,13,1.906,18,0.622,19,0.029,23,0.801,36,0.441,44,0.228,45,0.881,49,0.017,50,0.017,56,1.01,59,0.76,60,0.36,63,0.948,79,1.388,97,3.04,100,0.622,101,1.101,111,1.586,114,1.77,117,1.172,118,1.172,120,1.666,128,1.285,132,0.881,133,1.841,134,1.395,140,0.948,156,2.176,169,1.395,170,1.841,172,1.84,180,1.395,182,0.881,183,2.061,184,2.176,185,2.636,186,1.666,187,1.358,188,2.636,189,1.841,190,1.841,191,1.52,199,1.395,204,1.285,205,0.948,206,1.395,207,1.285,213,1.285,217,1.395,218,1.395,223,2.95,227,2.176,228,1.972,229,2.332,230,2.546,231,2.774,232,2.774,234,2.176,236,1.84,239,1.52,240,1.395,241,1.52,243,1.395,244,1.285,247,1.841,254,1.52,255,2.061,256,2.801,257,2.801,258,3.371,259,3.371,260,3.371,261,2.355,262,2.061]],["title/injectables/ExistingProductMiddleware.html",[100,0.516,263,1.978]],["body/injectables/ExistingProductMiddleware.html",[0,0.068,3,0.255,4,0.255,5,0.222,8,0.444,10,0.615,18,0.674,19,0.029,23,0.867,36,0.438,44,0.255,45,0.986,49,0.018,50,0.018,56,1.094,59,0.851,60,0.403,63,1.062,100,0.674,101,1.232,111,1.686,117,1.269,118,1.269,120,1.865,129,1.701,140,1.062,169,1.561,180,1.561,182,0.986,187,1.976,199,1.561,204,1.439,205,1.062,206,1.561,207,1.439,213,1.439,217,1.561,218,1.561,223,3.194,224,2.636,225,2.294,227,2.355,228,2.057,229,2.479,230,2.676,231,2.916,232,2.916,234,2.355,236,1.992,238,1.701,239,1.701,240,1.561,241,1.701,243,1.561,244,2.466,246,2.061,254,1.701,263,2.582,264,3.663,265,2.307,266,3.136,267,3.136,268,3.65,269,3.65,270,2.636,271,2.636,272,2.636]],["title/controllers/PaymentsController.html",[52,1.213,273,2.186]],["body/controllers/PaymentsController.html",[0,0.093,3,0.348,4,0.348,5,0.302,19,0.029,36,0.433,44,0.348,49,0.023,50,0.023,52,1.556,54,1.556,60,0.549,63,1.445,65,1.556,108,2.806,109,2.806,114,1.343,121,3.588,126,2.538,273,3.495,274,3.588,275,4.269,276,3.912,277,2.885,278,3.588,279,4.269,280,4.269,281,4.269,282,3.588,283,4.269,284,5.793,285,3.14,286,4.269,287,4.269,288,4.269]],["title/modules/PaymentsModule.html",[67,1.126,75,1.978]],["body/modules/PaymentsModule.html",[0,0.094,3,0.35,4,0.35,5,0.304,19,0.028,36,0.473,44,0.35,49,0.023,50,0.023,54,1.948,60,0.553,67,1.809,69,1.824,70,2.099,75,3.789,80,2.66,81,2.141,82,2.141,84,2.898,273,3.82,277,3.457,278,3.615,289,3.615,290,3.615,291,4.3,292,4.3]],["title/injectables/PaymentsService.html",[100,0.516,277,1.805]],["body/injectables/PaymentsService.html",[0,0.108,3,0.401,4,0.401,5,0.348,19,0.028,36,0.401,44,0.401,49,0.025,50,0.025,60,0.634,100,0.9,101,1.936,277,3.147,293,4.142]],["title/modules/PrismaModule.html",[67,1.126,76,1.978]],["body/modules/PrismaModule.html",[0,0.08,3,0.297,4,0.297,5,0.258,10,0.517,18,0.566,19,0.029,23,0.729,36,0.466,44,0.297,49,0.02,50,0.02,56,0.919,59,0.991,60,0.469,65,1.33,67,1.821,69,1.548,70,1.89,76,3.756,79,1.734,80,2.395,81,1.817,82,1.817,84,2.919,117,1.066,118,1.066,182,1.148,240,2.395,294,3.649,295,3.649,296,3.649,297,4.81,298,3.649,299,4.81,300,4.49,301,3.649,302,5.719,303,3.649,304,3.649,305,3.649,306,3.649,307,3.649,308,3.649,309,3.649]],["title/injectables/PrismaService.html",[79,0.903,100,0.516]],["body/injectables/PrismaService.html",[0,0.085,3,0.317,4,0.317,5,0.275,8,0.551,10,0.551,18,0.604,19,0.029,23,1.002,36,0.408,44,0.317,49,0.021,50,0.021,56,1.263,59,1.361,60,0.5,79,1.361,100,0.778,101,1.528,111,2.139,117,1.137,118,1.137,140,1.878,182,1.223,243,1.937,300,4.082,310,3.27,311,5.014,312,5.014,313,6.21,314,5.014,315,5.861,316,3.889,317,3.27,318,3.889,319,3.889,320,3.889,321,3.889,322,3.889]],["title/controllers/ProductsController.html",[52,1.213,323,1.978]],["body/controllers/ProductsController.html",[0,0.035,3,0.129,4,0.129,5,0.112,8,0.224,10,0.634,13,1.725,18,0.764,19,0.029,21,1.913,23,0.833,27,2.759,36,0.454,43,0.671,44,0.129,49,0.011,50,0.011,52,1.195,54,0.577,56,0.651,59,1.132,60,0.204,65,1.195,108,1.04,111,1.725,114,1.939,117,1.106,118,1.219,120,2.48,123,3.067,124,0.941,125,1.33,126,0.941,127,1.164,129,2.052,131,1.33,132,0.813,134,1.631,138,1.164,140,1.109,141,1.33,142,1.33,143,1.902,169,0.788,182,0.498,184,2.052,186,0.941,187,2.087,204,0.726,205,0.536,207,0.726,225,1.016,229,1.631,230,2.774,236,0.726,237,0.941,238,0.859,242,1.537,244,1.913,248,2.661,276,1.164,323,1.537,324,1.33,325,2.755,326,2.755,327,3.783,328,2.585,329,2.755,330,1.582,331,3.812,332,2.941,333,2.173,334,2.154,335,2.228,336,2.173,337,2.25,338,1.699,339,3.18,340,4.474,341,4.17,342,3.18,343,1.582,344,2.585,345,1.582,346,1.582,347,3.277,348,1.582,349,2.585,350,1.582,351,1.582,352,1.582,353,2.585,354,1.582,355,1.582,356,2.486,357,2.783,358,1.582,359,1.582,360,2.585,361,1.33,362,1.582,363,1.33,364,2.755,365,2.585,366,1.04,367,2.585,368,1.699,369,1.582,370,1.582,371,1.582,372,1.582,373,1.582,374,1.582,375,1.582,376,1.582,377,2.173,378,1.582,379,1.582,380,1.582,381,1.582,382,2.585,383,1.902,384,2.173,385,1.582,386,3.277,387,2.585,388,1.582,389,1.582,390,1.33,391,1.33,392,1.33,393,1.582,394,1.582,395,1.582,396,1.582,397,1.582,398,2.173,399,1.33,400,4.17,401,1.582,402,1.582,403,1.582,404,1.582,405,2.585,406,3.277,407,1.582,408,1.582,409,2.585,410,1.582,411,1.582,412,1.582,413,1.582]],["title/modules/ProductsModule.html",[67,1.126,77,1.978]],["body/modules/ProductsModule.html",[0,0.067,3,0.249,4,0.249,5,0.216,10,0.433,18,0.474,19,0.029,23,0.61,36,0.501,44,0.249,49,0.018,50,0.018,54,1.554,56,0.77,59,0.829,60,0.393,67,1.443,69,1.296,70,1.675,77,3.708,79,1.571,80,2.123,81,1.521,82,1.521,84,2.313,114,0.961,117,0.893,118,0.893,128,1.402,132,1.821,134,1.521,148,2.568,149,3.584,150,4.467,152,2.568,153,2.568,155,2.568,156,1.657,160,4.867,161,4.867,162,3.584,220,1.817,225,2.275,237,1.817,238,1.657,263,1.817,323,2.92,366,2.008,414,2.568,415,2.568,416,3.055,417,3.055,418,2.568,419,3.055,420,3.055,421,3.055,422,3.055,423,3.055,424,3.055,425,4.91,426,4.91,427,3.055,428,3.055,429,4.263,430,3.055,431,3.055]],["title/injectables/ProductsService.html",[100,0.516,225,1.307]],["body/injectables/ProductsService.html",[0,0.029,3,0.107,4,0.107,5,0.093,8,0.187,10,0.616,13,1.144,18,0.345,19,0.029,23,0.913,27,1.322,36,0.275,44,0.107,49,0.009,50,0.009,56,0.56,59,1.181,60,0.17,65,1.792,79,0.917,91,1.109,97,3.413,100,0.345,101,0.518,111,1.978,112,1.635,114,1.369,117,1.272,118,1.272,124,2.587,132,1.063,138,2.119,140,1.789,143,2.776,169,1.107,170,0.867,172,1.02,184,3.082,185,3.126,186,3.006,187,1.877,188,3.126,189,3.004,190,2.222,191,2.047,193,3.658,198,2.688,199,1.879,205,0.975,208,1.893,210,2.487,211,2.421,214,2.841,215,1.868,216,1.461,225,0.873,237,0.785,244,1.551,248,1.322,249,2.119,262,2.487,285,2.119,323,0.785,325,1.868,326,1.868,329,1.868,357,1.635,361,1.109,377,1.868,390,1.868,391,1.868,392,1.109,398,1.868,399,1.868,418,1.109,432,1.109,433,3.38,434,2.223,435,3.38,436,2.223,437,1.319,438,2.223,439,1.319,440,1.319,441,2.223,442,1.319,443,2.223,444,1.319,445,2.223,446,1.319,447,2.223,448,1.319,449,2.223,450,1.319,451,1.319,452,2.421,453,1.319,454,1.319,455,1.319,456,1.319,457,1.319,458,4.09,459,3.438,460,1.319,461,1.319,462,1.319,463,1.563,464,2.88,465,2.223,466,1.319,467,1.319,468,1.319,469,1.319,470,1.319,471,1.319,472,3.38,473,1.319,474,1.319,475,1.319,476,1.109,477,1.109,478,2.841,479,1.319,480,1.319,481,1.319,482,2.223,483,2.223,484,1.319,485,2.88,486,1.319,487,1.319,488,2.223,489,1.319,490,1.319,491,1.319,492,1.319,493,1.319,494,1.319,495,2.223,496,1.319,497,1.319,498,1.319]],["title/interfaces/Request.html",[45,1.046,228,1.213]],["body/interfaces/Request.html",[0,0.065,3,0.244,4,0.244,5,0.212,8,0.425,9,1.654,10,0.596,13,1.949,18,0.466,19,0.029,36,0.452,44,0.244,45,0.944,49,0.018,50,0.018,51,1.784,60,0.386,63,1.016,79,1.143,97,3.135,100,0.653,111,1.016,114,1.898,128,1.377,132,0.944,133,1.972,134,2.625,140,1.016,156,1.628,172,1.377,180,1.494,182,0.944,183,2.207,184,2.284,185,2.767,186,1.784,187,1.425,188,2.767,189,1.972,190,1.972,191,1.628,199,1.494,204,1.377,205,1.016,206,1.494,207,1.377,213,1.377,217,1.494,218,1.494,227,1.628,228,1.922,229,1.494,230,2.096,231,2.284,232,2.284,234,2.284,236,1.932,239,1.628,240,1.494,241,1.628,243,1.494,244,1.377,247,1.972,254,1.628,255,2.207,258,3.539,259,3.539,260,3.539,261,2.522,262,2.207]],["title/interfaces/Request-1.html",[45,0.877,228,1.016,463,1.512]],["body/interfaces/Request-1.html",[0,0.072,3,0.27,4,0.27,5,0.235,8,0.47,9,1.774,10,0.639,13,1.124,18,0.515,19,0.029,36,0.469,44,0.27,45,1.045,49,0.019,50,0.019,51,1.975,60,0.427,63,1.124,100,0.701,111,1.124,114,1.045,132,1.045,140,1.124,180,1.654,182,1.045,187,1.529,204,1.524,205,1.124,206,1.654,207,1.524,213,1.524,217,1.654,218,1.654,219,2.443,220,1.975,221,2.443,222,2.443,225,2.016,227,1.802,228,2.007,229,1.654,230,2.248,231,2.45,232,2.45,234,2.45,235,4.05,236,2.072,237,1.975,238,1.802,239,1.802,240,1.654,241,1.802,242,3.274,243,1.654,244,2.072,245,2.792,246,2.968,247,2.968,248,3.274,249,3.322,250,2.792,251,2.792,252,2.792,253,2.792,254,1.802]],["title/interfaces/Request-2.html",[45,0.877,208,1.832,228,1.016]],["body/interfaces/Request-2.html",[0,0.074,3,0.277,4,0.277,5,0.241,8,0.482,9,1.805,10,0.651,18,0.529,19,0.029,36,0.453,44,0.277,45,1.072,49,0.02,50,0.02,51,2.026,60,0.438,63,1.153,100,0.713,111,1.153,129,3.019,140,1.153,180,1.696,182,1.072,187,2.106,199,1.696,204,1.563,205,1.153,206,1.696,207,1.563,213,1.563,217,1.696,218,1.696,225,2.043,227,1.849,228,2.028,229,1.696,230,2.288,231,2.493,232,2.493,234,2.493,236,2.108,238,1.849,239,1.849,240,1.696,241,1.849,243,1.696,244,2.553,246,2.239,254,1.849,263,2.026,264,2.507,265,2.507,268,3.862,269,3.862,270,2.864,271,2.864,272,2.864]],["title/controllers/UsersController.html",[52,1.213,499,2.186]],["body/controllers/UsersController.html",[0,0.072,1,3.22,3,0.27,4,0.27,5,0.234,8,0.469,10,0.469,12,2.177,13,1.121,14,2.177,15,2.177,18,0.699,19,0.029,20,1.969,21,1.52,23,0.662,36,0.448,43,1.405,44,0.27,46,2.436,47,2.436,48,2.436,49,0.019,50,0.019,52,1.207,54,1.207,56,1.135,59,0.899,60,0.426,63,1.121,65,1.207,108,2.177,117,0.968,118,0.968,126,1.969,127,2.436,191,2.445,210,3.316,276,2.436,333,2.784,335,2.244,342,3.789,364,3.789,383,2.436,499,2.962,500,2.784,501,2.784,502,3.789,503,2.784,504,3.789,505,4.507,506,4.507,507,4.507,508,4.507,509,4.507,510,3.312,511,3.312,512,3.789,513,2.784,514,2.784,515,2.445,516,2.784,517,3.312,518,3.312,519,3.312,520,2.784,521,3.312,522,3.312,523,3.312,524,3.312,525,3.312,526,3.312,527,3.312,528,3.312,529,3.312,530,3.312,531,3.312,532,3.312,533,3.312,534,3.312,535,3.312,536,3.312,537,3.312,538,3.312,539,3.312,540,3.312]],["title/modules/UsersModule.html",[67,1.126,78,1.978]],["body/modules/UsersModule.html",[0,0.09,3,0.334,4,0.334,5,0.29,19,0.028,36,0.487,44,0.334,49,0.022,50,0.022,54,1.892,60,0.528,67,1.757,69,1.741,70,2.039,78,3.848,79,1.71,80,2.584,81,2.044,82,2.044,84,2.816,128,1.884,499,3.74,515,3.417,516,3.451,541,3.451,542,3.451,543,4.106,544,4.106]],["title/injectables/UsersService.html",[100,0.516,515,1.805]],["body/injectables/UsersService.html",[0,0.079,1,1.956,3,0.294,4,0.294,5,0.255,8,0.51,10,0.676,12,3.515,13,1.615,14,3.515,15,3.515,17,3.934,18,0.559,19,0.029,23,0.953,36,0.435,44,0.294,49,0.02,50,0.02,56,1.202,59,0.978,60,0.464,63,1.22,65,1.314,79,1.545,100,0.74,101,1.416,109,2.369,111,1.81,117,1.394,118,1.394,124,2.144,128,1.654,140,1.22,169,1.795,170,2.369,172,2.189,184,1.956,198,2.369,476,3.03,477,3.03,502,4.01,503,4.01,512,4.01,513,3.03,514,3.03,515,2.588,545,3.03,546,3.605,547,3.605,548,4.771,549,3.605]],["title/classes/addProductBodyDTO.html",[0,0.073,334,2.186]],["body/classes/addProductBodyDTO.html",[0,0.116,2,2.538,3,0.348,4,0.348,5,0.302,8,0.604,9,2.09,10,0.753,18,0.662,19,0.028,21,1.959,23,0.853,36,0.433,38,3.163,40,2.316,41,2.538,42,3.163,43,1.811,44,0.348,49,0.023,50,0.023,331,4.1,332,3.495,334,3.495,335,2.125,337,3.163,338,3.495,463,2.316,550,3.588,551,3.14,552,4.269,553,4.269,554,3.912]],["title/classes/addProductDTO.html",[0,0.073,368,2.186]],["body/classes/addProductDTO.html",[0,0.105,2,2.177,3,0.298,4,0.298,5,0.259,8,0.518,9,1.894,10,0.682,18,0.836,19,0.029,21,2.472,23,1.077,36,0.439,38,2.177,39,2.406,40,1.986,41,3.204,42,3.204,43,1.553,44,0.298,49,0.02,50,0.02,114,1.988,182,1.151,187,2.185,331,3.168,332,2.406,335,2.4,337,2.866,338,3.168,368,3.168,459,4.051,463,2.615,551,3.545,554,2.693,555,3.077,556,4.051,557,3.66,558,3.66,559,4.051,560,3.66,561,3.077,562,3.66]],["title/coverage.html",[563,3.8]],["body/coverage.html",[0,0.107,1,1.385,5,0.18,6,2.758,7,2.758,18,0.396,19,0.029,20,1.518,45,1.54,49,0.016,50,0.016,52,1.901,53,1.678,55,2.146,61,1.385,79,0.693,100,0.915,102,2.146,106,1.678,107,2.146,129,1.385,130,2.758,132,0.803,134,1.271,156,1.385,164,2.146,172,1.172,194,4.946,205,0.864,216,1.678,220,1.518,221,2.758,222,2.758,225,1.003,228,1.62,242,1.518,255,2.758,263,1.518,264,2.758,265,2.758,273,1.678,274,2.146,277,1.385,293,2.146,310,2.146,323,1.518,324,2.146,334,1.678,356,1.678,366,1.678,368,1.678,432,2.146,499,1.678,500,2.146,515,1.385,545,2.146,550,2.146,555,2.146,563,2.146,564,2.146,565,2.553,566,2.553,567,3.836,568,3.836,569,5.215,570,2.146,571,6.352,572,2.146,573,5.897,574,2.146,575,2.146,576,2.758,577,2.146,578,5.634,579,5.451,580,3.749,581,2.146,582,2.146,583,2.146,584,2.146,585,2.146,586,2.553,587,2.146,588,3.749,589,2.553,590,2.553,591,3.268,592,2.146,593,2.146,594,1.878,595,2.553,596,2.146]],["title/dependencies.html",[70,1.57,597,2.343]],["body/dependencies.html",[0,0.097,19,0.029,40,2.412,43,1.886,49,0.023,50,0.023,60,0.572,70,1.747,93,3.737,123,3.27,182,1.398,236,2.502,598,4.445,599,4.445,600,4.445,601,5.899,602,4.445,603,4.445,604,4.445,605,4.445,606,4.445,607,4.445,608,4.445,609,4.445,610,4.445,611,4.445,612,4.445,613,4.445,614,4.445,615,4.445]],["title/miscellaneous/functions.html",[616,1.832,617,3.358]],["body/miscellaneous/functions.html",[8,0.629,10,0.772,19,0.026,49,0.023,50,0.023,117,1.594,118,1.594,567,3.27,568,4.34,570,4.584,572,4.959,576,3.27,577,4.959,582,3.737,583,4.959,591,3.27,592,4.584,616,2.922,617,3.737,618,4.445,619,4.584,620,3.737,621,3.737,622,4.445,623,4.445,624,4.445,625,4.584,626,4.445]],["title/index.html",[8,0.395,627,2.787,628,2.787]],["body/index.html",[10,0.259,19,0.027,49,0.012,50,0.012,56,0.731,70,1.616,114,1.136,126,1.086,172,1.887,187,0.983,205,0.619,208,1.201,213,1.332,282,2.44,317,2.44,335,2.047,336,3.457,339,1.536,357,1.344,363,1.536,384,1.536,463,0.991,501,1.536,504,1.536,520,1.536,564,2.44,594,3.025,596,2.44,629,4.112,630,4.112,631,2.902,632,3.61,633,2.44,634,2.902,635,4.112,636,5.195,637,4.112,638,4.112,639,5.195,640,4.112,641,5.007,642,5.195,643,4.776,644,4.776,645,4.776,646,4.112,647,5.195,648,5.195,649,5.007,650,2.902,651,2.902,652,3.61,653,1.827,654,2.902,655,4.112,656,4.776,657,2.902,658,2.902,659,4.112,660,1.827,661,1.827,662,4.486,663,1.827,664,4.112,665,2.902,666,2.902,667,2.902,668,4.776,669,4.112,670,3.61,671,2.902,672,2.902,673,2.902,674,2.902,675,2.902,676,2.902,677,2.902,678,2.902,679,2.902,680,2.902,681,5.195,682,4.776,683,2.902,684,4.112,685,2.902,686,2.902,687,4.112,688,2.902,689,2.902,690,5.484,691,2.902,692,4.112,693,2.902,694,2.902,695,1.827,696,1.827,697,2.902,698,4.112,699,3.61,700,3.61,701,2.902,702,2.902,703,2.902,704,2.902,705,2.902,706,2.902,707,1.827,708,1.827,709,1.827,710,2.902,711,2.902,712,1.827,713,4.112,714,2.902,715,2.902,716,2.902,717,2.902,718,2.902,719,3.457,720,4.112,721,2.902,722,2.902,723,2.902,724,2.902,725,2.902,726,2.902,727,4.776,728,2.902,729,2.902,730,2.902,731,1.827,732,1.827,733,3.61,734,1.827,735,1.827,736,1.827,737,1.827,738,1.827,739,1.536,740,1.827,741,1.827,742,1.827,743,1.827,744,1.827,745,1.827,746,1.827,747,1.827,748,1.827,749,1.827,750,1.536,751,1.827,752,1.827]],["title/modules.html",[69,1.917]],["body/modules.html",[19,0.024,49,0.024,50,0.024,68,3.048,69,1.967,74,2.758,75,2.758,76,2.758,77,2.758,78,2.758,719,5.455,753,6.489,754,6.489,755,6.489]],["title/overview.html",[756,3.8]],["body/overview.html",[2,2.068,19,0.028,49,0.02,50,0.02,51,2.068,54,1.268,61,2.85,68,4.355,69,1.475,70,1.83,71,2.923,72,2.923,73,2.923,74,3.657,75,3.478,76,3.478,77,3.764,78,3.657,79,1.669,80,2.319,81,1.731,82,1.731,101,1.366,132,1.765,145,2.923,146,2.923,225,2.064,277,2.85,289,2.923,290,2.923,414,2.923,415,2.923,515,2.85,541,2.923,542,2.923,739,3.916,756,2.923,757,3.477,758,3.477,759,3.477]],["title/properties.html",[9,1.57,597,2.343]],["body/properties.html",[9,1.977,19,0.028,49,0.025,50,0.025,335,2.505,633,4.23,750,4.23,760,5.032,761,5.032,762,5.032]],["title/classes/removeProductDTO.html",[0,0.073,356,2.186]],["body/classes/removeProductDTO.html",[0,0.102,2,2.093,3,0.287,4,0.287,5,0.249,8,0.498,9,1.845,10,0.665,18,0.875,19,0.029,21,2.587,23,1.126,36,0.43,38,2.093,39,2.313,40,1.909,41,3.492,42,3.142,43,1.493,44,0.287,49,0.02,50,0.02,114,1.971,182,1.107,187,2.17,235,3.454,248,2.792,331,3.086,332,2.313,335,2.338,337,2.792,338,3.086,356,3.086,463,2.547,478,3.947,551,3.454,554,2.589,556,3.947,559,3.947,561,2.958,587,2.958,763,3.519,764,3.519,765,3.519,766,3.519,767,3.519,768,3.519]],["title/miscellaneous/variables.html",[616,1.832,769,3.358]],["body/miscellaneous/variables.html",[8,0.672,19,0.029,49,0.017,50,0.017,65,2.068,129,2.213,130,3.001,134,2.031,172,1.872,191,1.557,194,3.802,198,3.119,199,2.573,205,1.607,216,3.397,228,1.73,242,2.426,285,2.111,300,2.111,337,3.609,366,1.886,383,4.465,452,2.412,567,2.111,568,3.802,574,3.429,575,3.429,576,2.111,581,3.429,584,3.429,585,3.429,591,2.111,593,3.429,594,3.492,616,1.886,619,3.99,620,3.429,621,2.412,625,2.412,769,2.412,770,2.87,771,4.079,772,2.87,773,2.87,774,2.87,775,2.87,776,2.87,777,4.079,778,2.87,779,2.87,780,2.87,781,2.87,782,4.079,783,2.87,784,2.87,785,2.87,786,2.87,787,4.079,788,2.87,789,2.87,790,2.87,791,4.746,792,4.746,793,4.746,794,4.746,795,4.746,796,2.87,797,2.87,798,2.87]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/removeProductDTO.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":194,"title":{},"body":{"injectables/CartsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":761,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["0606060606",{"_index":530,"title":{},"body":{"controllers/UsersController.html":{}}}],["08c00329",{"_index":522,"title":{},"body":{"controllers/UsersController.html":{}}}],["1",{"_index":463,"title":{"interfaces/Request-1.html":{}},"body":{"injectables/ProductsService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"index.html":{},"classes/removeProductDTO.html":{}}}],["1'})@isoptional()@isnumber",{"_index":552,"title":{},"body":{"classes/addProductBodyDTO.html":{}}}],["1.17.3",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":208,"title":{"interfaces/Request-2.html":{}},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["2.2.0",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":531,"title":{},"body":{"controllers/UsersController.html":{}}}],["2:quantity",{"_index":480,"title":{},"body":{"injectables/ProductsService.html":{}}}],["3",{"_index":384,"title":{},"body":{"controllers/ProductsController.html":{},"index.html":{}}}],["3.0.2",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":739,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4.4.0",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["460b",{"_index":524,"title":{},"body":{"controllers/UsersController.html":{}}}],["5",{"_index":758,"title":{},"body":{"overview.html":{}}}],["59000",{"_index":535,"title":{},"body":{"controllers/UsersController.html":{}}}],["6",{"_index":757,"title":{},"body":{"overview.html":{}}}],["6.1.2",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["85c2",{"_index":525,"title":{},"body":{"controllers/UsersController.html":{}}}],["9",{"_index":759,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["a7a7",{"_index":523,"title":{},"body":{"controllers/UsersController.html":{}}}],["add",{"_index":336,"title":{},"body":{"controllers/ProductsController.html":{},"index.html":{}}}],["added",{"_index":468,"title":{},"body":{"injectables/ProductsService.html":{}}}],["addowner",{"_index":502,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["addowner(@body",{"_index":539,"title":{},"body":{"controllers/UsersController.html":{}}}],["addowner(createuserdata",{"_index":503,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["addownerdto",{"_index":1,"title":{"classes/AddOwnerDto.html":{}},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["addproductbodydto",{"_index":334,"title":{"classes/addProductBodyDTO.html":{}},"body":{"controllers/ProductsController.html":{},"classes/addProductBodyDTO.html":{},"coverage.html":{}}}],["addproductdata",{"_index":390,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["addproductdata.quantitywanted",{"_index":391,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["addproductdto",{"_index":368,"title":{"classes/addProductDTO.html":{}},"body":{"controllers/ProductsController.html":{},"classes/addProductDTO.html":{},"coverage.html":{}}}],["addproducttocart",{"_index":325,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["addproducttocart(addproductdata",{"_index":438,"title":{},"body":{"injectables/ProductsService.html":{}}}],["addproducttocart(productid",{"_index":330,"title":{},"body":{"controllers/ProductsController.html":{}}}],["adress",{"_index":20,"title":{"interfaces/Adress.html":{}},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["adress_bill",{"_index":11,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{}}}],["adress_delivery",{"_index":12,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["agency/clothes_ecommerce.git",{"_index":746,"title":{},"body":{"index.html":{}}}],["allproducts",{"_index":433,"title":{},"body":{"injectables/ProductsService.html":{}}}],["already",{"_index":473,"title":{},"body":{"injectables/ProductsService.html":{}}}],["api",{"_index":649,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":364,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apibody({type",{"_index":333,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":41,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["apiproperty()@isemail",{"_index":30,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["apiproperty()@isoptional",{"_index":25,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["apiproperty()@isstring",{"_index":28,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["apipropertyoptional",{"_index":42,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["apipropertyoptional()@isoptional",{"_index":22,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["apipropertyoptional()@isstring",{"_index":33,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["apipropertyoptional({description",{"_index":551,"title":{},"body":{"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["apiquery",{"_index":365,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apitags",{"_index":127,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apitags('carts",{"_index":136,"title":{},"body":{"controllers/CartsController.html":{}}}],["apitags('products",{"_index":375,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apitags('users",{"_index":517,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":317,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":322,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":53,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":664,"title":{},"body":{"index.html":{}}}],["apply(existingcartmiddleware",{"_index":158,"title":{},"body":{"modules/CartsModule.html":{}}}],["appmodule",{"_index":68,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":61,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arr",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":111,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"injectables/UsersService.html":{}}}],["author",{"_index":750,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":140,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"injectables/UsersService.html":{}}}],["back",{"_index":658,"title":{},"body":{"index.html":{}}}],["backend",{"_index":631,"title":{},"body":{"index.html":{}}}],["bash",{"_index":700,"title":{},"body":{"index.html":{}}}],["before",{"_index":645,"title":{},"body":{"index.html":{}}}],["bis",{"_index":735,"title":{},"body":{"index.html":{}}}],["body",{"_index":276,"title":{},"body":{"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["body('quantity",{"_index":387,"title":{},"body":{"controllers/ProductsController.html":{}}}],["bodychargedto",{"_index":283,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["bootstrap",{"_index":583,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":755,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":719,"title":{},"body":{"index.html":{},"modules.html":{}}}],["built",{"_index":635,"title":{},"body":{"index.html":{}}}],["c81012daa98c38113692f10fc2646dddc74aa563",{"_index":749,"title":{},"body":{"index.html":{}}}],["calculate",{"_index":467,"title":{},"body":{"injectables/ProductsService.html":{}}}],["calculatetotalcart",{"_index":165,"title":{},"body":{"injectables/CartsService.html":{}}}],["calculatetotalcart(cartid",{"_index":173,"title":{},"body":{"injectables/CartsService.html":{}}}],["calcultatetotal",{"_index":434,"title":{},"body":{"injectables/ProductsService.html":{}}}],["calcultatetotal(datas",{"_index":441,"title":{},"body":{"injectables/ProductsService.html":{}}}],["cart",{"_index":114,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/addProductDTO.html":{},"index.html":{},"classes/removeProductDTO.html":{}}}],["cart.id",{"_index":143,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["cart.products.map((products",{"_index":201,"title":{},"body":{"injectables/CartsService.html":{}}}],["cart.total",{"_index":469,"title":{},"body":{"injectables/ProductsService.html":{}}}],["cart.ts",{"_index":581,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cartid",{"_index":13,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["carts",{"_index":109,"title":{},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{},"controllers/PaymentsController.html":{},"injectables/UsersService.html":{}}}],["carts.controller",{"_index":154,"title":{},"body":{"modules/CartsModule.html":{}}}],["carts.service",{"_index":133,"title":{},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/ExistingCartMiddleware.html":{},"interfaces/Request.html":{}}}],["carts/carts.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["cartscontroller",{"_index":106,"title":{"controllers/CartsController.html":{}},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{},"coverage.html":{}}}],["cartservice",{"_index":138,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["cartsmodule",{"_index":74,"title":{"modules/CartsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules.html":{},"overview.html":{}}}],["cartsservice",{"_index":132,"title":{"injectables/CartsService.html":{}},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"coverage.html":{},"overview.html":{}}}],["cartwithoutdeletedproduct",{"_index":483,"title":{},"body":{"injectables/ProductsService.html":{}}}],["cartwithoutdeletedproduct.id",{"_index":490,"title":{},"body":{"injectables/ProductsService.html":{}}}],["cartwithoutdeletedproduct.total",{"_index":491,"title":{},"body":{"injectables/ProductsService.html":{}}}],["case",{"_index":472,"title":{},"body":{"injectables/ProductsService.html":{}}}],["catch",{"_index":217,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["channel",{"_index":732,"title":{},"body":{"index.html":{}}}],["check",{"_index":682,"title":{},"body":{"index.html":{}}}],["checkingproductoncartmiddleware",{"_index":220,"title":{"injectables/CheckingProductOnCartMiddleware.html":{}},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"modules/ProductsModule.html":{},"interfaces/Request-1.html":{},"coverage.html":{}}}],["city",{"_index":47,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/UsersController.html":{}}}],["class",{"_index":0,"title":{"classes/AddOwnerDto.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"coverage.html":{},"dependencies.html":{},"classes/removeProductDTO.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddOwnerDto.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"overview.html":{},"classes/removeProductDTO.html":{}}}],["client",{"_index":306,"title":{},"body":{"modules/PrismaModule.html":{}}}],["clone",{"_index":642,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_cartsmodule",{"_index":145,"title":{},"body":{"modules/CartsModule.html":{},"overview.html":{}}}],["cluster_cartsmodule_providers",{"_index":146,"title":{},"body":{"modules/CartsModule.html":{},"overview.html":{}}}],["cluster_paymentsmodule",{"_index":289,"title":{},"body":{"modules/PaymentsModule.html":{},"overview.html":{}}}],["cluster_paymentsmodule_providers",{"_index":290,"title":{},"body":{"modules/PaymentsModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":294,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_prismamodule_providers",{"_index":295,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_productsmodule",{"_index":414,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_providers",{"_index":415,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":541,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":542,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":643,"title":{},"body":{"index.html":{}}}],["command",{"_index":701,"title":{},"body":{"index.html":{}}}],["commerce",{"_index":630,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":715,"title":{},"body":{"index.html":{}}}],["compodocs",{"_index":647,"title":{},"body":{"index.html":{}}}],["computer",{"_index":685,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":148,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["configure(consumer",{"_index":149,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["connect",{"_index":477,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["console.log('deleteproduct",{"_index":402,"title":{},"body":{"controllers/ProductsController.html":{}}}],["console.log('error",{"_index":219,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{}}}],["console.log('hello",{"_index":403,"title":{},"body":{"controllers/ProductsController.html":{}}}],["console.log('mes",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('middleware",{"_index":245,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{}}}],["console.log('product",{"_index":392,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["console.log('productoncart",{"_index":397,"title":{},"body":{"controllers/ProductsController.html":{}}}],["console.log('rjet",{"_index":271,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{},"interfaces/Request-2.html":{}}}],["const",{"_index":199,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-2.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":169,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["constructor(prisma",{"_index":170,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(productsservice",{"_index":224,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{}}}],["consumer",{"_index":152,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["consumer.apply(checkingproductoncartmiddleware).forroutes",{"_index":431,"title":{},"body":{"modules/ProductsModule.html":{}}}],["consumer.apply(existingcartmiddleware).forroutes",{"_index":430,"title":{},"body":{"modules/ProductsModule.html":{}}}],["consumer.apply(existingproductmiddleware).forroutes",{"_index":424,"title":{},"body":{"modules/ProductsModule.html":{}}}],["contents",{"_index":634,"title":{},"body":{"index.html":{}}}],["context",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controller",{"_index":52,"title":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('carts",{"_index":137,"title":{},"body":{"controllers/CartsController.html":{}}}],["controller('payments",{"_index":279,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["controller('products",{"_index":376,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('users",{"_index":518,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["corbel",{"_index":752,"title":{},"body":{"index.html":{}}}],["count",{"_index":452,"title":{},"body":{"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["country",{"_index":48,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/UsersController.html":{}}}],["coverage",{"_index":563,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":476,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["createcart",{"_index":166,"title":{},"body":{"injectables/CartsService.html":{}}}],["created",{"_index":670,"title":{},"body":{"index.html":{}}}],["createparamdecorator",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpayment",{"_index":281,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["creates",{"_index":657,"title":{},"body":{"index.html":{}}}],["createuserdata",{"_index":512,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["crud",{"_index":673,"title":{},"body":{"index.html":{}}}],["currentcart",{"_index":284,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["d",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d.setmonth(d.getmonth",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d35edb885203",{"_index":526,"title":{},"body":{"controllers/UsersController.html":{}}}],["data",{"_index":198,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["dataarr",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":641,"title":{},"body":{"index.html":{}}}],["datas",{"_index":285,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":216,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dateinnmonths",{"_index":593,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["declare",{"_index":239,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["decorator/current",{"_index":367,"title":{},"body":{"controllers/ProductsController.html":{}}}],["decorators",{"_index":21,"title":{},"body":{"classes/AddOwnerDto.html":{},"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["decorators/existing",{"_index":135,"title":{},"body":{"controllers/CartsController.html":{}}}],["decrement",{"_index":494,"title":{},"body":{"injectables/ProductsService.html":{}}}],["default",{"_index":337,"title":{},"body":{"controllers/ProductsController.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AddOwnerDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["delete",{"_index":361,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["delete('/:productid",{"_index":349,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deletedfromcart",{"_index":400,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteproduct",{"_index":326,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(id",{"_index":348,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteproduct(product",{"_index":443,"title":{},"body":{"injectables/ProductsService.html":{}}}],["dependencies",{"_index":70,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PaymentsModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":335,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"index.html":{},"properties.html":{},"classes/removeProductDTO.html":{}}}],["development",{"_index":726,"title":{},"body":{"index.html":{}}}],["disconnect",{"_index":484,"title":{},"body":{"injectables/ProductsService.html":{}}}],["documentation",{"_index":564,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documented",{"_index":677,"title":{},"body":{"index.html":{}}}],["don't",{"_index":692,"title":{},"body":{"index.html":{}}}],["dtos/addproduct.dto",{"_index":369,"title":{},"body":{"controllers/ProductsController.html":{}}}],["dtos/addproduct_body.dto",{"_index":370,"title":{},"body":{"controllers/ProductsController.html":{}}}],["dtos/create",{"_index":513,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/removeproduct.dto",{"_index":372,"title":{},"body":{"controllers/ProductsController.html":{}}}],["du",{"_index":533,"title":{},"body":{"controllers/UsersController.html":{}}}],["dynamicmodule",{"_index":302,"title":{},"body":{"modules/PrismaModule.html":{}}}],["e",{"_index":629,"title":{},"body":{"index.html":{}}}],["email",{"_index":14,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["empty",{"_index":559,"title":{},"body":{"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["enableshutdownhooks",{"_index":312,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":314,"title":{},"body":{"injectables/PrismaService.html":{}}}],["end",{"_index":659,"title":{},"body":{"index.html":{}}}],["env",{"_index":696,"title":{},"body":{"index.html":{}}}],["env.${process.env.node_env",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["equal",{"_index":481,"title":{},"body":{"injectables/ProductsService.html":{}}}],["error",{"_index":218,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["examples",{"_index":342,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["except",{"_index":508,"title":{},"body":{"controllers/UsersController.html":{}}}],["exclude",{"_index":159,"title":{},"body":{"modules/CartsModule.html":{}}}],["executioncontext",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existing",{"_index":305,"title":{},"body":{"modules/PrismaModule.html":{}}}],["existingcart",{"_index":134,"title":{},"body":{"controllers/CartsController.html":{},"injectables/ExistingCartMiddleware.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["existingcartmiddleware",{"_index":156,"title":{"injectables/ExistingCartMiddleware.html":{}},"body":{"modules/CartsModule.html":{},"injectables/ExistingCartMiddleware.html":{},"modules/ProductsModule.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["existingproduct",{"_index":129,"title":{},"body":{"controllers/CartsController.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"interfaces/Request-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["existingproductmiddleware",{"_index":263,"title":{"injectables/ExistingProductMiddleware.html":{}},"body":{"injectables/ExistingProductMiddleware.html":{},"modules/ProductsModule.html":{},"interfaces/Request-2.html":{},"coverage.html":{}}}],["existingproductoncart",{"_index":242,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"controllers/ProductsController.html":{},"interfaces/Request-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":44,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["exports",{"_index":309,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":236,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"dependencies.html":{}}}],["express.js",{"_index":666,"title":{},"body":{"index.html":{}}}],["extends",{"_index":311,"title":{},"body":{"injectables/PrismaService.html":{}}}],["factory.ts",{"_index":568,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["faker",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":341,"title":{},"body":{"controllers/ProductsController.html":{}}}],["false})@post('add/cart/:productid",{"_index":345,"title":{},"body":{"controllers/ProductsController.html":{}}}],["fanny",{"_index":527,"title":{},"body":{"controllers/UsersController.html":{}}}],["favorite",{"_index":705,"title":{},"body":{"index.html":{}}}],["field",{"_index":505,"title":{},"body":{"controllers/UsersController.html":{}}}],["fields",{"_index":506,"title":{},"body":{"controllers/UsersController.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"coverage.html":{},"classes/removeProductDTO.html":{}}}],["find",{"_index":744,"title":{},"body":{"index.html":{}}}],["first",{"_index":652,"title":{},"body":{"index.html":{}}}],["following",{"_index":687,"title":{},"body":{"index.html":{}}}],["forget",{"_index":695,"title":{},"body":{"index.html":{}}}],["forroutes(cartscontroller",{"_index":163,"title":{},"body":{"modules/CartsModule.html":{}}}],["fortest",{"_index":298,"title":{},"body":{"modules/PrismaModule.html":{}}}],["fortest(prismaclient",{"_index":299,"title":{},"body":{"modules/PrismaModule.html":{}}}],["found",{"_index":207,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["framework",{"_index":663,"title":{},"body":{"index.html":{}}}],["france",{"_index":537,"title":{},"body":{"controllers/UsersController.html":{}}}],["front",{"_index":674,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":15,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["function",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":617,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:cartid",{"_index":115,"title":{},"body":{"controllers/CartsController.html":{}}}],["get('/:productid",{"_index":353,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getallproduct",{"_index":327,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getcart",{"_index":110,"title":{},"body":{"controllers/CartsController.html":{}}}],["getcart(@param('cartid",{"_index":144,"title":{},"body":{"controllers/CartsController.html":{}}}],["getcart(cartid",{"_index":113,"title":{},"body":{"controllers/CartsController.html":{}}}],["gethello",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getproductbyid",{"_index":328,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproductbyid(@param('productid",{"_index":380,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproductbyid(id",{"_index":352,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getrandomdate",{"_index":570,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrandomdate(maxdate",{"_index":622,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrandomintinclusive",{"_index":592,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrandomintinclusive(0",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrandomintinclusive(1",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrandomintinclusive(min",{"_index":624,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":627,"title":{"index.html":{}},"body":{}}],["gh",{"_index":707,"title":{},"body":{"index.html":{}}}],["git",{"_index":699,"title":{},"body":{"index.html":{}}}],["global",{"_index":240,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["globally",{"_index":683,"title":{},"body":{"index.html":{}}}],["hello",{"_index":104,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":304,"title":{},"body":{"modules/PrismaModule.html":{}}}],["hemkass/paymenttunnel_nestjs",{"_index":709,"title":{},"body":{"index.html":{}}}],["here",{"_index":675,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/api",{"_index":724,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/payments/createstay",{"_index":741,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/products/add/cart/:productid/:cartidcartid",{"_index":734,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/products/remove/:productid/:cartid",{"_index":736,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/users/signupstep",{"_index":738,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":721,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com/recipes/documentation",{"_index":723,"title":{},"body":{"index.html":{}}}],["https://github.com/hemkass/payment_tunnel_front",{"_index":676,"title":{},"body":{"index.html":{}}}],["https://gitlab.com/marine",{"_index":745,"title":{},"body":{"index.html":{}}}],["https://nodejs.org/en",{"_index":689,"title":{},"body":{"index.html":{}}}],["https://www.postgresql.org",{"_index":694,"title":{},"body":{"index.html":{}}}],["id",{"_index":184,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":243,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"injectables/PrismaService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["import",{"_index":36,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["imports",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["include",{"_index":185,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{}}}],["increment",{"_index":475,"title":{},"body":{"injectables/ProductsService.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"miscellaneous/functions.html":{},"classes/removeProductDTO.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":315,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["infrastructure",{"_index":711,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":100,"title":{"injectables/AppService.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":101,"title":{},"body":{"injectables/AppService.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["install",{"_index":644,"title":{},"body":{"index.html":{}}}],["installation",{"_index":636,"title":{},"body":{"index.html":{}}}],["installed",{"_index":684,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":637,"title":{},"body":{"index.html":{}}}],["interact",{"_index":667,"title":{},"body":{"index.html":{}}}],["interface",{"_index":45,"title":{"interfaces/Adress.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"coverage.html":{}}}],["interfaces",{"_index":51,"title":{},"body":{"interfaces/Adress.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"overview.html":{}}}],["iscart",{"_index":167,"title":{},"body":{"injectables/CartsService.html":{}}}],["iscart(cartid",{"_index":176,"title":{},"body":{"injectables/CartsService.html":{}}}],["isemail",{"_index":37,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{}}}],["isenum",{"_index":561,"title":{},"body":{"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["isglobal",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["isnumber",{"_index":554,"title":{},"body":{"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["isoptional",{"_index":38,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["isproduct",{"_index":435,"title":{},"body":{"injectables/ProductsService.html":{}}}],["isproduct(id",{"_index":445,"title":{},"body":{"injectables/ProductsService.html":{}}}],["isproductalreadyoncart",{"_index":465,"title":{},"body":{"injectables/ProductsService.html":{}}}],["isproductalreadyoncart.id",{"_index":474,"title":{},"body":{"injectables/ProductsService.html":{}}}],["isproductoncart",{"_index":436,"title":{},"body":{"injectables/ProductsService.html":{}}}],["isproductoncart(quantityincartdata",{"_index":447,"title":{},"body":{"injectables/ProductsService.html":{}}}],["isstring",{"_index":39,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["javascript",{"_index":678,"title":{},"body":{"index.html":{}}}],["js/faker",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["license",{"_index":633,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":742,"title":{},"body":{"index.html":{}}}],["lille",{"_index":536,"title":{},"body":{"controllers/UsersController.html":{}}}],["line",{"_index":702,"title":{},"body":{"index.html":{}}}],["link",{"_index":688,"title":{},"body":{"index.html":{}}}],["main",{"_index":577,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["marine",{"_index":751,"title":{},"body":{"index.html":{}}}],["martin",{"_index":528,"title":{},"body":{"controllers/UsersController.html":{}}}],["matching",{"_index":50,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/removeProductDTO.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":625,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["maxdate",{"_index":623,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maxindex",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":406,"title":{},"body":{"controllers/ProductsController.html":{}}}],["metadata",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":161,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["methods",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["middleware",{"_index":272,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{},"interfaces/Request-2.html":{}}}],["middleware/checking",{"_index":422,"title":{},"body":{"modules/ProductsModule.html":{}}}],["middleware/existing",{"_index":419,"title":{},"body":{"modules/ProductsModule.html":{}}}],["middleware/existing_cart.middleware",{"_index":157,"title":{},"body":{"modules/CartsModule.html":{}}}],["middlewareconsumer",{"_index":150,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["min",{"_index":626,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":616,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":632,"title":{},"body":{"index.html":{}}}],["mode",{"_index":594,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":67,"title":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PaymentsModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PaymentsModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":69,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PaymentsModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["n",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":118,"title":{},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":241,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["navigate",{"_index":720,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":662,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":43,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/CartsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"dependencies.html":{},"classes/removeProductDTO.html":{}}}],["nestmiddleware",{"_index":234,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["nestor@test.fr",{"_index":521,"title":{},"body":{"controllers/UsersController.html":{}}}],["never",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":205,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newcart",{"_index":112,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/ProductsService.html":{}}}],["newcart(@session",{"_index":139,"title":{},"body":{"controllers/CartsController.html":{}}}],["newcart(session",{"_index":119,"title":{},"body":{"controllers/CartsController.html":{}}}],["newcart.total",{"_index":497,"title":{},"body":{"injectables/ProductsService.html":{}}}],["newtotal",{"_index":211,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{}}}],["next",{"_index":231,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["nextfunction",{"_index":232,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["node.js",{"_index":639,"title":{},"body":{"index.html":{}}}],["notfounderror",{"_index":373,"title":{},"body":{"controllers/ProductsController.html":{}}}],["notfounderror('no",{"_index":408,"title":{},"body":{"controllers/ProductsController.html":{}}}],["notfoundexception",{"_index":180,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["notfoundexception('no",{"_index":206,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["now",{"_index":509,"title":{},"body":{"controllers/UsersController.html":{}}}],["npm",{"_index":727,"title":{},"body":{"index.html":{}}}],["npx",{"_index":714,"title":{},"body":{"index.html":{}}}],["number",{"_index":332,"title":{},"body":{"controllers/ProductsController.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["number(price",{"_index":461,"title":{},"body":{"injectables/ProductsService.html":{}}}],["number(products.quantityincart",{"_index":203,"title":{},"body":{"injectables/CartsService.html":{}}}],["number(products?.product?.price",{"_index":202,"title":{},"body":{"injectables/CartsService.html":{}}}],["number(quantitywanted",{"_index":462,"title":{},"body":{"injectables/ProductsService.html":{}}}],["number(total",{"_index":460,"title":{},"body":{"injectables/ProductsService.html":{}}}],["object",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(dataarr).map(function",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["one",{"_index":339,"title":{},"body":{"controllers/ProductsController.html":{},"index.html":{}}}],["onmoduleinit",{"_index":313,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":698,"title":{},"body":{"index.html":{}}}],["optional",{"_index":10,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/removeProductDTO.html":{}}}],["out",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PaymentsModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":756,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":716,"title":{},"body":{"index.html":{}}}],["package",{"_index":597,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paiement",{"_index":740,"title":{},"body":{"index.html":{}}}],["param",{"_index":125,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{}}}],["param('cartid",{"_index":396,"title":{},"body":{"controllers/ProductsController.html":{}}}],["param('productid",{"_index":386,"title":{},"body":{"controllers/ProductsController.html":{}}}],["parameter",{"_index":344,"title":{},"body":{"controllers/ProductsController.html":{}}}],["parameters",{"_index":117,"title":{},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":493,"title":{},"body":{"injectables/ProductsService.html":{}}}],["password",{"_index":16,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{}}}],["patch",{"_index":363,"title":{},"body":{"controllers/ProductsController.html":{},"index.html":{}}}],["patch('remove/:productid/:cartid",{"_index":395,"title":{},"body":{"controllers/ProductsController.html":{}}}],["path",{"_index":160,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["payment",{"_index":282,"title":{},"body":{"controllers/PaymentsController.html":{},"index.html":{}}}],["payment.paymentmethodid",{"_index":287,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["paymentmethodid",{"_index":286,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["payments",{"_index":275,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["payments.controller",{"_index":292,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["payments.service",{"_index":278,"title":{},"body":{"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{}}}],["payments/payments.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["paymentscontroller",{"_index":273,"title":{"controllers/PaymentsController.html":{}},"body":{"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"coverage.html":{}}}],["paymentservice",{"_index":280,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["paymentsmodule",{"_index":75,"title":{"modules/PaymentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentsModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentsservice",{"_index":277,"title":{"injectables/PaymentsService.html":{}},"body":{"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"coverage.html":{},"overview.html":{}}}],["phone",{"_index":17,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"injectables/UsersService.html":{}}}],["pictureobject",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pictures",{"_index":191,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":706,"title":{},"body":{"index.html":{}}}],["please",{"_index":681,"title":{},"body":{"index.html":{}}}],["port",{"_index":534,"title":{},"body":{"controllers/UsersController.html":{}}}],["possibler",{"_index":712,"title":{},"body":{"index.html":{}}}],["possibles",{"_index":747,"title":{},"body":{"index.html":{}}}],["post",{"_index":126,"title":{},"body":{"controllers/CartsController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["post('/addowner",{"_index":538,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/create",{"_index":121,"title":{},"body":{"controllers/CartsController.html":{},"controllers/PaymentsController.html":{}}}],["post('add/cart/:productid",{"_index":385,"title":{},"body":{"controllers/ProductsController.html":{}}}],["postcode",{"_index":46,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/UsersController.html":{}}}],["postgresql",{"_index":668,"title":{},"body":{"index.html":{}}}],["postico",{"_index":680,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":108,"title":{},"body":{"controllers/CartsController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["price",{"_index":189,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{}}}],["prisma",{"_index":172,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":303,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/.../product",{"_index":619,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma/.../seed.ts",{"_index":621,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":182,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"classes/addProductDTO.html":{},"dependencies.html":{},"classes/removeProductDTO.html":{}}}],["prisma/client/runtime",{"_index":374,"title":{},"body":{"controllers/ProductsController.html":{}}}],["prisma/factories/product",{"_index":567,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma/prisma.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProductsService.html":{}}}],["prisma/seed.ts",{"_index":576,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prismaclient",{"_index":300,"title":{},"body":{"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":76,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":79,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":377,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["product",{"_index":187,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"classes/addProductDTO.html":{},"index.html":{},"classes/removeProductDTO.html":{}}}],["product(s",{"_index":651,"title":{},"body":{"index.html":{}}}],["product.decorator",{"_index":131,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{}}}],["product.decorator.ts",{"_index":584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["product.id",{"_index":464,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.middleware",{"_index":420,"title":{},"body":{"modules/ProductsModule.html":{}}}],["product.middleware.ts",{"_index":265,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{},"interfaces/Request-2.html":{},"coverage.html":{}}}],["product.middleware.ts:15",{"_index":266,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{}}}],["product.middleware.ts:18",{"_index":267,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{}}}],["product.price",{"_index":470,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productdeleted",{"_index":409,"title":{},"body":{"controllers/ProductsController.html":{}}}],["productdeleted.id",{"_index":411,"title":{},"body":{"controllers/ProductsController.html":{}}}],["productfactory",{"_index":572,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["productid",{"_index":244,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["production",{"_index":730,"title":{},"body":{"index.html":{}}}],["productoncart",{"_index":248,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request-1.html":{},"classes/removeProductDTO.html":{}}}],["productoncart.decorator",{"_index":371,"title":{},"body":{"controllers/ProductsController.html":{}}}],["productoncart.decorator.ts",{"_index":585,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["productoncart.id",{"_index":485,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productoncart.middleware",{"_index":423,"title":{},"body":{"modules/ProductsModule.html":{}}}],["productoncart.middleware.ts",{"_index":222,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{},"coverage.html":{}}}],["productoncart.middleware.ts:16",{"_index":226,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{}}}],["productoncart.middleware.ts:19",{"_index":233,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{}}}],["productoncart.quantityincart",{"_index":479,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productoncart:productsoncart",{"_index":768,"title":{},"body":{"classes/removeProductDTO.html":{}}}],["productoncartdeleted",{"_index":486,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productpictures",{"_index":192,"title":{},"body":{"injectables/CartsService.html":{}}}],["products",{"_index":186,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{}}}],["products.controller",{"_index":418,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["products.service",{"_index":238,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["products/:productid",{"_index":427,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products/add/cart/:productid",{"_index":429,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products/products.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["products/remove/:productid/:cartid",{"_index":425,"title":{},"body":{"modules/ProductsModule.html":{}}}],["productscontroller",{"_index":323,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["productservice",{"_index":378,"title":{},"body":{"controllers/ProductsController.html":{}}}],["productsmodule",{"_index":77,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsoncart",{"_index":235,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{},"classes/removeProductDTO.html":{}}}],["productsservice",{"_index":225,"title":{"injectables/ProductsService.html":{}},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":656,"title":{},"body":{"index.html":{}}}],["promise",{"_index":360,"title":{},"body":{"controllers/ProductsController.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"properties.html":{},"classes/removeProductDTO.html":{}}}],["provide",{"_index":307,"title":{},"body":{"modules/PrismaModule.html":{}}}],["providers",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PaymentsModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["put",{"_index":556,"title":{},"body":{"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["quantity",{"_index":331,"title":{},"body":{"controllers/ProductsController.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["quantity's",{"_index":482,"title":{},"body":{"injectables/ProductsService.html":{}}}],["quantityincart",{"_index":458,"title":{},"body":{"injectables/ProductsService.html":{}}}],["quantityincartdata",{"_index":249,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request-1.html":{}}}],["quantityremoved",{"_index":478,"title":{},"body":{"injectables/ProductsService.html":{},"classes/removeProductDTO.html":{}}}],["quantityremoved?:number",{"_index":767,"title":{},"body":{"classes/removeProductDTO.html":{}}}],["quantitytoadd",{"_index":382,"title":{},"body":{"controllers/ProductsController.html":{}}}],["quantitywanted",{"_index":459,"title":{},"body":{"injectables/ProductsService.html":{},"classes/addProductDTO.html":{}}}],["quantitywanted?:number",{"_index":562,"title":{},"body":{"classes/addProductDTO.html":{}}}],["query",{"_index":362,"title":{},"body":{"controllers/ProductsController.html":{}}}],["query('cartid",{"_index":388,"title":{},"body":{"controllers/ProductsController.html":{}}}],["randomnumber",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randompictures",{"_index":574,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["randomwordinprismaenum",{"_index":575,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":64,"title":{},"body":{"controllers/AppController.html":{}}}],["recalculate",{"_index":209,"title":{},"body":{"injectables/CartsService.html":{}}}],["reflect",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["reinstalling",{"_index":686,"title":{},"body":{"index.html":{}}}],["remove",{"_index":357,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["removefromcart",{"_index":329,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["removefromcart(productid",{"_index":355,"title":{},"body":{"controllers/ProductsController.html":{}}}],["removefromcart(removeproductdata",{"_index":449,"title":{},"body":{"injectables/ProductsService.html":{}}}],["removeproductdata",{"_index":398,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["removeproductdata.quantityremoved",{"_index":399,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["removeproductdto",{"_index":356,"title":{"classes/removeProductDTO.html":{}},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"classes/removeProductDTO.html":{}}}],["repo",{"_index":708,"title":{},"body":{"index.html":{}}}],["reps",{"_index":404,"title":{},"body":{"controllers/ProductsController.html":{}}}],["req",{"_index":120,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{}}}],["req.body.cartid",{"_index":259,"title":{},"body":{"injectables/ExistingCartMiddleware.html":{},"interfaces/Request.html":{}}}],["req.body.productid",{"_index":269,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{},"interfaces/Request-2.html":{}}}],["req.existingcart",{"_index":247,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{}}}],["req.existingcart.id",{"_index":251,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{}}}],["req.existingproduct",{"_index":246,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["req.existingproduct.id",{"_index":250,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{}}}],["req.existingproductoncart",{"_index":253,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{}}}],["req.params.cartid",{"_index":258,"title":{},"body":{"injectables/ExistingCartMiddleware.html":{},"interfaces/Request.html":{}}}],["req.params.productid",{"_index":268,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{},"interfaces/Request-2.html":{}}}],["req.params[0].split('/').pop",{"_index":261,"title":{},"body":{"injectables/ExistingCartMiddleware.html":{},"interfaces/Request.html":{}}}],["req.query.cartid",{"_index":260,"title":{},"body":{"injectables/ExistingCartMiddleware.html":{},"interfaces/Request.html":{}}}],["req.session.cartid",{"_index":389,"title":{},"body":{"controllers/ProductsController.html":{}}}],["request",{"_index":228,"title":{"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request.existingcart",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.existingproduct",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.existingproductoncart",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestmethod",{"_index":155,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["requestmethod.get",{"_index":428,"title":{},"body":{"modules/ProductsModule.html":{}}}],["requestmethod.patch",{"_index":426,"title":{},"body":{"modules/ProductsModule.html":{}}}],["requestmethod.post",{"_index":162,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["require",{"_index":691,"title":{},"body":{"index.html":{}}}],["required",{"_index":340,"title":{},"body":{"controllers/ProductsController.html":{}}}],["requirement",{"_index":638,"title":{},"body":{"index.html":{}}}],["res",{"_index":229,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["res.json(error",{"_index":254,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["reset",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PaymentsModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":230,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["response.status(200).send",{"_index":405,"title":{},"body":{"controllers/ProductsController.html":{}}}],["response.status(404).send",{"_index":407,"title":{},"body":{"controllers/ProductsController.html":{}}}],["restful",{"_index":672,"title":{},"body":{"index.html":{}}}],["results",{"_index":49,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/removeProductDTO.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/PaymentsController.html":{},"modules/PrismaModule.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rolearray",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rolearray.length",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rolearray[randomnumber",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":669,"title":{},"body":{"index.html":{}}}],["rue",{"_index":532,"title":{},"body":{"controllers/UsersController.html":{}}}],["run",{"_index":690,"title":{},"body":{"index.html":{}}}],["running",{"_index":725,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["select",{"_index":188,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{}}}],["send",{"_index":504,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["service",{"_index":456,"title":{},"body":{"injectables/ProductsService.html":{}}}],["session",{"_index":123,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{},"dependencies.html":{}}}],["session.cartid",{"_index":142,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{}}}],["signup",{"_index":737,"title":{},"body":{"index.html":{}}}],["simply",{"_index":703,"title":{},"body":{"index.html":{}}}],["site",{"_index":660,"title":{},"body":{"index.html":{}}}],["sopen",{"_index":718,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["sql",{"_index":640,"title":{},"body":{"index.html":{}}}],["src",{"_index":262,"title":{},"body":{"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{}}}],["src/.../current",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../existing",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":618,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":102,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":103,"title":{},"body":{"injectables/AppService.html":{}}}],["src/carts/carts.controller.ts",{"_index":107,"title":{},"body":{"controllers/CartsController.html":{},"coverage.html":{}}}],["src/carts/carts.controller.ts:14",{"_index":122,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/carts/carts.controller.ts:21",{"_index":116,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/carts/carts.module.ts",{"_index":147,"title":{},"body":{"modules/CartsModule.html":{}}}],["src/carts/carts.module.ts:12",{"_index":151,"title":{},"body":{"modules/CartsModule.html":{}}}],["src/carts/carts.service",{"_index":237,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request-1.html":{}}}],["src/carts/carts.service.ts",{"_index":164,"title":{},"body":{"injectables/CartsService.html":{},"coverage.html":{}}}],["src/carts/carts.service.ts:29",{"_index":175,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:40",{"_index":174,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:57",{"_index":179,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:6",{"_index":171,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:9",{"_index":177,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/decorators/existing",{"_index":366,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/carts/middleware/existing_cart.middleware",{"_index":421,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/carts/middleware/existing_cart.middleware.ts",{"_index":255,"title":{},"body":{"injectables/ExistingCartMiddleware.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["src/carts/middleware/existing_cart.middleware.ts:17",{"_index":256,"title":{},"body":{"injectables/ExistingCartMiddleware.html":{}}}],["src/carts/middleware/existing_cart.middleware.ts:20",{"_index":257,"title":{},"body":{"injectables/ExistingCartMiddleware.html":{}}}],["src/main.ts",{"_index":582,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/payments/payments.controller.ts",{"_index":274,"title":{},"body":{"controllers/PaymentsController.html":{},"coverage.html":{}}}],["src/payments/payments.module.ts",{"_index":291,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["src/payments/payments.service.ts",{"_index":293,"title":{},"body":{"injectables/PaymentsService.html":{},"coverage.html":{}}}],["src/prisma/prisma.module.ts",{"_index":296,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.module.ts:11",{"_index":301,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":128,"title":{},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"modules/ProductsModule.html":{},"interfaces/Request.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":310,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":316,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":318,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/products/decorator/current",{"_index":130,"title":{},"body":{"controllers/CartsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/dtos/addproduct.dto.ts",{"_index":555,"title":{},"body":{"classes/addProductDTO.html":{},"coverage.html":{}}}],["src/products/dtos/addproduct.dto.ts:10",{"_index":557,"title":{},"body":{"classes/addProductDTO.html":{}}}],["src/products/dtos/addproduct.dto.ts:13",{"_index":558,"title":{},"body":{"classes/addProductDTO.html":{}}}],["src/products/dtos/addproduct.dto.ts:8",{"_index":560,"title":{},"body":{"classes/addProductDTO.html":{}}}],["src/products/dtos/addproduct_body.dto.ts",{"_index":550,"title":{},"body":{"classes/addProductBodyDTO.html":{},"coverage.html":{}}}],["src/products/dtos/addproduct_body.dto.ts:8",{"_index":553,"title":{},"body":{"classes/addProductBodyDTO.html":{}}}],["src/products/dtos/removeproduct.dto.ts",{"_index":587,"title":{},"body":{"coverage.html":{},"classes/removeProductDTO.html":{}}}],["src/products/dtos/removeproduct.dto.ts:10",{"_index":763,"title":{},"body":{"classes/removeProductDTO.html":{}}}],["src/products/dtos/removeproduct.dto.ts:13",{"_index":765,"title":{},"body":{"classes/removeProductDTO.html":{}}}],["src/products/dtos/removeproduct.dto.ts:16",{"_index":764,"title":{},"body":{"classes/removeProductDTO.html":{}}}],["src/products/dtos/removeproduct.dto.ts:8",{"_index":766,"title":{},"body":{"classes/removeProductDTO.html":{}}}],["src/products/middleware/checking",{"_index":221,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{},"coverage.html":{}}}],["src/products/middleware/existing",{"_index":264,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{},"interfaces/Request-2.html":{},"coverage.html":{}}}],["src/products/products.controller.ts",{"_index":324,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:106",{"_index":359,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:146",{"_index":350,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:37",{"_index":351,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:42",{"_index":354,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:65",{"_index":346,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module.ts",{"_index":416,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.module.ts:16",{"_index":417,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service.ts",{"_index":432,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/products.service.ts:13",{"_index":440,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:132",{"_index":450,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:213",{"_index":444,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:24",{"_index":446,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:32",{"_index":448,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:45",{"_index":442,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:50",{"_index":439,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:7",{"_index":437,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/users/dtos/create",{"_index":6,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":500,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:33",{"_index":511,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":543,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":545,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:6",{"_index":546,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":547,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":728,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":729,"title":{},"body":{"index.html":{}}}],["start:prodhow",{"_index":731,"title":{},"body":{"index.html":{}}}],["start:prodstay",{"_index":748,"title":{},"body":{"index.html":{}}}],["started",{"_index":628,"title":{"index.html":{}},"body":{}}],["starting",{"_index":646,"title":{},"body":{"index.html":{}}}],["statements",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":297,"title":{},"body":{"modules/PrismaModule.html":{}}}],["status",{"_index":195,"title":{},"body":{"injectables/CartsService.html":{}}}],["statuscart",{"_index":181,"title":{},"body":{"injectables/CartsService.html":{}}}],["statuscart.pending",{"_index":196,"title":{},"body":{"injectables/CartsService.html":{}}}],["stay",{"_index":654,"title":{},"body":{"index.html":{}}}],["step",{"_index":733,"title":{},"body":{"index.html":{}}}],["string",{"_index":27,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["succesfully",{"_index":412,"title":{},"body":{"controllers/ProductsController.html":{}}}],["support",{"_index":753,"title":{},"body":{"modules.html":{}}}],["suppressed",{"_index":413,"title":{},"body":{"controllers/ProductsController.html":{}}}],["svg",{"_index":754,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":648,"title":{},"body":{"index.html":{}}}],["table",{"_index":596,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["telephone",{"_index":529,"title":{},"body":{"controllers/UsersController.html":{}}}],["thing",{"_index":697,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":319,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":321,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":320,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["this.calculatetotalcart(cartid",{"_index":212,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.calcultatetotal(datas",{"_index":471,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.cartservice.createcart",{"_index":141,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{}}}],["this.cartservice.updatetotalcart",{"_index":489,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.cartservice.updatetotalcart(newcart.id",{"_index":496,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.iscart(cartid",{"_index":200,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.isproductoncart(quantityincartdata",{"_index":466,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.paymentservice.createpayment(datas",{"_index":288,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.prisma.$transaction(async",{"_index":451,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.cart.create",{"_index":197,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.prisma.cart.findunique",{"_index":183,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"interfaces/Request.html":{}}}],["this.prisma.cart.update",{"_index":214,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{}}}],["this.prisma.product.count",{"_index":453,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.product.delete",{"_index":498,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.product.findmany",{"_index":454,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.product.findunique",{"_index":455,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.productsoncart.delete",{"_index":487,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.productsoncart.findfirst",{"_index":457,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.user.create",{"_index":549,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.productservice.addproducttocart",{"_index":393,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productservice.addproducttocart(addproductdata",{"_index":394,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productservice.allproducts",{"_index":379,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productservice.deleteproduct(product",{"_index":410,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productservice.isproduct(id",{"_index":381,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productservice.removefromcart",{"_index":401,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.isproduct(productid",{"_index":270,"title":{},"body":{"injectables/ExistingProductMiddleware.html":{},"interfaces/Request-2.html":{}}}],["this.productsservice.isproductoncart",{"_index":252,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"interfaces/Request-1.html":{}}}],["this.userservice.addowner(createuserdata",{"_index":540,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":204,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"controllers/ProductsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["title",{"_index":190,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{}}}],["total",{"_index":193,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{}}}],["touch",{"_index":655,"title":{},"body":{"index.html":{}}}],["trouble",{"_index":722,"title":{},"body":{"index.html":{}}}],["true",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/CartsService.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{}}}],["try",{"_index":213,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"index.html":{}}}],["tsconfig.json",{"_index":717,"title":{},"body":{"index.html":{}}}],["tunnel",{"_index":743,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"coverage.html":{},"classes/removeProductDTO.html":{}}}],["typescript",{"_index":679,"title":{},"body":{"index.html":{}}}],["undefined})@apiquery({name",{"_index":343,"title":{},"body":{"controllers/ProductsController.html":{}}}],["undefined})@patch('remove/:productid/:cartid",{"_index":358,"title":{},"body":{"controllers/ProductsController.html":{}}}],["undefined})@post('/addowner",{"_index":510,"title":{},"body":{"controllers/UsersController.html":{}}}],["under",{"_index":704,"title":{},"body":{"index.html":{}}}],["understand",{"_index":710,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":124,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":762,"title":{},"body":{"properties.html":{}}}],["update",{"_index":210,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{}}}],["update_at",{"_index":215,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{}}}],["updated",{"_index":507,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatedprice",{"_index":488,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updatedtotal",{"_index":495,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updatetotalcart",{"_index":168,"title":{},"body":{"injectables/CartsService.html":{}}}],["updatetotalcart(cartid",{"_index":178,"title":{},"body":{"injectables/CartsService.html":{}}}],["use",{"_index":223,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{}}}],["use(req",{"_index":227,"title":{},"body":{"injectables/CheckingProductOnCartMiddleware.html":{},"injectables/ExistingCartMiddleware.html":{},"injectables/ExistingProductMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/Request-2.html":{}}}],["usefactory",{"_index":308,"title":{},"body":{"modules/PrismaModule.html":{}}}],["user",{"_index":520,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["user(s",{"_index":653,"title":{},"body":{"index.html":{}}}],["user.dto",{"_index":514,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":7,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":35,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["user.dto.ts:16",{"_index":29,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["user.dto.ts:20",{"_index":34,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["user.dto.ts:24",{"_index":32,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["user.dto.ts:29",{"_index":26,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["user.dto.ts:33",{"_index":24,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["user.dto.ts:7",{"_index":31,"title":{},"body":{"classes/AddOwnerDto.html":{}}}],["userdata",{"_index":548,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":501,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["users.controller",{"_index":544,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":516,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":499,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":519,"title":{},"body":{"controllers/UsersController.html":{}}}],["usersmodule",{"_index":78,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":515,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":665,"title":{},"body":{"index.html":{}}}],["using",{"_index":671,"title":{},"body":{"index.html":{}}}],["utils/.../utils.ts",{"_index":620,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["utils/utils.ts",{"_index":591,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":40,"title":{},"body":{"classes/AddOwnerDto.html":{},"interfaces/Adress.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"dependencies.html":{},"classes/removeProductDTO.html":{}}}],["value",{"_index":383,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":769,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":760,"title":{},"body":{"properties.html":{}}}],["via",{"_index":661,"title":{},"body":{"index.html":{}}}],["void",{"_index":153,"title":{},"body":{"modules/CartsModule.html":{},"modules/ProductsModule.html":{}}}],["want",{"_index":492,"title":{},"body":{"injectables/ProductsService.html":{}}}],["wanted",{"_index":338,"title":{},"body":{"controllers/ProductsController.html":{},"classes/addProductBodyDTO.html":{},"classes/addProductDTO.html":{},"classes/removeProductDTO.html":{}}}],["watch",{"_index":713,"title":{},"body":{"index.html":{}}}],["website",{"_index":693,"title":{},"body":{"index.html":{}}}],["work",{"_index":650,"title":{},"body":{"index.html":{}}}],["world",{"_index":105,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":347,"title":{},"body":{"controllers/ProductsController.html":{}}}],["zoom",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PaymentsModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddOwnerDto.html":{"url":"classes/AddOwnerDto.html","title":"class - AddOwnerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddOwnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                adress_Bill\n                            \n                            \n                                adress_Delivery\n                            \n                            \n                                    Optional\n                                cartId\n                            \n                            \n                                email\n                            \n                            \n                                fullname\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        adress_Bill\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Adress\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        adress_Delivery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Adress\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsOptional, IsString } from 'class-validator';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nexport class AddOwnerDto {\n  @ApiProperty()\n  @IsEmail()\n  email: string;\n\n\n  @ApiProperty()\n  @IsString()\n  phone: string;\n\n  @ApiProperty()\n  @IsString()\n  cartId?: string;\n\n  @ApiPropertyOptional()\n  @IsString()\n  password?: string;\n\n  @ApiProperty()\n  @IsString()\n  fullname: string;\n\n\n  @ApiProperty()\n  @IsOptional()\n  adress_Delivery: Adress;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  adress_Bill?: Adress;\n\n}\n\nexport interface Adress {\n\n  adress?: string;\n  postcode: string;\n  city: string;\n  country?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Adress.html":{"url":"interfaces/Adress.html","title":"interface - Adress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Adress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            adress\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            country\n                                        \n                                \n                                \n                                        \n                                            postcode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postcode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IsEmail, IsOptional, IsString } from 'class-validator';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nexport class AddOwnerDto {\n  @ApiProperty()\n  @IsEmail()\n  email: string;\n\n\n  @ApiProperty()\n  @IsString()\n  phone: string;\n\n  @ApiProperty()\n  @IsString()\n  cartId?: string;\n\n  @ApiPropertyOptional()\n  @IsString()\n  password?: string;\n\n  @ApiProperty()\n  @IsString()\n  fullname: string;\n\n\n  @ApiProperty()\n  @IsOptional()\n  adress_Delivery: Adress;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  adress_Bill?: Adress;\n\n}\n\nexport interface Adress {\n\n  adress?: string;\n  postcode: string;\n  city: string;\n  country?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCartsModule\n\nCartsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCartsModule->AppModule\n\n\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nAppModule -->\n\nPaymentsModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CartsModule\n                        \n                        \n                            PaymentsModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ProductsModule } from './products/products.module';\nimport { CartsModule } from './carts/carts.module';\nimport { PaymentsModule } from './payments/payments.module';\nimport { PrismaService } from './prisma/prisma.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n    PrismaModule,\n    ProductsModule,\n    CartsModule,\n    PaymentsModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: `.env.${process.env.NODE_ENV}`,\n    }),\n    UsersModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, PrismaService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CartsController.html":{"url":"controllers/CartsController.html","title":"controller - CartsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CartsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/carts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                carts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCart\n                            \n                            \n                                    Async\n                                newCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCart\n                        \n                    \n                \n            \n            \n                \ngetCart(cartId: string, cart)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:cartId')\n                \n            \n\n            \n                \n                    Defined in src/carts/carts.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cart\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        newCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    newCart(session: any, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')\n                \n            \n\n            \n                \n                    Defined in src/carts/carts.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Post, Req, Session } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ExistingProduct } from 'src/products/decorator/current-product.decorator';\nimport { CartsService } from './carts.service';\nimport { ExistingCart } from './decorators/existing-cart';\n\n@ApiTags('carts')\n@Controller('carts')\nexport class CartsController {\n  constructor(private cartService: CartsService) {}\n\n  @Post('/create')\n  async newCart(@Session() session: any, @Req() req) {\n    let cart = await this.cartService.createCart();\n    session.cartId = cart.id;\n    return cart;\n  }\n\n  @Get('/:cartId')\n  getCart(@Param('cartId') cartId: string, @ExistingCart() cart) {\n    return cart;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartsModule.html":{"url":"modules/CartsModule.html","title":"module - CartsModule","body":"\n                   \n\n\n\n\n    Modules\n    CartsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CartsModule\n\n\n\ncluster_CartsModule_providers\n\n\n\n\nCartsService\n\nCartsService\n\n\n\nCartsModule\n\nCartsModule\n\nCartsModule -->\n\nCartsService->CartsModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nCartsModule -->\n\nPrismaService->CartsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/carts/carts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartsService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CartsController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.module.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { PrismaService } from 'src/prisma/prisma.service';\nimport { CartsController } from './carts.controller';\nimport { CartsService } from './carts.service';\nimport { MiddlewareConsumer, Module, RequestMethod } from '@nestjs/common';\nimport { ExistingCartMiddleware } from './middleware/existing_cart.middleware';\n\n@Module({\n  controllers: [CartsController],\n  providers: [CartsService, PrismaService],\n})\nexport class CartsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(ExistingCartMiddleware)\n      .exclude({ path: 'carts', method: RequestMethod.POST })\n      .forRoutes(CartsController);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartsService.html":{"url":"injectables/CartsService.html","title":"injectable - CartsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/carts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateTotalCart\n                            \n                            \n                                    Async\n                                createCart\n                            \n                            \n                                    Async\n                                isCart\n                            \n                            \n                                    Async\n                                updateTotalCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/carts/carts.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        calculateTotalCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateTotalCart(cartId)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCart()\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    isCart(cartId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTotalCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTotalCart(cartId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { StatusCart } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class CartsService {\n  constructor(private prisma: PrismaService) {}\n\n  async isCart(cartId: string) {\n    return await this.prisma.cart.findUnique({\n      where: { id: cartId },\n      include: {\n        products: {\n          include: {\n            product: {\n              select: {\n                id: true,\n                price: true,\n                title: true,\n                pictures: { include: { productPictures: true } },\n              },\n            },\n          },\n        },\n      },\n    });\n  }\n\n  async createCart() {\n    let newCart = {\n      total: 0,\n      status: StatusCart.PENDING,\n    };\n\n    return await this.prisma.cart.create({\n      data: newCart,\n    });\n  }\n\n  async calculateTotalCart(cartId) {\n    const cart = await this.isCart(cartId);\n\n    let total = 0;\n    if (cart) {\n      cart.products.map((products) => {\n        total =\n          total +\n          Number(products?.product?.price) * Number(products.quantityInCart);\n      });\n    } else {\n      throw new NotFoundException('no cart found');\n    }\n\n    return total;\n  }\n\n  async updateTotalCart(cartId: string) {\n    // 2) Recalculate the new price and update it\n    let newTotal = await this.calculateTotalCart(cartId);\n\n    try {\n      await this.prisma.cart.update({\n        include: { products: true },\n        data: {\n          update_at: new Date(),\n\n          total: newTotal,\n        },\n        where: { id: cartId },\n      });\n\n      return newTotal;\n    } catch (error) {\n      console.log('error update Total cart ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CheckingProductOnCartMiddleware.html":{"url":"injectables/CheckingProductOnCartMiddleware.html","title":"injectable - CheckingProductOnCartMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CheckingProductOnCartMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/middleware/checking-productOnCart.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/products/middleware/checking-productOnCart.middleware.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/products/middleware/checking-productOnCart.middleware.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware, NotFoundException } from '@nestjs/common';\nimport { Product, ProductsOnCart } from '@prisma/client';\nimport { NextFunction, Request, Response } from 'express';\nimport { CartsService } from 'src/carts/carts.service';\nimport { ProductsService } from '../products.service';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      existingProductOncart?: ProductsOnCart;\n    }\n  }\n}\n\n@Injectable()\nexport class CheckingProductOnCartMiddleware implements NestMiddleware {\n  constructor(private productsService: ProductsService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    let productId;\n    try {\n      console.log('middleware', req.existingProduct, req.existingCart);\n      let productOnCart;\n      if (req.existingProduct && req.existingCart) {\n        let quantityIncartDATA = {\n          productId: req.existingProduct.id,\n          cartId: req.existingCart.id,\n        };\n\n        productOnCart = await this.productsService.isProductOnCart(\n          quantityIncartDATA,\n        );\n\n        if (productOnCart) {\n          req.existingProductOncart = productOnCart;\n        } else {\n          console.log('error');\n          throw new NotFoundException('no product on cart found');\n        }\n      }\n      next();\n    } catch (error) {\n      res.json(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExistingCartMiddleware.html":{"url":"injectables/ExistingCartMiddleware.html","title":"injectable - ExistingCartMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExistingCartMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/middleware/existing_cart.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/carts/middleware/existing_cart.middleware.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/middleware/existing_cart.middleware.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware, NotFoundException } from '@nestjs/common';\nimport { Cart, Product } from '@prisma/client';\nimport { NextFunction, Request, Response } from 'express';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\nimport { CartsService } from '../carts.service';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      existingCart?: Cart;\n    }\n  }\n}\n\n@Injectable()\nexport class ExistingCartMiddleware implements NestMiddleware {\n  constructor(private prisma: PrismaService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    try {\n      let cartId;\n      if (req.params.cartId) {\n        cartId = req.params.cartId;\n      }\n      if (req.body.cartId) {\n        cartId = req.body.cartId;\n      }\n      if (req.query.cartId) {\n        cartId = req.query.cartId;\n      }\n      // let productId = req.params[0].split('/').pop();\n\n      if (cartId) {\n        const cart = await this.prisma.cart.findUnique({\n          where: { id: cartId },\n          include: {\n            products: {\n              include: {\n                product: {\n                  select: {\n                    id: true,\n                    price: true,\n                    title: true,\n                    pictures: { select: { src: true } },\n                  },\n                },\n              },\n            },\n          },\n        });\n\n        if (cart) {\n          req.existingCart = cart;\n        } else {\n          throw new NotFoundException('no cart found');\n        }\n      }\n\n      next();\n    } catch (error) {\n      res.json(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExistingProductMiddleware.html":{"url":"injectables/ExistingProductMiddleware.html","title":"injectable - ExistingProductMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExistingProductMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/middleware/existing-product.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/products/middleware/existing-product.middleware.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/products/middleware/existing-product.middleware.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware, NotFoundException } from '@nestjs/common';\nimport { Product } from '@prisma/client';\nimport { NextFunction, Request, Response } from 'express';\nimport { ProductsService } from '../products.service';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      existingProduct?: Product;\n    }\n  }\n}\n\n@Injectable()\nexport class ExistingProductMiddleware implements NestMiddleware {\n  constructor(private productsService: ProductsService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    let productId;\n    try {\n      if (req.params.productId) {\n        productId = req.params.productId;\n      }\n      if (req.body.productId) {\n        productId = req.body.productId;\n      }\n\n      if (productId) {\n        const product = await this.productsService.isProduct(productId);\n\n        if (product) {\n          req.existingProduct = product;\n        } else {\n          console.log('rjet middleware');\n          throw new NotFoundException('no product found');\n        }\n      }\n      next();\n    } catch (error) {\n      res.json(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentsController.html":{"url":"controllers/PaymentsController.html","title":"controller - PaymentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/payments.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payments\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { PaymentsService } from './payments.service';\n\n@Controller('payments')\nexport class PaymentsController {\n  constructor(private paymentService: PaymentsService) {}\n\n  /*   @Post('/create')\n  createPayment(\n    @Body() payment: BodyChargeDto,\n\n    @CurrentCart() currentCart: Carts,\n  ) {\n    let datas = { paymentMethodId: payment.paymentMethodId, cart: currentCart };\n    return this.paymentService.createPayment(datas);\n  } */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentsModule.html":{"url":"modules/PaymentsModule.html","title":"module - PaymentsModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PaymentsModule\n\n\n\ncluster_PaymentsModule_providers\n\n\n\n\nPaymentsService\n\nPaymentsService\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nPaymentsModule -->\n\nPaymentsService->PaymentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/payments/payments.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentsController } from './payments.controller';\nimport { PaymentsService } from './payments.service';\n\n@Module({\n  controllers: [PaymentsController],\n  providers: [PaymentsService]\n})\nexport class PaymentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentsService.html":{"url":"injectables/PaymentsService.html","title":"injectable - PaymentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/payments.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PaymentsService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    forTest(prismaClient: PrismaClient)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.module.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prismaClient\n                                    \n                                            PrismaClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\nimport { PrismaClient } from '@prisma/client';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n})\nexport class PrismaModule {\n  // with the help of `DynamicModule` we can import `PrismaModule` with existing client.\n  static forTest(prismaClient: PrismaClient): DynamicModule {\n    return {\n      module: PrismaModule,\n      providers: [\n        {\n          provide: PrismaService,\n          useFactory: () => prismaClient as PrismaService,\n        },\n      ],\n      exports: [PrismaService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await this.$disconnect();\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddProductToCart\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                getAllProduct\n                            \n                            \n                                getProductById\n                            \n                            \n                                    Async\n                                removeFromCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        AddProductToCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    AddProductToCart(productId: string, product, cart, session: any, req, quantity?: number, cartId?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: addProductBodyDTO, description: 'add product on cart, by default quantity wanted is one', required: false, examples: undefined})@ApiQuery({name: 'cartId', type: String, description: 'A parameter. Optional', required: false})@Post('add/cart/:productId')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    product\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cart\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quantity\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: string, product, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:productId')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    product\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProduct\n                        \n                    \n                \n            \n            \n                \ngetAllProduct()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductById\n                        \n                    \n                \n            \n            \n                \ngetProductById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:productId')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeFromCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFromCart(productId: string, cartId: string, productOncart, product: Product, cart: Cart, response: Response, quantity?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: removeProductDTO, description: 'Remove product on cart, by default quantity to remove is one', required: false, examples: undefined})@Patch('remove/:productId/:cartId')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productOncart\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    product\n                                    \n                                            Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cart\n                                    \n                                            Cart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quantity\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Session,\n  Delete,\n  Get,\n  Query,\n  Param,\n  Patch,\n  Post,\n  Res,\n  Req,\n} from '@nestjs/common';\nimport { Response } from 'express';\nimport { ApiBody, ApiQuery, ApiTags } from '@nestjs/swagger';\nimport { CartsService } from 'src/carts/carts.service';\nimport { ExistingCart } from 'src/carts/decorators/existing-cart';\n\nimport { ExistingProduct } from './decorator/current-product.decorator';\nimport { addProductDTO } from './dtos/addProduct.dto';\nimport { addProductBodyDTO } from './dtos/addProduct_body.dto';\nimport { ProductsService } from './products.service';\nimport { ExistingProductOnCart } from './decorator/current-productOnCart.decorator';\nimport { Cart, Product } from '@prisma/client';\nimport { removeProductDTO } from './dtos/removeProduct.dto';\nimport { NotFoundError } from '@prisma/client/runtime';\n\n@ApiTags('products')\n@Controller('products')\nexport class ProductsController {\n  constructor(\n    private productService: ProductsService,\n    private cartService: CartsService,\n  ) {}\n\n  @Get()\n  getAllProduct() {\n    return this.productService.allProducts();\n  }\n\n  @Get('/:productId')\n  getProductById(@Param('productId') id: string) {\n    return this.productService.isProduct(id);\n  }\n\n  @ApiBody({\n    type: addProductBodyDTO,\n    description: 'add product on cart, by default quantity wanted is one',\n    required: false,\n    examples: {\n      quantityToAdd: {\n        value: {\n          quantity: 3,\n        },\n      },\n    },\n  })\n  @ApiQuery({\n    name: 'cartId',\n    type: String,\n    description: 'A parameter. Optional',\n    required: false,\n  })\n  @Post('add/cart/:productId')\n  async AddProductToCart(\n    @Param('productId') productId: string,\n\n    @ExistingProduct() product,\n    @ExistingCart() cart,\n    @Session() session: any,\n    @Req() req,\n    @Body('quantity') quantity?: number,\n    @Query('cartId') cartId?: string,\n  ) {\n    if (!cart) {\n      cart = await this.cartService.createCart();\n    }\n\n    if (cart) {\n      req.session.cartId = cart.id;\n      session.cartId = cart.id;\n\n      let addProductData: addProductDTO = { product: product, cart: cart };\n\n      if (quantity) {\n        addProductData.quantityWanted = quantity;\n      }\n      console.log('product controller', this.productService.addProductToCart);\n      return this.productService.addProductToCart(addProductData);\n    }\n  }\n\n  @ApiBody({\n    type: removeProductDTO,\n    description: 'Remove product on cart, by default quantity to remove is one',\n    required: false,\n    examples: {\n      quantityToAdd: {\n        value: {\n          quantity: 3,\n        },\n      },\n    },\n  })\n  @Patch('remove/:productId/:cartId')\n  async removeFromCart(\n    @Param('productId') productId: string,\n    @Param('cartId') cartId: string,\n    @ExistingProductOnCart() productOncart,\n    @ExistingProduct() product: Product,\n    @ExistingCart() cart: Cart,\n    @Res() response: Response,\n    @Body('quantity') quantity?: number,\n  ): Promise {\n    console.log('productOnCart', productOncart);\n    if (productOncart) {\n      let removeProductData: removeProductDTO = {\n        product: product,\n        cart: cart,\n        productOncart,\n      };\n\n      if (quantity) {\n        removeProductData.quantityRemoved = quantity;\n      }\n      let deletedFromCart = await this.productService.removeFromCart(\n        removeProductData,\n      );\n      console.log('deleteproduct on Controller', deletedFromCart);\n      if (deletedFromCart) {\n        console.log('hello reps,', deletedFromCart);\n        response.status(200).send({\n          message: deletedFromCart,\n        });\n      } else {\n        response.status(404).send({\n          message: `product ${productId} not found on the cart ${cartId} `,\n        });\n      }\n    } else {\n      throw new NotFoundError('No product on Cart');\n    }\n  }\n\n  @Delete('/:productId')\n  async deleteProduct(\n    @Param('productId') id: string,\n    @ExistingProduct() product,\n    @Res() response: Response,\n  ) {\n    let productDeleted = await this.productService.deleteProduct(product);\n    if (productDeleted) {\n      response.status(200).send({\n        message: `Your product ${productDeleted.id} been succesfully suppressed`,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nCartsService\n\nCartsService\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nCartsService->ProductsModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nProductsModule -->\n\nPrismaService->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartsService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, RequestMethod } from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { ProductsController } from './products.controller';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ExistingProductMiddleware } from './middleware/existing-product.middleware';\nimport { CartsService } from 'src/carts/carts.service';\nimport { ExistingCart } from 'src/carts/decorators/existing-cart';\nimport { ExistingCartMiddleware } from 'src/carts/middleware/existing_cart.middleware';\nimport { CheckingProductOnCartMiddleware } from './middleware/checking-productOnCart.middleware';\n\n@Module({\n  providers: [ProductsService, PrismaService, CartsService],\n  controllers: [ProductsController],\n})\nexport class ProductsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(ExistingProductMiddleware).forRoutes(\n      {\n        path: 'products/remove/:productId/:cartId',\n        method: RequestMethod.PATCH,\n      },\n      {\n        path: 'products/:productId',\n        method: RequestMethod.GET,\n      },\n      {\n        path: 'products/add/cart/:productId',\n        method: RequestMethod.POST,\n      },\n    );\n    consumer.apply(ExistingCartMiddleware).forRoutes(\n      {\n        path: 'products/remove/:productId/:cartId',\n        method: RequestMethod.PATCH,\n      },\n      {\n        path: 'products/add/cart/:productId',\n        method: RequestMethod.POST,\n      },\n    );\n    consumer.apply(CheckingProductOnCartMiddleware).forRoutes({\n      path: 'products/remove/:productId/:cartId',\n      method: RequestMethod.PATCH,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addProductToCart\n                            \n                            \n                                    Async\n                                allProducts\n                            \n                            \n                                    Async\n                                calcultateTotal\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                isProduct\n                            \n                            \n                                    Async\n                                isProductOnCart\n                            \n                            \n                                    Async\n                                removeFromCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, cartService: CartsService)\n                    \n                \n                        \n                            \n                                Defined in src/products/products.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProductToCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProductToCart(addProductData)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    addProductData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        allProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    allProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        calcultateTotal\n                        \n                    \n                \n            \n            \n                \n                    \n                    calcultateTotal(datas)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datas\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(product)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    isProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isProductOnCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    isProductOnCart(quantityIncartDATA)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quantityIncartDATA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeFromCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFromCart(removeProductData)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removeProductData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CartsService } from 'src/carts/carts.service';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ProductsController } from './products.controller';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    private prisma: PrismaService,\n    private cartService: CartsService,\n  ) {}\n\n  async allProducts() {\n    return await this.prisma.$transaction(async () => {\n      const count = await this.prisma.product.count();\n\n      const products = await this.prisma.product.findMany({\n        include: { pictures: true },\n      });\n      return { count: count, products: products };\n    });\n  }\n\n  async isProduct(id: string) {\n    const product = await this.prisma.product.findUnique({\n      where: { id: id },\n    });\n    console.log('product service', product);\n    return product;\n  }\n\n  async isProductOnCart(quantityIncartDATA) {\n    let { productId, cartId } = quantityIncartDATA;\n\n    const isProduct = await this.prisma.productsOnCart.findFirst({\n      select: { id: true, quantityInCart: true },\n      where: {\n        AND: [{ cartId: cartId }, { productId: productId }],\n      },\n    });\n\n    return isProduct;\n  }\n\n  async calcultateTotal(datas) {\n    let { total, price, quantityWanted } = datas;\n\n    return Number(total) + Number(price) * Number(quantityWanted);\n  }\n  async addProductToCart(addProductData) {\n    let { product, cart } = addProductData;\n\n    let quantityWanted = 1;\n\n    if (addProductData.quantityWanted) {\n      quantityWanted = addProductData.quantityWanted;\n    }\n\n    let quantityIncartDATA = { productId: product.id, cartId: cart.id };\n\n    let isProductAlreadyOnCart = await this.isProductOnCart(quantityIncartDATA);\n\n    // calculate new total cart with the product added\n    let datas = { total: cart.total, price: product.price, quantityWanted };\n    let newtotal = await this.calcultateTotal(datas);\n\n    // Case 1 : Product is already on cart\n\n    if (isProductAlreadyOnCart) {\n      return this.prisma.cart.update({\n        include: {\n          products: {\n            include: {\n              product: {\n                select: {\n                  id: true,\n                  price: true,\n                  title: true,\n                  pictures: { select: { src: true } },\n                },\n              },\n            },\n          },\n        },\n        where: { id: cart.id },\n        data: {\n          products: {\n            update: {\n              where: { id: isProductAlreadyOnCart.id },\n              data: { quantityInCart: { increment: quantityWanted } },\n            },\n          },\n          total: newtotal,\n        },\n      });\n    }\n\n    // Case 2 : Product is not on cart\n    else {\n      return await this.prisma.cart.update({\n        where: { id: cart.id },\n        include: {\n          products: {\n            include: {\n              product: {\n                select: {\n                  id: true,\n                  price: true,\n                  title: true,\n                  pictures: { select: { src: true } },\n                },\n              },\n            },\n          },\n        },\n        data: {\n          products: {\n            create: [\n              {\n                product: { connect: { id: product.id } },\n\n                quantityInCart: quantityWanted,\n              },\n            ],\n          },\n          total: newtotal,\n        },\n      });\n    }\n  }\n\n  async removeFromCart(removeProductData) {\n    let quantityRemoved = 1;\n    const { cart, productOncart, product } = removeProductData;\n    if (removeProductData.quantityRemoved) {\n      quantityRemoved = removeProductData.quantityRemoved;\n    }\n    let quantityInCart = productOncart.quantityInCart;\n    // Case 2:quantity to remove is equal to the quantity's product in my cart'\n    if (quantityRemoved >= quantityInCart) {\n      let cartWithoutDeletedProduct = await this.prisma.cart.update({\n        where: { id: cart.id },\n        include: {\n          products: {\n            include: {\n              product: {\n                select: {\n                  id: true,\n                  price: true,\n                  title: true,\n                  pictures: { select: { src: true } },\n                },\n              },\n            },\n          },\n        },\n        data: {\n          update_at: new Date(),\n          products: {\n            disconnect: [{ id: productOncart.id }],\n          },\n        },\n      });\n      // 2) delete ProductOnCart\n      let ProductOnCartDeleted = await this.prisma.productsOnCart.delete({\n        where: { id: productOncart.id },\n      });\n      // update Total price\n      let updatedprice = await this.cartService.updateTotalCart(\n        cartWithoutDeletedProduct.id,\n      );\n      cartWithoutDeletedProduct.total = updatedprice;\n      return cartWithoutDeletedProduct;\n    } else {\n      // Case 2 : i only want to remove a part of the quantity's product from my cart but not all\n      let newCart = await this.prisma.cart.update({\n        where: { id: cart.id },\n        include: {\n          products: {\n            include: {\n              product: {\n                select: {\n                  id: true,\n                  price: true,\n                  title: true,\n                  pictures: { select: { src: true } },\n                },\n              },\n            },\n          },\n        },\n        data: {\n          update_at: new Date(),\n          products: {\n            update: {\n              where: { id: productOncart.id },\n              data: {\n                quantityInCart: { decrement: quantityRemoved },\n              },\n            },\n          },\n        },\n      });\n      // update Total price\n\n      let updatedTotal = await this.cartService.updateTotalCart(newCart.id);\n\n      newCart.total = updatedTotal;\n      return newCart;\n    }\n  }\n\n  async deleteProduct(product) {\n    return this.prisma.product.delete({ where: { id: product.id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/middleware/existing_cart.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            existingCart\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        existingCart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        existingCart:     Cart\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Cart\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NestMiddleware, NotFoundException } from '@nestjs/common';\nimport { Cart, Product } from '@prisma/client';\nimport { NextFunction, Request, Response } from 'express';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\nimport { CartsService } from '../carts.service';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      existingCart?: Cart;\n    }\n  }\n}\n\n@Injectable()\nexport class ExistingCartMiddleware implements NestMiddleware {\n  constructor(private prisma: PrismaService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    try {\n      let cartId;\n      if (req.params.cartId) {\n        cartId = req.params.cartId;\n      }\n      if (req.body.cartId) {\n        cartId = req.body.cartId;\n      }\n      if (req.query.cartId) {\n        cartId = req.query.cartId;\n      }\n      // let productId = req.params[0].split('/').pop();\n\n      if (cartId) {\n        const cart = await this.prisma.cart.findUnique({\n          where: { id: cartId },\n          include: {\n            products: {\n              include: {\n                product: {\n                  select: {\n                    id: true,\n                    price: true,\n                    title: true,\n                    pictures: { select: { src: true } },\n                  },\n                },\n              },\n            },\n          },\n        });\n\n        if (cart) {\n          req.existingCart = cart;\n        } else {\n          throw new NotFoundException('no cart found');\n        }\n      }\n\n      next();\n    } catch (error) {\n      res.json(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request-1.html":{"url":"interfaces/Request-1.html","title":"interface - Request-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/middleware/checking-productOnCart.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            existingProductOncart\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        existingProductOncart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        existingProductOncart:     ProductsOnCart\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProductsOnCart\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NestMiddleware, NotFoundException } from '@nestjs/common';\nimport { Product, ProductsOnCart } from '@prisma/client';\nimport { NextFunction, Request, Response } from 'express';\nimport { CartsService } from 'src/carts/carts.service';\nimport { ProductsService } from '../products.service';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      existingProductOncart?: ProductsOnCart;\n    }\n  }\n}\n\n@Injectable()\nexport class CheckingProductOnCartMiddleware implements NestMiddleware {\n  constructor(private productsService: ProductsService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    let productId;\n    try {\n      console.log('middleware', req.existingProduct, req.existingCart);\n      let productOnCart;\n      if (req.existingProduct && req.existingCart) {\n        let quantityIncartDATA = {\n          productId: req.existingProduct.id,\n          cartId: req.existingCart.id,\n        };\n\n        productOnCart = await this.productsService.isProductOnCart(\n          quantityIncartDATA,\n        );\n\n        if (productOnCart) {\n          req.existingProductOncart = productOnCart;\n        } else {\n          console.log('error');\n          throw new NotFoundException('no product on cart found');\n        }\n      }\n      next();\n    } catch (error) {\n      res.json(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request-2.html":{"url":"interfaces/Request-2.html","title":"interface - Request-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/middleware/existing-product.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            existingProduct\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        existingProduct\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        existingProduct:     Product\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Product\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NestMiddleware, NotFoundException } from '@nestjs/common';\nimport { Product } from '@prisma/client';\nimport { NextFunction, Request, Response } from 'express';\nimport { ProductsService } from '../products.service';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      existingProduct?: Product;\n    }\n  }\n}\n\n@Injectable()\nexport class ExistingProductMiddleware implements NestMiddleware {\n  constructor(private productsService: ProductsService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    let productId;\n    try {\n      if (req.params.productId) {\n        productId = req.params.productId;\n      }\n      if (req.body.productId) {\n        productId = req.body.productId;\n      }\n\n      if (productId) {\n        const product = await this.productsService.isProduct(productId);\n\n        if (product) {\n          req.existingProduct = product;\n        } else {\n          console.log('rjet middleware');\n          throw new NotFoundException('no product found');\n        }\n      }\n      next();\n    } catch (error) {\n      res.json(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addOwner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addOwner\n                        \n                    \n                \n            \n            \n                \naddOwner(createUserData: AddOwnerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: AddOwnerDto, description: 'only send field to update, all fields can be updated except pictures for now', examples: undefined})@Post('/addOwner')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserData\n                                    \n                                                AddOwnerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\nimport { AddOwnerDto } from './dtos/create-user.dto';\nimport { UsersService } from './users.service';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private userService: UsersService) {}\n\n  @ApiBody({\n    type: AddOwnerDto,\n    description:\n      'only send field to update, all fields can be updated except pictures for now',\n    examples: {\n      user: {\n        value: {\n          email: 'nestor@test.fr',\n          cartId: '08c00329-a7a7-460b-85c2-d35edb885203',\n          fullname: 'fanny Martin',\n          telephone: '0606060606',\n          adress_Delivery: {\n            adress: '24 rue du port',\n            postcode: 59000,\n            city: 'Lille',\n            country: 'France',\n          },\n        },\n      },\n    },\n  })\n  @Post('/addOwner')\n  addOwner(@Body() createUserData: AddOwnerDto) {\n    return this.userService.addOwner(createUserData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService, PrismaService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addOwner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    addOwner(createUserData)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { AddOwnerDto } from './dtos/create-user.dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(private prisma: PrismaService) {}\n\n  async addOwner(createUserData) {\n    let { email, phone, fullname, adress_Delivery, cartId } = createUserData;\n    let userData = {\n      email: email,\n      phone: phone,\n      fullname: fullname,\n\n      carts: { connect: { id: cartId } },\n      adress_Delivery: { create: adress_Delivery },\n    };\n\n    return await this.prisma.user.create({ data: userData });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/addProductBodyDTO.html":{"url":"classes/addProductBodyDTO.html","title":"class - addProductBodyDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  addProductBodyDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/addProduct_body.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'quantity wanted, by default 1'})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/addProduct_body.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNumber, IsOptional,} from 'class-validator';\n\nexport class addProductBodyDTO { \n  @ApiPropertyOptional({ description: 'quantity wanted, by default 1' })\n  @IsOptional()\n  @IsNumber()\n  quantity?: number;\n\n \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/addProductDTO.html":{"url":"classes/addProductDTO.html","title":"class - addProductDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  addProductDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/addProduct.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cart\n                            \n                            \n                                product\n                            \n                            \n                                    Optional\n                                quantityWanted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Cart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'product to put in cart'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/addProduct.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/addProduct.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        quantityWanted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'product quantity wanted, if empty, by default, it will be 1 '})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/addProduct.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsEnum, IsNumber, IsOptional, IsString } from 'class-validator';\nimport { Cart, Product } from '@prisma/client';\nexport class addProductDTO {\n  @ApiPropertyOptional({\n    description: 'product quantity wanted, if empty, by default, it will be 1 ',\n  })\n  quantityWanted?:number;\n  @ApiPropertyOptional({ description: 'product to put in cart' })\n  cart: Cart;\n\n  @ApiProperty()\n  product: Product;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                prisma/factories/product-factory.ts\n            \n            function\n            getRandomDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/factories/product-factory.ts\n            \n            function\n            ProductFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/factories/product-factory.ts\n            \n            variable\n            date\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/factories/product-factory.ts\n            \n            variable\n            randomPictures\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/factories/product-factory.ts\n            \n            variable\n            randomWordInPrismaEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/seed.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/carts/carts.controller.ts\n            \n            controller\n            CartsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/carts/carts.service.ts\n            \n            injectable\n            CartsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/carts/decorators/existing-cart.ts\n            \n            variable\n            ExistingCart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/carts/middleware/existing_cart.middleware.ts\n            \n            injectable\n            ExistingCartMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/carts/middleware/existing_cart.middleware.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payments/payments.controller.ts\n            \n            controller\n            PaymentsController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payments/payments.service.ts\n            \n            injectable\n            PaymentsService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/decorator/current-product.decorator.ts\n            \n            variable\n            ExistingProduct\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/decorator/current-productOnCart.decorator.ts\n            \n            variable\n            ExistingProductOnCart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/dtos/addProduct.dto.ts\n            \n            class\n            addProductDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/products/dtos/addProduct_body.dto.ts\n            \n            class\n            addProductBodyDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/products/dtos/removeProduct.dto.ts\n            \n            class\n            removeProductDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/products/middleware/checking-productOnCart.middleware.ts\n            \n            injectable\n            CheckingProductOnCartMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/middleware/checking-productOnCart.middleware.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/products/middleware/existing-product.middleware.ts\n            \n            injectable\n            ExistingProductMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/middleware/existing-product.middleware.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            AddOwnerDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            interface\n            Adress\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                utils/utils.ts\n            \n            function\n            getRandomIntInclusive\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                utils/utils.ts\n            \n            variable\n            dateInNmonths\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                utils/utils.ts\n            \n            variable\n            mode\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @faker-js/faker : ^7.5.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.2\n        \n            @prisma/client : ^4.4.0\n        \n            class-validator : ^0.13.2\n        \n            express-session : ^1.17.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getRandomDate   (prisma/.../product-factory.ts)\n                        \n                        \n                            getRandomIntInclusive   (utils/.../utils.ts)\n                        \n                        \n                            main   (prisma/.../seed.ts)\n                        \n                        \n                            ProductFactory   (prisma/.../product-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    prisma/factories/product-factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomDate\n                        \n                    \n                \n            \n            \n                \ngetRandomDate(maxDate)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    maxDate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductFactory\n                        \n                    \n                \n            \n            \n                \nProductFactory()\n                \n            \n\n\n\n\n        \n    \n    utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomIntInclusive\n                        \n                    \n                \n            \n            \n                \ngetRandomIntInclusive(min, max)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\nE-Commerce Backend\nMIT License\n\nTable of contents\n\nDescription\n\nBuilt With\n\nInstallation Instructions and Requirement\n\nNode.js Installation\nSQL database\nClone the Code and install dependencies\n\n\nBefore starting\n\nCompodocs\n\nSwagger\n\nHow does this API work ? \n\nAdd product(s)\nFirst product(s)\nUser(s)\nPayment\n\n\n\n\nStay In touch\n\n\n\nDescription\n\nThis project creates the back-end code for an e-commerce site via NestJs Framework. This application uses Express.js API and Prisma  to interact with a PostgreSQL database. The API Routes are created using RESTful CRUD methods.\n\nFront-end here :https://github.com/hemkass/payment_tunnel_Front\nThis Application is documented by SWAGGER and COMPODOCS\n\n\n\nBuilt With\n\nNestJs\nJavaScript\nTypescript\nPostgreSQL\nPostico\nPrisma\nSwagger\nCompoDocs\n\n\n\n\nInstallation Instructions and Requirement\n\n\n\nNode.js Installation\n\nPlease check that you have Node.js globally installed on your computer. \n If not, try reinstalling Node.js by following this link: https://nodejs.org/en/\n\n\n\n\n\nSQL database\n\n\n\nTo run, this project require to install PostgreSQL. If you don't have installed it yet, please check on their website : https://www.postgresql.org/\nDon't forget to add your DataBase in your .env\n\n\n\n\n\nClone the Code and install dependencies\n\n The first thing to do is to open git bash command line, and then simply you can clone the project under any of your favorite places as the following:\n\n\ngh repo clone hemkass/PaymentTunnel_NestJs \n\n\n\n\n\n\nBefore Starting\n\nPlease to understand infrastructure, routes possibler, watch before :\n\n\n\nCOMPODOCS\n\n\nTo run it :\n\n$ npx @compodoc/compodoc -p tsconfig.json -sOpen your browser and navigate to http://localhost:8080\nif you have any trouble, please check nestJs documentation :\nhttps://docs.nestjs.com/recipes/documentation\n\n\n \n\nSWAGGER\n\nOpen your browser and navigate to http://localhost:3000/api\n\n# Running the app\n\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n\n# production mode\n$ npm run start:prodHow does this API work - API CHANNEL ?\n\nSTEP 1 : Add product from your cart\n\n\nPOST\nhttp://localhost:3000/products/add/cart/:productId/:cartIdcartId is optional, if you don't send one, a new cart will be created.\nPATCH\nSTEP 2 bis : Remove product from your cart also \n\n```bash\nhttp://localhost:3000/products/remove/:productId/:cartId\n```\n\nSTEP 3: USERS \n\n\nsignUp:\nhttp://localhost:3000/users/signupSTEP 4: Add paiement\n\n\nhttp://localhost:3000/payments/createStay in touch\n\nMIT licensed.\nE-Commerce Backend\nMIT License\n\nTable of contents\n\nDescription\nBuilt With\nInstallation Instructions and Requirement\nNode.js Installation\nSQL database\nClone the Code and install dependencies\n\n\nBefore starting\nCompodocs\nSwagger\n\n\nStay In touch\n\n\nDescription\n\nThis project creates the back-end code for an e-commerce payment tunnel. This application uses Express.js API and Prisma  to interact with a PostgreSQL database. The API Routes are created using RESTful CRUD methods.\n\nYou will find the front-end Here :https://github.com/hemkass/payment_tunnel_Front\nApplication is documented by SWAGGER and COMPODOCS\n\n\n\nBuilt With\n\nNestJs\nJavaScript\nTypescript\nPostgreSQL\nPostico\nPrisma\nSwagger\nCompoDocs\n\n\n\n\nInstallation Instructions and Requirement\n\n\n\nNode.js Installation\n\nPlease check that you have Node.js globally installed on your computer. \n If not, try reinstalling Node.js by following this link: https://nodejs.org/en/\n\n\n\n\n\nSQL database\n\n\nTo run, this project require to install PostgreSQL. If you don't have installed it yet, please check on their website : https://www.postgresql.org/\n\n\n\n\n\nClone the Code and install dependencies\n\n The first thing to do is to open git bash command line, and then simply you can clone the project under any of your favorite places as the following:\n\n\ngit clone https://gitlab.com/marine-user-agency/clothes_ecommerce.git\n\n\n\n\n\n\nBefore Starting\n\nPlease to understand infrastructure, routes possibles, watch before :\n\n\n\nCOMPODOCS\n\n\nTo run it :\n\n$ npx @compodoc/compodoc -p tsconfig.json -sOpen your browser and navigate to http://localhost:8080\nif you have any trouble, please check nestJs documentation :\nhttps://docs.nestjs.com/recipes/documentation\n\n\n \n\nSWAGGER\n\nOpen your browser and navigate to http://localhost:3000/api\n\n# Running the app\n\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodStay in touch\n\n=======\n\n\n\n\n\n\n\nc81012daa98c38113692f10fc2646dddc74aa563\n\n\n\n\n\n\n\n\nAuthor - Marine Corbel\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CartsModule\n\n\n\ncluster_CartsModule_providers\n\n\n\ncluster_PaymentsModule\n\n\n\ncluster_PaymentsModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCartsModule\n\nCartsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCartsModule->AppModule\n\n\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nAppModule -->\n\nPaymentsModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nCartsModule -->\n\nPrismaService->CartsModule\n\n\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nProductsModule -->\n\nPrismaService->ProductsModule\n\n\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nCartsService\n\nCartsService\n\nCartsModule -->\n\nCartsService->CartsModule\n\n\n\nProductsModule -->\n\nCartsService->ProductsModule\n\n\n\n\n\nPaymentsService\n\nPaymentsService\n\nPaymentsModule -->\n\nPaymentsService->PaymentsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/removeProductDTO.html":{"url":"classes/removeProductDTO.html","title":"class - removeProductDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  removeProductDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/removeProduct.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cart\n                            \n                            \n                                product\n                            \n                            \n                                productOncart\n                            \n                            \n                                    Optional\n                                quantityRemoved\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Cart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'product to put in cart'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/removeProduct.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/removeProduct.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productOncart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductsOnCart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/removeProduct.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        quantityRemoved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'product quantity wanted, if empty, by default, it will be 1 '})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/removeProduct.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsEnum, IsNumber, IsOptional, IsString } from 'class-validator';\nimport { Cart, Product, ProductsOnCart } from '@prisma/client';\nexport class removeProductDTO {\n  @ApiPropertyOptional({\n    description: 'product quantity wanted, if empty, by default, it will be 1 ',\n  })\n  quantityRemoved?:number;\n  @ApiPropertyOptional({ description: 'product to put in cart' })\n  cart: Cart;\n\n  @ApiProperty()\nproductOncart:ProductsOnCart;\n\n  @ApiProperty()\n  product: Product;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            date   (prisma/.../product-factory.ts)\n                        \n                        \n                            dateInNmonths   (utils/.../utils.ts)\n                        \n                        \n                            ExistingCart   (src/.../existing-cart.ts)\n                        \n                        \n                            ExistingProduct   (src/.../current-product.decorator.ts)\n                        \n                        \n                            ExistingProductOnCart   (src/.../current-productOnCart.decorator.ts)\n                        \n                        \n                            mode   (utils/.../utils.ts)\n                        \n                        \n                            prisma   (prisma/.../seed.ts)\n                        \n                        \n                            randomPictures   (prisma/.../product-factory.ts)\n                        \n                        \n                            randomWordInPrismaEnum   (prisma/.../product-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    prisma/factories/product-factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomPictures\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  let maxIndex = getRandomIntInclusive(1, 10);\n  let pictures: Object[] = [];\n  let pictureObject;\n  for (let index = 0; index \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomWordInPrismaEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (dataArr): any => {\n  //   console.log('mes datas', dataArr);\n  var RoleArray = Object.keys(dataArr).map(function (Role) {\n    return Role;\n  });\n  let randomNumber = getRandomIntInclusive(0, RoleArray.length);\n  return RoleArray[randomNumber];\n}\n                    \n                \n\n\n        \n    \n\n    utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dateInNmonths\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (n) => {\n  let d = new Date();\n  return d.setMonth(d.getMonth() + n);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (arr) => {\n  const mode = {};\n  let max = 0,\n    count = 0;\n\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n    src/carts/decorators/existing-cart.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExistingCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: never, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.existingCart;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/products/decorator/current-product.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExistingProduct\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: never, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.existingProduct;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/products/decorator/current-productOnCart.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExistingProductOnCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: never, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.existingProductOncart;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
